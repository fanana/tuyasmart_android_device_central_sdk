{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u529f\u80fd\u6982\u8ff0 Android \u8bbe\u5907 SDK \u662f\u4e00\u5957\u878d\u5408\u4e86\u7f51\u5173\u3001\u65e5\u5fd7\u7cfb\u7edf\u3001\u8bed\u97f3\u529f\u80fd\u4ee5\u53ca ota \u5347\u7ea7\u7b49\u529f\u80fd\u7684\u5f00\u53d1\u5957\u4ef6\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u57fa\u4e8e\u8be5 sdk \u5b9e\u73b0\u5165\u7f51\u3001\u8bed\u97f3\u63a7\u5236\u3001\u56fa\u4ef6\u548c apk \u5347\u7ea7\u7b49\u64cd\u4f5c\u3002 \u5e94\u7528\u573a\u666f \u672c\u65b9\u6848\u9002\u7528\u4e8e \u5bf9 \u4f20\u7edf\u5e26\u5c4f\u7684 Android \u8bbe\u5907 \u7684\u667a\u80fd\u5316\u6539\u9020\u3002\u5728\u4f20\u7edf\u7684\u5e26\u5c4f Android \u8bbe\u5907\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u5728\u539f\u6709 ROM \u5185\u96c6\u6210 Tuya \u7684\u5f00\u53d1\u5305\uff0c\u5e76\u589e\u52a0 Tuya \u7684\u786c\u4ef6\u901a\u4fe1\u6a21\u5757\uff0c\u5b9e\u73b0\u5bf9\u7f51\u5173\u3001\u8bbe\u5907\u3001\u8bed\u97f3\u7b49\u7684\u63a7\u5236\u80fd\u529b\u3002 \u76ee\u6807\u9886\u57df \u5982 \u5e26\u5c4f\u573a\u666f\u9762\u677f\u3001\u53ef\u89c6\u5bf9\u8bb2\u3001\u5e26\u5c4f\u97f3\u7bb1\u3001\u7535\u89c6\u7b49\uff1b \u9002\u7528\u8303\u56f4 \u4ea7\u54c1\u57fa\u4e8e Android \u7cfb\u7edf \u5e26\u5c4f\u7684 Android \u8bbe\u5907 \u9700\u8981\u5728\u5c4f\u4e0a\u663e\u793a\u8bbe\u5907\u3001\u64cd\u4f5c\u8bbe\u5907 \u6709\u4e00\u5b9a\u5e95\u5c42\u9a71\u52a8\u5f00\u53d1\u80fd\u529b\u53ca\u4e0a\u5c42\u4ea4\u4e92\u5f00\u53d1\u80fd\u529b SDK \u80fd\u529b Android \u8bbe\u5907 SDK \u63d0\u4f9b\u591a\u79cd\u53ef\u9009\u80fd\u529b\uff0c\u5305\u62ec\u4f46\u4e0d\u5c40\u9650\u4e8e\uff1a Zigbee \u7f51\u5173\u80fd\u529b SDK \u8d4b\u4e88\u7b2c\u4e09\u65b9\u7cfb\u7edf\u5177\u5907 Zigbee \u7f51\u5173\u80fd\u529b\uff0c\u901a\u8fc7\u786c\u4ef6\u96c6\u6210\u6d82\u9e26 Zigbee \u6a21\u7ec4\uff0c\u53ef\u5b9e\u73b0\u5bf9Zigbee\u5b50\u8bbe\u5907\u7684\u63a7\u5236\u548c\u7ba1\u7406\u529f\u80fd\u3002 BLE&MESH \u7f51\u5173\u80fd\u529b SDK\u8d4b\u4e88\u7b2c\u4e09\u65b9\u7cfb\u7edf\u5177\u5907ble&mesh\u7f51\u5173\u80fd\u529b\uff0c\u53ef\u5b9e\u73b0\u5bf9\u84dd\u7259\u5b50\u8bbe\u5907\u7684\u63a7\u5236\u548c\u7ba1\u7406\u529f\u80fd\u3002\u76ee\u524d\u84dd\u7259\u7f51\u5173\u80fd\u529b\u4ec5\u652f\u6301\u7279\u5b9a\u7684\u6a21\u7ec4\uff0c\u5177\u4f53\u7684\u652f\u6301\u5217\u8868\u8bf7\u8054\u7cfb\u6d82\u9e26\u7684\u6280\u672f\u652f\u6301\u3002 \u8bed\u97f3\u80fd\u529b \u5305\u62ectts\u64ad\u62a5\u3001ASR\u6587\u672c\u3001IOT\u6280\u80fd\uff08\u8bbe\u5907\u63a7\u5236\u3001\u8bbe\u5907\u63a5\u5165\uff09\u3001\u97f3\u4e50\uff08\u97f3\u4e50\u3001\u5929\u6c14\u3001\u76f8\u58f0\u3001\u7535\u53f0\u7b49\uff09\u3001\u63d0\u9192\u3001\u5a92\u4f53\u63a7\u5236\uff08\u9ea6\u514b\u98ce\u5f00\u542f/\u5173\u95ed\u3001\u64ad\u653e/\u6682\u505c/\u4e0a\u4e00\u9996/\u4e0b\u4e00\u9996\u3001\u84dd\u7259\u5f00\u542f/\u5173\u95ed\u3001\u95f9\u949f\u3001\u97f3\u91cf\u8bbe\u7f6e\uff09\u3001\u6269\u5c55atop\u63a5\u53e3\uff08\u81ea\u5b9a\u4e49\u4e91\u7aef\u4ea4\u4e92\u4e1a\u52a1\uff09\u3002 \u65e5\u5fd7\u7cfb\u7edf \u65e5\u5fd7\u7684\u83b7\u53d6\u4fdd\u5b58\u7b49\u3002 OTA \u529f\u80fd \u652f\u6301 ROM\u56fa\u4ef6/APK \u7684 OTA \u5347\u7ea7\u3002 \u5176\u4ed6\u80fd\u529b\uff1a\u5982\u7528\u6237\u7ba1\u7406\u3001\u5bb6\u5ead\u7ba1\u7406\u3001\u573a\u666f\u7b49\u64cd\u4f5c\u9700\u8981\u57fa\u4e8e Tuya Home SDK \u5b8c\u6210\u3002","title":"\u6982\u89c8"},{"location":"#\u529f\u80fd\u6982\u8ff0","text":"Android \u8bbe\u5907 SDK \u662f\u4e00\u5957\u878d\u5408\u4e86\u7f51\u5173\u3001\u65e5\u5fd7\u7cfb\u7edf\u3001\u8bed\u97f3\u529f\u80fd\u4ee5\u53ca ota \u5347\u7ea7\u7b49\u529f\u80fd\u7684\u5f00\u53d1\u5957\u4ef6\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u57fa\u4e8e\u8be5 sdk \u5b9e\u73b0\u5165\u7f51\u3001\u8bed\u97f3\u63a7\u5236\u3001\u56fa\u4ef6\u548c apk \u5347\u7ea7\u7b49\u64cd\u4f5c\u3002 \u5e94\u7528\u573a\u666f \u672c\u65b9\u6848\u9002\u7528\u4e8e \u5bf9 \u4f20\u7edf\u5e26\u5c4f\u7684 Android \u8bbe\u5907 \u7684\u667a\u80fd\u5316\u6539\u9020\u3002\u5728\u4f20\u7edf\u7684\u5e26\u5c4f Android \u8bbe\u5907\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u5728\u539f\u6709 ROM \u5185\u96c6\u6210 Tuya \u7684\u5f00\u53d1\u5305\uff0c\u5e76\u589e\u52a0 Tuya \u7684\u786c\u4ef6\u901a\u4fe1\u6a21\u5757\uff0c\u5b9e\u73b0\u5bf9\u7f51\u5173\u3001\u8bbe\u5907\u3001\u8bed\u97f3\u7b49\u7684\u63a7\u5236\u80fd\u529b\u3002 \u76ee\u6807\u9886\u57df \u5982 \u5e26\u5c4f\u573a\u666f\u9762\u677f\u3001\u53ef\u89c6\u5bf9\u8bb2\u3001\u5e26\u5c4f\u97f3\u7bb1\u3001\u7535\u89c6\u7b49\uff1b \u9002\u7528\u8303\u56f4 \u4ea7\u54c1\u57fa\u4e8e Android \u7cfb\u7edf \u5e26\u5c4f\u7684 Android \u8bbe\u5907 \u9700\u8981\u5728\u5c4f\u4e0a\u663e\u793a\u8bbe\u5907\u3001\u64cd\u4f5c\u8bbe\u5907 \u6709\u4e00\u5b9a\u5e95\u5c42\u9a71\u52a8\u5f00\u53d1\u80fd\u529b\u53ca\u4e0a\u5c42\u4ea4\u4e92\u5f00\u53d1\u80fd\u529b","title":"\u529f\u80fd\u6982\u8ff0"},{"location":"#sdk-\u80fd\u529b","text":"Android \u8bbe\u5907 SDK \u63d0\u4f9b\u591a\u79cd\u53ef\u9009\u80fd\u529b\uff0c\u5305\u62ec\u4f46\u4e0d\u5c40\u9650\u4e8e\uff1a Zigbee \u7f51\u5173\u80fd\u529b SDK \u8d4b\u4e88\u7b2c\u4e09\u65b9\u7cfb\u7edf\u5177\u5907 Zigbee \u7f51\u5173\u80fd\u529b\uff0c\u901a\u8fc7\u786c\u4ef6\u96c6\u6210\u6d82\u9e26 Zigbee \u6a21\u7ec4\uff0c\u53ef\u5b9e\u73b0\u5bf9Zigbee\u5b50\u8bbe\u5907\u7684\u63a7\u5236\u548c\u7ba1\u7406\u529f\u80fd\u3002 BLE&MESH \u7f51\u5173\u80fd\u529b SDK\u8d4b\u4e88\u7b2c\u4e09\u65b9\u7cfb\u7edf\u5177\u5907ble&mesh\u7f51\u5173\u80fd\u529b\uff0c\u53ef\u5b9e\u73b0\u5bf9\u84dd\u7259\u5b50\u8bbe\u5907\u7684\u63a7\u5236\u548c\u7ba1\u7406\u529f\u80fd\u3002\u76ee\u524d\u84dd\u7259\u7f51\u5173\u80fd\u529b\u4ec5\u652f\u6301\u7279\u5b9a\u7684\u6a21\u7ec4\uff0c\u5177\u4f53\u7684\u652f\u6301\u5217\u8868\u8bf7\u8054\u7cfb\u6d82\u9e26\u7684\u6280\u672f\u652f\u6301\u3002 \u8bed\u97f3\u80fd\u529b \u5305\u62ectts\u64ad\u62a5\u3001ASR\u6587\u672c\u3001IOT\u6280\u80fd\uff08\u8bbe\u5907\u63a7\u5236\u3001\u8bbe\u5907\u63a5\u5165\uff09\u3001\u97f3\u4e50\uff08\u97f3\u4e50\u3001\u5929\u6c14\u3001\u76f8\u58f0\u3001\u7535\u53f0\u7b49\uff09\u3001\u63d0\u9192\u3001\u5a92\u4f53\u63a7\u5236\uff08\u9ea6\u514b\u98ce\u5f00\u542f/\u5173\u95ed\u3001\u64ad\u653e/\u6682\u505c/\u4e0a\u4e00\u9996/\u4e0b\u4e00\u9996\u3001\u84dd\u7259\u5f00\u542f/\u5173\u95ed\u3001\u95f9\u949f\u3001\u97f3\u91cf\u8bbe\u7f6e\uff09\u3001\u6269\u5c55atop\u63a5\u53e3\uff08\u81ea\u5b9a\u4e49\u4e91\u7aef\u4ea4\u4e92\u4e1a\u52a1\uff09\u3002 \u65e5\u5fd7\u7cfb\u7edf \u65e5\u5fd7\u7684\u83b7\u53d6\u4fdd\u5b58\u7b49\u3002 OTA \u529f\u80fd \u652f\u6301 ROM\u56fa\u4ef6/APK \u7684 OTA \u5347\u7ea7\u3002 \u5176\u4ed6\u80fd\u529b\uff1a\u5982\u7528\u6237\u7ba1\u7406\u3001\u5bb6\u5ead\u7ba1\u7406\u3001\u573a\u666f\u7b49\u64cd\u4f5c\u9700\u8981\u57fa\u4e8e Tuya Home SDK \u5b8c\u6210\u3002","title":"SDK \u80fd\u529b"},{"location":"FAQ/","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"changelog/","text":"","title":"\u66f4\u65b0\u65e5\u5fd7"},{"location":"gateway/","text":"\u7f51\u5173\u63a7\u5236 \u7f51\u5173 SDK \u5728 IoT SDK \u7684\u57fa\u7840\u4e0a\u6269\u5c55\u4e86 Zigbee \u7f51\u5173\u548c\u84dd\u7259\u7f51\u5173\u7684\u80fd\u529b\u3002 \u7f51\u5173\u542f\u52a8 \u83b7\u53d6\u7f51\u5173 SDK \u5b9e\u4f8b \u793a\u4f8b\u4ee3\u7801 Java private TuyaGatewaySdk mGateway = TuyaGatewaySdk . getInstance (); Kotlin var mGateway = TuyaGatewaySdk . getInstance () \u6ce8\u518c\u56de\u8c03\u51fd\u6570 \u521b\u5efa GatewayCallbacks \u5bf9\u8c61\uff0c \u8c03\u7528 TuyaGatewaySdk \u7684 setGatewayCallbacks \u51fd\u6570\u6ce8\u518c\u3002\u56de\u8c03\u51fd\u6570\u7684\u5b9e\u73b0\u53c2\u8003 [\u56de\u8c03\u51fd\u6570] (#\u56de\u8c03\u51fd\u6570) \u4e2d\u8bf4\u660e\u3002 \u793a\u4f8b\u4ee3\u7801 Java mGateway . setGatewayCallbacks ( new GatewayCallbacks () { @Override public String onGetIP () { return null ; } @Override public String onGetMacAddress () { return null ; } @Override public void onStatusChanged ( int status ) { } @Override public void onReset ( int type ) { } @Override public void onReboot () { } @Override public void onDataPointCommand ( int type , int dttType , String cid , String groupid , DataPoint [] dataPoint ) { } @Override public void onRawDataPointCommand ( int type , int dttType , String cid , int dpid , String groupid , byte [] data ) { } @Override public void onDataPointQuery ( String cid , int [] dpArray ) { } @Override public void onNetworkStatus ( int status ) { } @Override public void onStartSuccess () { } @Override public void onStartFailure ( int err ) { } @Override public String onGetLogFile () { return null ; } }); Kotlin mGateway . setGatewayCallbacks ( object : GatewayCallbacks { override fun onStatusChanged ( status : Int ) { TODO ( \"Not yet implemented\" ) } override fun onReset ( type : Int ) { TODO ( \"Not yet implemented\" ) } override fun onReboot () { TODO ( \"Not yet implemented\" ) } override fun onDataPointCommand ( type : Int , dttType : Int , cid : String? , groupid : String? , dataPoint : Array < out DataPoint >? ) { TODO ( \"Not yet implemented\" ) } override fun onRawDataPointCommand ( type : Int , dttType : Int , cid : String? , dpid : Int , groupid : String? , data : ByteArray?) { TODO ( \"Not yet implemented\" ) } override fun onDataPointQuery ( cid : String? , dpArray : IntArray?) { TODO ( \"Not yet implemented\" ) } override fun onNetworkStatus ( status : Int ) { TODO ( \"Not yet implemented\" ) } override fun onStartSuccess () { TODO ( \"Not yet implemented\" ) } override fun onStartFailure ( err : Int ) { TODO ( \"Not yet implemented\" ) } override fun onGetLogFile (): String { TODO ( \"Not yet implemented\" ) } override fun onGetIP (): String { TODO ( \"Not yet implemented\" ) } override fun onGetMacAddress (): String { TODO ( \"Not yet implemented\" ) } }) \u914d\u7f6e Zigbee \u6a21\u5757 \u63a5\u53e3\u8bf4\u660e \u5982\u679c\u8bbe\u5907\u9700\u8981\u542f\u7528 zigbee \u7f51\u5173\u529f\u80fd\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u4f7f\u80fd\u3002 void zigbeeEnable ( Context context , final ZigbeeConfig config ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e Context \u4e0a\u4e0b\u6587 ZigbeeConfig Zigbee \u914d\u7f6e ZigbeeConfig \u6210\u5458 \u8bf4\u660e mSerialPort \u4e32\u53e3\u7ec8\u7aef\uff08zigbee\u6a21\u7ec4\u8fde\u63a5\u7684\u4e32\u53e3\u53f7\uff0c\u6839\u636e\u677f\u5b50\u5b9e\u9645\u710a\u63a5\u60c5\u51b5\u586b\u5199\u3002\uff09 mTempDir \u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u8981\u5728app\u4e2d\u521b\u5efa mBinDir bin\u6587\u4ef6\u76ee\u5f55\uff0c\u8be5\u6587\u4ef6\u5939\u4e0b\u4e0d\u8981\u5b58\u653e\u5176\u4ed6\u6587\u4ef6\uff0c\u8be5\u76ee\u5f55\u8981\u5728app\u4e2d\u521b\u5efa mIsCTS \u662f\u5426\u5e26\u6d41\u63a7 \u793a\u4f8b\u4ee3\u7801 Java File filedirs = getFilesDir (); String tmpDir = filedirs + File . separator + \"tmp\" + File . separator ; file = new File ( tmpDir ); if ( ! file . exists ()) { file . mkdir (); } String binDir = filedirs + File . separator + \"bin\" + File . separator ; file = new File ( binDir ); if ( ! file . exists ()) { file . mkdir (); } ZigbeeConfig zigbeeConfig = new ZigbeeConfig (); zigbeeConfig . mBinDir = binDir ; zigbeeConfig . mTempDir = tmpDir ; zigbeeConfig . mSerialPort = \"/dev/ttyS3\" ; zigbeeConfig . mIsCTS = true ; mGateway . zigbeeEnable ( ctx , zigbeeConfig ); Kotlin val filedirs : File = getFilesDir () val tmpDir = filedirs . toString () + File . separator + \"tmp\" + File . separator file = File ( tmpDir ) if ( ! file . exists ()) { file . mkdir () } val binDir = filedirs . toString () + File . separator + \"bin\" + File . separator file = File ( binDir ) if ( ! file . exists ()) { file . mkdir () } val zigbeeConfig = ZigbeeConfig () zigbeeConfig . mBinDir = binDir zigbeeConfig . mTempDir = tmpDir zigbeeConfig . mSerialPort = \"/dev/ttyS3\" zigbeeConfig . mIsCTS = true mGateway . zigbeeEnable ( ctx , zigbeeConfig ) \u914d\u7f6e Bluetooth \u6a21\u5757 \u63a5\u53e3\u8bf4\u660e \u5982\u679c\u8bbe\u5907\u9700\u8981\u542f\u7528\u84dd\u7259\u7f51\u5173\u529f\u80fd\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u4f7f\u80fd\u3002 void bluetoothEnable ( Context context , final BluetoothConfig config ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e Context \u4e0a\u4e0b\u6587 BluetoothConfig Bluetooth \u914d\u7f6e BluetoothConfig \u6210\u5458 \u8bf4\u660e mMode \u84dd\u7259\u6a21\u5f0f \u793a\u4f8b\u4ee3\u7801 Java BluetoothConfig btConfig = new BluetoothConfig (); btConfig . mMode = ( TY_BT_MODE_ADV_MESH | TY_BT_MODE_BLE_MASTER ); mGateway . bluetoothEnable ( ctx , btConfig ); Kotlin val btConfig = BluetoothConfig () btConfig . mMode = TY_BT_MODE_ADV_MESH or TY_BT_MODE_BLE_MASTER mGateway . bluetoothEnable ( ctx , btConfig ) \u542f\u52a8\u7f51\u5173 \u63a5\u53e3\u8bf4\u660e void gatewayStart ( Context context , GatewayConfig config ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e Context \u4e0a\u4e0b\u6587 GatewayConfig \u7f51\u5173\u914d\u7f6e GatewayConfig \u6210\u5458 \u8bf4\u660e mPath \u5b58\u50a8\u8def\u5f84\uff08\u8981\u6c42\u53ef\u8bfb\u5199\u5206\u533a\uff09\uff0c\u8be5\u76ee\u5f55\u8981\u5728app\u4e2d\u521b\u5efa mFirmwareKey \u56fa\u4ef6key\u6216\u8005pid\uff0c\u5411\u6d82\u9e26\u7533\u8bf7\uff0c\u4ea7\u54c1\u552f\u4e00\u3002 \u548cmIsOEM\u914d\u5408\u4f7f\u7528: mIsOEM\u4e3atrue\u65f6\uff0cmFirmwareKey\u4e3a\u56fa\u4ef6key mIsOEM\u4e3afalse\u65f6\uff0cmFirmwareKey\u4e3apid mUUID \u6d82\u9e26IOT\u5e73\u53f0\u83b7\u53d6\u5230\u7684UUID\uff08\u6388\u6743\u4fe1\u606f\uff09\uff0c\u548cmAuthKey\u6210\u5bf9\u4f7f\u7528 mAuthKey \u6d82\u9e26IOT\u5e73\u53f0\u83b7\u53d6\u5230\u7684Authkey\uff08\u6388\u6743\u4fe1\u606f\uff09\uff0c\u548cmUUID\u6210\u5bf9\u4f7f\u7528 mIsOEM \u662f\u5426\u662foem\u4ea7\u54c1\uff0c\u548cmFirmwareKey\u914d\u5408\u4f7f\u7528\u3002 mPackageName App\u7684\u5305\u540d\uff0c\u7528\u4e8eApp/\u56fa\u4ef6\u7684OTA\u5347\u7ea7\u3002 mVersion App/\u8bbe\u5907\u56fa\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u7531\u7528\u6237\u8bbe\u7f6e\uff0c\u683c\u5f0f\u4e3a \u201cxx.xx.xx\u201d\u3002 \u7528\u4e8e\u56fa\u4ef6\u5347\u7ea7\uff0c\u8bbe\u5907\u6fc0\u6d3b\u540e\uff0c\u7248\u672c\u53f7\u4f1a\u5728\u624b\u673aAPP\u4e0a\u8bbe\u5907\u8be6\u60c5\u4e2d\u8fdb\u884c\u5c55\u793a\u3002 mNetworkInterface \u8bbe\u5907\u7684\u7f51\u5361\u540d\u79f0\uff0c\u6bd4\u5982: wlan0, eth0\u3002\u4e3anull\u65f6SDK\u4f1a\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f51\u5361\u3002 mLogLevel SDK\u8f93\u51falog\u4fe1\u606f\u7684\u7ea7\u522b \u8fd4\u56de\u503c\u8bf4\u660e tuyaGatewayStart \u662f\u5f02\u6b65\u8c03\u7528\uff0c\u5176\u7ed3\u679c\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u8fd4\u56de\uff0c\u542f\u52a8\u6210\u529f\u56de\u8c03\u51fd\u6570 onStartSuccess\uff0c\u5931\u8d25\u8c03\u7528\u56de\u8c03\u51fd\u6570onStartFailure\uff0c\u53c2\u8003 \u7f51\u5173\u542f\u52a8\u7ed3\u679c\u56de\u8c03 \u4e2d\u7684\u8bf4\u660e\u3002 \u793a\u4f8b\u4ee3\u7801 Java File filedirs = getFilesDir (); String storageDir = filedirs + File . separator + \"storage\" + File . separator ; File file = new File ( storageDir ); if ( ! file . exists ()) { file . mkdir (); } GatewayConfig config = new GatewayConfig (); config . mFirmwareKey = \"xxxxxxxxxx\" ; config . mUUID = \"xxxxxxxxxx\" ; config . mAuthKey = \"xxxxxxxxxxxxxxx\" ; config . mIsOEM = true ; config . mVersion = \"1.0.0\" ; config . mPackageName = getPackageName (); config . mPath = storageDir ; config . mLogLevel = TY_LOG_LEVEL_DEBUG ; mGateway . gatewayStart ( context , config ); Kotlin val filedirs : File = getFilesDir () val storageDir = filedirs . toString () + File . separator + \"storage\" + File . separator val file = File ( storageDir ) if ( ! file . exists ()) { file . mkdir () } val config = GatewayConfig () config . mFirmwareKey = \"xxxxxxxxxx\" config . mUUID = \"xxxxxxxxxx\" config . mAuthKey = \"xxxxxxxxxxxxxxx\" config . mIsOEM = true config . mVersion = \"1.0.0\" config . mPackageName = getPackageName () config . mPath = storageDir config . mLogLevel = LogLevel . TY_LOG_LEVEL_DEBUG mGateway . gatewayStart ( context , config ) \u7f51\u5173\u6fc0\u6d3b \u542f\u52a8\u7f51\u5173\u6210\u529f\u4e4b\u540e\uff0c\u624d\u53ef\u4ee5\u5165\u7f51\u3002 \u63a5\u53e3\u8bf4\u660e public int tuyaIotBindToken ( String token ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e token \u5165\u7f51 token \uff0c \u9700\u8981\u767b\u5f55\u6d82\u9e26\u8d26\u53f7\u4e4b\u540e\u8c03\u7528 Tuya Smart Android Home SDK \u4e2d\u7684\u63a5\u53e3\u83b7\u53d6\u3002 \u8be6\u60c5\u8bf7\u53c2\u8003 Tuya Smart Android Home SDK - \u8bbe\u5907\u914d\u7f51 - \u83b7\u53d6\u914d\u7f51 token \u7684\u63a5\u53e3\u8bf4\u660e\u3002 \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u8bf4\u660e 0 \u8c03\u7528\u6210\u529f\uff0c\u8bf7\u6ce8\u610f\uff0c\u8c03\u7528\u6210\u529f\u4e0d\u4ee3\u8868\u5df2\u7ecf\u5165\u7f51\u6210\u529f\uff0c\u5165\u7f51\u7ed3\u679c\u901a\u8fc7 onNetworkStatus \u901a\u77e5\u3002 \u975e 0 \u503c \u8c03\u7528\u5931\u8d25\uff0c\u6ca1\u6709\u5165\u7f51\u3002 \u793a\u4f8b\u4ee3\u7801 Java TuyaHomeSdk . getActivatorInstance (). getActivatorToken ( homeId , new ITuyaActivatorGetToken () { @Override public void onSuccess ( final String token ) { threadPoolExecutor . execute ( new Runnable () { @Override public void run () { Log . e ( TAG , \"get token suc , iot bind token\" ); TuyaGatewaySdk . getInstance (). tuyaIotBindToken ( token ); } }); } @Override public void onFailure ( String errorCode , String errorMsg ) { Log . e ( TAG , \"get token failed \" + errorCode + \", \" + errorMsg ); } }); DP \u70b9\u4e0a\u62a5 \u5f02\u6b65\u4e0a\u62a5 \u63a5\u53e3\u8bf4\u660e \u540c\u6b65\u4e0a\u4f20\u900f\u4f20\u578b DP \u70b9\u6570\u636e\u3002 public int tuyaIotReportDataPointJsonAsync ( String devId , DataPoint [] dataPoint ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e devId \u5982\u679c\u662f\u4e3b\u8bbe\u5907\uff0cdevId \u662f\u81ea\u8bbe\u5907 id\uff1b\u5982\u679c\u662f\u7f51\u5173 /soc/mcu\uff0c\u5219 devId \u4e3a null dataPoint dp \u70b9\u4fe1\u606f\uff0c\u53c2\u8003 TuyaGatewaySdk.DataPoint TuyaGatewaySdk.DataPoint \u6210\u5458 \u8bf4\u660e mId \u5728\u6d82\u9e26 IoT \u5e73\u53f0\u4e0a\u5b9a\u4e49\u7684\u529f\u80fd\u70b9\u7f16\u53f7 mType \u529f\u80fd\u70b9\u7684\u6570\u636e\u7c7b\u578b\uff0c\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u8bf7\u53c2\u89c1\u6d82\u9e26\u6587\u6863\u4e2d\u5fc3\u7684\u529f\u80fd\u70b9\u5b9a\u4e49\uff0c\u53c2\u8003 \u81ea\u5b9a\u4e49\u529f\u80fd : TYPE_BOOL\uff1a\u5e03\u5c14\u578b TYPE_VALUE\uff1a\u6570\u503c\u578b TYPE_STRING\uff1a\u5b57\u7b26\u4e32\u578b TYPE_ENUM\uff1a\u679a\u4e3e\u578b TYPE_BITMAP\uff1a\u6545\u969c\u578b mData \u529f\u80fd\u70b9\u7684\u503c\uff0c\u6570\u636e\u7c7b\u578b\u7531 mType \u6307\u5b9a\u3002 mTimeStamp \u65f6\u95f4\u6233\uff0c\u503c\u4e3a 0 \u65f6\u91c7\u7528\u5f53\u524d\u7684\u65f6\u95f4\u3002 \u540c\u6b65\u4e0a\u62a5 \u63a5\u53e3\u8bf4\u660e public int tuyaIotReportDataPointRawSync ( String devId , int dataPointId , byte [] data , int timeout ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 devId \u5982\u679c\u662f\u4e3b\u8bbe\u5907\uff0cdevId \u662f\u81ea\u8bbe\u5907 id\uff1b\u5982\u679c\u662f\u7f51\u5173 /soc/mcu\uff0c\u5219 devId \u4e3a null dataPointId \u5728\u6d82\u9e26 IoT \u5e73\u53f0\u4e0a\u5b9a\u4e49\u7684\u529f\u80fd\u70b9\u7f16\u53f7 data \u900f\u4f20\u578b dp \u70b9\u6570\u636e timeout \u51fd\u6570\u963b\u585e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d ATOP\u900f\u4f20\u63a5\u53e3 \u63a5\u53e3\u8bf4\u660e ATopResponse tuyaIotAtopPost ( String api , String version , String postData ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e api \u63a5\u53e3\u540d version \u63a5\u53e3\u7248\u672c postData \u4e0a\u62a5\u4e91\u7aef\u7684\u6570\u636ejson\u5b57\u7b26\u4e32 \u8fd4\u56de\u503c \u542b\u4e49 ATopResponse \u5305\u542berrCode\uff08\u9519\u8bef\u7801\uff09\u548cresult\uff08\u8bf7\u6c42\u7ed3\u679c\uff09\u4e24\u4e2a\u5b57\u6bb5\u3002\u8bf7\u6c42\u6b63\u5e38\u8fd4\u56de\u65f6errCode\u4e3a0 \u793a\u4f8b\u4ee3\u7801 Java ATopResponse response = mGateway . tuyaIotAtopPost ( \"tuya.xx.xx\" , \"1.0\" , \"\" ); if ( response . errCode == 0 ) { Log . d ( TAG , \"result: \" + response . result ); } \u83b7\u53d6\u865a\u62df ID \u7f51\u5173\u8bbe\u5907\u6fc0\u6d3b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u65b9\u6cd5\u83b7\u53d6\u8bbe\u5907\u7684\u865a\u62df ID \u3002 \u63a5\u53e3\u8bf4\u660e String getId () \uff1b \u83b7\u53d6 SDK \u7248\u672c\u4fe1\u606f \u63a5\u53e3\u8bf4\u660e String getVersion (); \u7f51\u5173\u91cd\u7f6e \u7f51\u5173\u672c\u5730\u6062\u590d\u51fa\u5382\u8bbe\u7f6e\uff0c\u7f51\u5173\u4f1a\u4ece\u4e91\u7aef\u89e3\u7ed1\uff0c\u5e76\u5c06\u5b50\u8bbe\u5907\u7b49\u6570\u636e\u4fe1\u606f\u5168\u90e8\u5220\u9664\u3002 \u63a5\u53e3\u8bf4\u660e public int gatewayReset (); \u7f51\u5173\u91cd\u7f6e\u540e\u4f1a\u89e6\u53d1 \u7f51\u5173\u91cd\u7f6e\u56de\u8c03 \u9500\u6bc1\u7f51\u5173 SDK \u5b9e\u4f8b \u63a5\u53e3\u8bf4\u660e void tuyaGatewayRelease (); \u56de\u8c03\u51fd\u6570 \u5728\u8c03\u7528 gatewayStart \u4e4b\u524d\u5e94\u8be5\u6ce8\u518c GatewayCallbacks \u56de\u8c03\u51fd\u6570\uff0c\u4ee5\u63a5\u6536\u5904\u7406\u7ed3\u679c\u3002 \u7f51\u5173\u72b6\u6001\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u7f51\u5173\u72b6\u6001\u66f4\u65b0\u65f6\u56de\u8c03\u3002 void onStatusChanged ( int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 status \u72b6\u6001\u66f4\u6539\u901a\u77e5\u56de\u8c03\u51fd\u6570\uff1a STATUS_RESET\uff1a\u7f51\u5173\u88ab\u91cd\u7f6e STATUS_ACTIVATED\uff1a\u7f51\u5173\u88ab\u6fc0\u6d3b STATUS_FIRST_START\uff1a\u7f51\u5173\u7b2c\u4e00\u6b21\u542f\u52a8 STATUS_NORMAL\uff1a\u7f51\u5173\u6fc0\u6d3b\u800c\u4e14\u5df2\u7ecf\u542f\u52a8 \u7f51\u5173\u91cd\u7f6e\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u7f51\u5173\u88ab\u91cd\u7f6e\u540e\u56de\u8c03\uff0capp \u9700\u8981\u6839\u636e type \u7684\u503c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 void onReset ( int type ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u91cd\u7f6e\u7c7b\u578b\uff1a RESET_TYPE_LOCAL_RESET_FACTORY\uff1a\u672c\u5730\u6062\u590d\u5de5\u5382\u8bbe\u7f6e RESET_TYPE_REMOTE_UNACTIVE\uff1a\u8fdc\u7aef\u7f51\u5173\u91cd\u7f6e\uff0c\u5373\u4e3a\u901a\u8fc7 APP \u53d6\u6d88\u4e0e\u8d26\u53f7\u7ed1\u5b9a RESET_TYPE_LOCAL_UNACTIVE\uff1a\u672c\u5730\u7f51\u5173\u91cd\u7f6e\uff0c\u53d6\u6d88\u4e0e\u8d26\u53f7\u7ed1\u5b9a RESET_TYPE_REMOTE_RESET_FACTORY\uff1a\u8fdc\u7aef\u6062\u590d\u5de5\u5382\u8bbe\u7f6e RESET_TYPE_RESET_DATA_FACTORY\uff1a\u6062\u590d\u6570\u636e\u5de5\u5382\u8bbe\u7f6e \u91cd\u542f\u8bf7\u6c42\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u7f51\u5173\u8bf7\u6c42\u91cd\u542f\u8bbe\u5907\u3002 void onReboot (); \u7f51\u5173\u7f51\u7edc\u72b6\u6001\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u7f51\u5173\u5df2\u7ecf\u88ab\u91cd\u7f6e\uff0capp \u9700\u8981\u6839\u636e type \u7684\u503c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 void onNetworkStatus ( int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u7f51\u7edc\u72b6\u6001\uff1a CLOUD_UNCONNECTED\uff1a\u8054\u7f51\u5931\u8d25 CLOUD_CONNECTED\uff1a\u4e91\u7aef\u8fde\u63a5\u6210\u529f\uff0c\u8bbe\u5907\u5df2\u7ecf\u6fc0\u6d3b \u7f51\u5173 DP \u70b9\u4e0b\u53d1\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e DP \u70b9\u4e0b\u53d1\u3002 void onDataPointCommand ( @DataPointCommandType int type , @DataPointTransportType int dttType , String cid , String groupid , DataPoint [] dataPoint ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u6307\u4ee4\u7c7b\u578b\uff1a DATAPOINT_CMD_LAN\uff1aLAN \u89e6\u53d1 DATAPOINT_CMD_MQ\uff1aMQTT \u89e6\u53d1 DATAPOINT_CMD_TIMER\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_CMD_SCENE_LINKAGE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 DATAPOINT_CMD_RELIABLE_TRANSFER\uff1a\u91cd\u53d1 dttType \u4f20\u8f93\u65b9\u5f0f\uff1a DATAPOINT_DTT_SCT_UNC\uff1aLAN \u89e6\u53d1 DATAPOINT_DTT_SCT_BNC\uff1aMQTT \u89e6\u53d1 DATAPOINT_DTT_SCT_MNC\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_DTT_SCT_SCENE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID groupid \u7fa4\u7ec4 ID\uff0c\u53ea\u6709\u5f53 dtt_tp = 2 \u65f6\uff0c\u8be5\u5b57\u6bb5\u624d\u6709\u6548\u3002 dataPoint dp\u70b9\u6570\u636e\uff0cDataPoint\u7c7b\u578b\u53c2\u8003 DP\u70b9\u5f02\u6b65\u4e0a\u62a5 \u4e2d\u7684\u8bf4\u660e\u3002 \u7f51\u5173 DP \u70b9\u900f\u4f20\u6570\u636e\u4e0b\u53d1\u56de\u8c03 \u7528\u4e8e\u900f\u4f20\u7528\u6237\u81ea\u5b9a\u4e49\u7684 DP \u70b9\u6570\u636e \u63a5\u53e3\u8bf4\u660e void onRawDataPointCommand ( @DataPointCommandType int type , @DataPointTransportType int dttType , String cid , int dpid , String groupid , byte [] data ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u6307\u4ee4\u7c7b\u578b\uff1a DATAPOINT_CMD_LAN\uff1aLAN \u89e6\u53d1 DATAPOINT_CMD_MQ\uff1aMQTT \u89e6\u53d1 DATAPOINT_CMD_TIMER\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_CMD_SCENE_LINKAGE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 DATAPOINT_CMD_RELIABLE_TRANSFER\uff1a\u91cd\u53d1 dttType \u4f20\u8f93\u65b9\u5f0f\uff1a DATAPOINT_DTT_SCT_UNC\uff1aLAN \u89e6\u53d1 DATAPOINT_DTT_SCT_BNC\uff1aMQTT \u89e6\u53d1 DATAPOINT_DTT_SCT_MNC\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_DTT_SCT_SCENE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID dpid DP \u70b9\u7684 ID groupid \u7fa4\u7ec4 ID\uff0c\u53ea\u6709\u5f53 dtt_tp = 2 \u65f6\uff0c\u8be5\u5b57\u6bb5\u624d\u6709\u6548\u3002 data DP \u70b9\u6570\u636e \u7f51\u5173 DP \u70b9\u6570\u636e\u67e5\u8be2\u56de\u8c03 \u7528\u4e8e\u8bbe\u5907\u7279\u5b9a\u6570\u636e\u67e5\u8be2 \u63a5\u53e3\u8bf4\u660e void onDataPointQuery ( String cid , int [] dpArray ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID dpArray \u7528\u6237\u5b9a\u4e49\u529f\u80fd\u70b9\u5e8f\u53f7\u96c6 \u83b7\u53d6 IP \u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u83b7\u53d6\u8bbe\u5907IP\uff0c\u5df2\u5e9f\u5f03\u3002 String onGetIP (); \u83b7\u53d6 MAC \u5730\u5740\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u83b7\u53d6\u8bbe\u5907 MAC \u5730\u5740\uff0c\u5df2\u5e9f\u5f03\u3002 String onGetMacAddress (); \u7f51\u5173\u542f\u52a8\u7ed3\u679c\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e tuyaIotStart \u6210\u529f\u65f6\u8c03\u7528 onStartSuccess \u56de\u8c03\u3002 void onStartSuccess (); \u63a5\u53e3\u8bf4\u660e tuyaIotStart \u5931\u8d25\u65f6\u8c03\u7528 onStartFailure \u56de\u8c03\u3002 java void onStartFailure(int err); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u9519\u8bef\u7801\uff0c\u4e3a GatewayError \u4e2d\u5b9a\u4e49\u7684\u503c\u4e4b\u4e00\uff0c\u5e38\u89c1\u9519\u8bef\uff1a ERROR_COM_ERROR\uff1a\u7f51\u7edc\u8fde\u63a5\u9519\u8bef ERROR_INVALID_PARM\uff1a\u53c2\u6570\u9519\u8bef ERROR_INVALID_STATUS\uff1a\u72b6\u6001\u9519\u8bef \u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e String onGetLogFile (); \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 String \u9700\u8981\u4fdd\u5b58\u7684\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84","title":"\u7f51\u5173\u63a7\u5236"},{"location":"gateway/#\u7f51\u5173\u63a7\u5236","text":"\u7f51\u5173 SDK \u5728 IoT SDK \u7684\u57fa\u7840\u4e0a\u6269\u5c55\u4e86 Zigbee \u7f51\u5173\u548c\u84dd\u7259\u7f51\u5173\u7684\u80fd\u529b\u3002","title":"\u7f51\u5173\u63a7\u5236"},{"location":"gateway/#\u7f51\u5173\u542f\u52a8","text":"","title":"\u7f51\u5173\u542f\u52a8"},{"location":"gateway/#\u83b7\u53d6\u7f51\u5173-sdk-\u5b9e\u4f8b","text":"\u793a\u4f8b\u4ee3\u7801 Java private TuyaGatewaySdk mGateway = TuyaGatewaySdk . getInstance (); Kotlin var mGateway = TuyaGatewaySdk . getInstance ()","title":"\u83b7\u53d6\u7f51\u5173 SDK \u5b9e\u4f8b"},{"location":"gateway/#\u6ce8\u518c\u56de\u8c03\u51fd\u6570","text":"\u521b\u5efa GatewayCallbacks \u5bf9\u8c61\uff0c \u8c03\u7528 TuyaGatewaySdk \u7684 setGatewayCallbacks \u51fd\u6570\u6ce8\u518c\u3002\u56de\u8c03\u51fd\u6570\u7684\u5b9e\u73b0\u53c2\u8003 [\u56de\u8c03\u51fd\u6570] (#\u56de\u8c03\u51fd\u6570) \u4e2d\u8bf4\u660e\u3002 \u793a\u4f8b\u4ee3\u7801 Java mGateway . setGatewayCallbacks ( new GatewayCallbacks () { @Override public String onGetIP () { return null ; } @Override public String onGetMacAddress () { return null ; } @Override public void onStatusChanged ( int status ) { } @Override public void onReset ( int type ) { } @Override public void onReboot () { } @Override public void onDataPointCommand ( int type , int dttType , String cid , String groupid , DataPoint [] dataPoint ) { } @Override public void onRawDataPointCommand ( int type , int dttType , String cid , int dpid , String groupid , byte [] data ) { } @Override public void onDataPointQuery ( String cid , int [] dpArray ) { } @Override public void onNetworkStatus ( int status ) { } @Override public void onStartSuccess () { } @Override public void onStartFailure ( int err ) { } @Override public String onGetLogFile () { return null ; } }); Kotlin mGateway . setGatewayCallbacks ( object : GatewayCallbacks { override fun onStatusChanged ( status : Int ) { TODO ( \"Not yet implemented\" ) } override fun onReset ( type : Int ) { TODO ( \"Not yet implemented\" ) } override fun onReboot () { TODO ( \"Not yet implemented\" ) } override fun onDataPointCommand ( type : Int , dttType : Int , cid : String? , groupid : String? , dataPoint : Array < out DataPoint >? ) { TODO ( \"Not yet implemented\" ) } override fun onRawDataPointCommand ( type : Int , dttType : Int , cid : String? , dpid : Int , groupid : String? , data : ByteArray?) { TODO ( \"Not yet implemented\" ) } override fun onDataPointQuery ( cid : String? , dpArray : IntArray?) { TODO ( \"Not yet implemented\" ) } override fun onNetworkStatus ( status : Int ) { TODO ( \"Not yet implemented\" ) } override fun onStartSuccess () { TODO ( \"Not yet implemented\" ) } override fun onStartFailure ( err : Int ) { TODO ( \"Not yet implemented\" ) } override fun onGetLogFile (): String { TODO ( \"Not yet implemented\" ) } override fun onGetIP (): String { TODO ( \"Not yet implemented\" ) } override fun onGetMacAddress (): String { TODO ( \"Not yet implemented\" ) } })","title":"\u6ce8\u518c\u56de\u8c03\u51fd\u6570"},{"location":"gateway/#\u914d\u7f6e-zigbee-\u6a21\u5757","text":"\u63a5\u53e3\u8bf4\u660e \u5982\u679c\u8bbe\u5907\u9700\u8981\u542f\u7528 zigbee \u7f51\u5173\u529f\u80fd\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u4f7f\u80fd\u3002 void zigbeeEnable ( Context context , final ZigbeeConfig config ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e Context \u4e0a\u4e0b\u6587 ZigbeeConfig Zigbee \u914d\u7f6e ZigbeeConfig \u6210\u5458 \u8bf4\u660e mSerialPort \u4e32\u53e3\u7ec8\u7aef\uff08zigbee\u6a21\u7ec4\u8fde\u63a5\u7684\u4e32\u53e3\u53f7\uff0c\u6839\u636e\u677f\u5b50\u5b9e\u9645\u710a\u63a5\u60c5\u51b5\u586b\u5199\u3002\uff09 mTempDir \u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u8981\u5728app\u4e2d\u521b\u5efa mBinDir bin\u6587\u4ef6\u76ee\u5f55\uff0c\u8be5\u6587\u4ef6\u5939\u4e0b\u4e0d\u8981\u5b58\u653e\u5176\u4ed6\u6587\u4ef6\uff0c\u8be5\u76ee\u5f55\u8981\u5728app\u4e2d\u521b\u5efa mIsCTS \u662f\u5426\u5e26\u6d41\u63a7 \u793a\u4f8b\u4ee3\u7801 Java File filedirs = getFilesDir (); String tmpDir = filedirs + File . separator + \"tmp\" + File . separator ; file = new File ( tmpDir ); if ( ! file . exists ()) { file . mkdir (); } String binDir = filedirs + File . separator + \"bin\" + File . separator ; file = new File ( binDir ); if ( ! file . exists ()) { file . mkdir (); } ZigbeeConfig zigbeeConfig = new ZigbeeConfig (); zigbeeConfig . mBinDir = binDir ; zigbeeConfig . mTempDir = tmpDir ; zigbeeConfig . mSerialPort = \"/dev/ttyS3\" ; zigbeeConfig . mIsCTS = true ; mGateway . zigbeeEnable ( ctx , zigbeeConfig ); Kotlin val filedirs : File = getFilesDir () val tmpDir = filedirs . toString () + File . separator + \"tmp\" + File . separator file = File ( tmpDir ) if ( ! file . exists ()) { file . mkdir () } val binDir = filedirs . toString () + File . separator + \"bin\" + File . separator file = File ( binDir ) if ( ! file . exists ()) { file . mkdir () } val zigbeeConfig = ZigbeeConfig () zigbeeConfig . mBinDir = binDir zigbeeConfig . mTempDir = tmpDir zigbeeConfig . mSerialPort = \"/dev/ttyS3\" zigbeeConfig . mIsCTS = true mGateway . zigbeeEnable ( ctx , zigbeeConfig )","title":"\u914d\u7f6e Zigbee \u6a21\u5757"},{"location":"gateway/#\u914d\u7f6e-bluetooth-\u6a21\u5757","text":"\u63a5\u53e3\u8bf4\u660e \u5982\u679c\u8bbe\u5907\u9700\u8981\u542f\u7528\u84dd\u7259\u7f51\u5173\u529f\u80fd\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u4f7f\u80fd\u3002 void bluetoothEnable ( Context context , final BluetoothConfig config ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e Context \u4e0a\u4e0b\u6587 BluetoothConfig Bluetooth \u914d\u7f6e BluetoothConfig \u6210\u5458 \u8bf4\u660e mMode \u84dd\u7259\u6a21\u5f0f \u793a\u4f8b\u4ee3\u7801 Java BluetoothConfig btConfig = new BluetoothConfig (); btConfig . mMode = ( TY_BT_MODE_ADV_MESH | TY_BT_MODE_BLE_MASTER ); mGateway . bluetoothEnable ( ctx , btConfig ); Kotlin val btConfig = BluetoothConfig () btConfig . mMode = TY_BT_MODE_ADV_MESH or TY_BT_MODE_BLE_MASTER mGateway . bluetoothEnable ( ctx , btConfig )","title":"\u914d\u7f6e Bluetooth \u6a21\u5757"},{"location":"gateway/#\u542f\u52a8\u7f51\u5173","text":"\u63a5\u53e3\u8bf4\u660e void gatewayStart ( Context context , GatewayConfig config ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e Context \u4e0a\u4e0b\u6587 GatewayConfig \u7f51\u5173\u914d\u7f6e GatewayConfig \u6210\u5458 \u8bf4\u660e mPath \u5b58\u50a8\u8def\u5f84\uff08\u8981\u6c42\u53ef\u8bfb\u5199\u5206\u533a\uff09\uff0c\u8be5\u76ee\u5f55\u8981\u5728app\u4e2d\u521b\u5efa mFirmwareKey \u56fa\u4ef6key\u6216\u8005pid\uff0c\u5411\u6d82\u9e26\u7533\u8bf7\uff0c\u4ea7\u54c1\u552f\u4e00\u3002 \u548cmIsOEM\u914d\u5408\u4f7f\u7528: mIsOEM\u4e3atrue\u65f6\uff0cmFirmwareKey\u4e3a\u56fa\u4ef6key mIsOEM\u4e3afalse\u65f6\uff0cmFirmwareKey\u4e3apid mUUID \u6d82\u9e26IOT\u5e73\u53f0\u83b7\u53d6\u5230\u7684UUID\uff08\u6388\u6743\u4fe1\u606f\uff09\uff0c\u548cmAuthKey\u6210\u5bf9\u4f7f\u7528 mAuthKey \u6d82\u9e26IOT\u5e73\u53f0\u83b7\u53d6\u5230\u7684Authkey\uff08\u6388\u6743\u4fe1\u606f\uff09\uff0c\u548cmUUID\u6210\u5bf9\u4f7f\u7528 mIsOEM \u662f\u5426\u662foem\u4ea7\u54c1\uff0c\u548cmFirmwareKey\u914d\u5408\u4f7f\u7528\u3002 mPackageName App\u7684\u5305\u540d\uff0c\u7528\u4e8eApp/\u56fa\u4ef6\u7684OTA\u5347\u7ea7\u3002 mVersion App/\u8bbe\u5907\u56fa\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u7531\u7528\u6237\u8bbe\u7f6e\uff0c\u683c\u5f0f\u4e3a \u201cxx.xx.xx\u201d\u3002 \u7528\u4e8e\u56fa\u4ef6\u5347\u7ea7\uff0c\u8bbe\u5907\u6fc0\u6d3b\u540e\uff0c\u7248\u672c\u53f7\u4f1a\u5728\u624b\u673aAPP\u4e0a\u8bbe\u5907\u8be6\u60c5\u4e2d\u8fdb\u884c\u5c55\u793a\u3002 mNetworkInterface \u8bbe\u5907\u7684\u7f51\u5361\u540d\u79f0\uff0c\u6bd4\u5982: wlan0, eth0\u3002\u4e3anull\u65f6SDK\u4f1a\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f51\u5361\u3002 mLogLevel SDK\u8f93\u51falog\u4fe1\u606f\u7684\u7ea7\u522b \u8fd4\u56de\u503c\u8bf4\u660e tuyaGatewayStart \u662f\u5f02\u6b65\u8c03\u7528\uff0c\u5176\u7ed3\u679c\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u8fd4\u56de\uff0c\u542f\u52a8\u6210\u529f\u56de\u8c03\u51fd\u6570 onStartSuccess\uff0c\u5931\u8d25\u8c03\u7528\u56de\u8c03\u51fd\u6570onStartFailure\uff0c\u53c2\u8003 \u7f51\u5173\u542f\u52a8\u7ed3\u679c\u56de\u8c03 \u4e2d\u7684\u8bf4\u660e\u3002 \u793a\u4f8b\u4ee3\u7801 Java File filedirs = getFilesDir (); String storageDir = filedirs + File . separator + \"storage\" + File . separator ; File file = new File ( storageDir ); if ( ! file . exists ()) { file . mkdir (); } GatewayConfig config = new GatewayConfig (); config . mFirmwareKey = \"xxxxxxxxxx\" ; config . mUUID = \"xxxxxxxxxx\" ; config . mAuthKey = \"xxxxxxxxxxxxxxx\" ; config . mIsOEM = true ; config . mVersion = \"1.0.0\" ; config . mPackageName = getPackageName (); config . mPath = storageDir ; config . mLogLevel = TY_LOG_LEVEL_DEBUG ; mGateway . gatewayStart ( context , config ); Kotlin val filedirs : File = getFilesDir () val storageDir = filedirs . toString () + File . separator + \"storage\" + File . separator val file = File ( storageDir ) if ( ! file . exists ()) { file . mkdir () } val config = GatewayConfig () config . mFirmwareKey = \"xxxxxxxxxx\" config . mUUID = \"xxxxxxxxxx\" config . mAuthKey = \"xxxxxxxxxxxxxxx\" config . mIsOEM = true config . mVersion = \"1.0.0\" config . mPackageName = getPackageName () config . mPath = storageDir config . mLogLevel = LogLevel . TY_LOG_LEVEL_DEBUG mGateway . gatewayStart ( context , config )","title":"\u542f\u52a8\u7f51\u5173"},{"location":"gateway/#\u7f51\u5173\u6fc0\u6d3b","text":"\u542f\u52a8\u7f51\u5173\u6210\u529f\u4e4b\u540e\uff0c\u624d\u53ef\u4ee5\u5165\u7f51\u3002 \u63a5\u53e3\u8bf4\u660e public int tuyaIotBindToken ( String token ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e token \u5165\u7f51 token \uff0c \u9700\u8981\u767b\u5f55\u6d82\u9e26\u8d26\u53f7\u4e4b\u540e\u8c03\u7528 Tuya Smart Android Home SDK \u4e2d\u7684\u63a5\u53e3\u83b7\u53d6\u3002 \u8be6\u60c5\u8bf7\u53c2\u8003 Tuya Smart Android Home SDK - \u8bbe\u5907\u914d\u7f51 - \u83b7\u53d6\u914d\u7f51 token \u7684\u63a5\u53e3\u8bf4\u660e\u3002 \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u8bf4\u660e 0 \u8c03\u7528\u6210\u529f\uff0c\u8bf7\u6ce8\u610f\uff0c\u8c03\u7528\u6210\u529f\u4e0d\u4ee3\u8868\u5df2\u7ecf\u5165\u7f51\u6210\u529f\uff0c\u5165\u7f51\u7ed3\u679c\u901a\u8fc7 onNetworkStatus \u901a\u77e5\u3002 \u975e 0 \u503c \u8c03\u7528\u5931\u8d25\uff0c\u6ca1\u6709\u5165\u7f51\u3002 \u793a\u4f8b\u4ee3\u7801 Java TuyaHomeSdk . getActivatorInstance (). getActivatorToken ( homeId , new ITuyaActivatorGetToken () { @Override public void onSuccess ( final String token ) { threadPoolExecutor . execute ( new Runnable () { @Override public void run () { Log . e ( TAG , \"get token suc , iot bind token\" ); TuyaGatewaySdk . getInstance (). tuyaIotBindToken ( token ); } }); } @Override public void onFailure ( String errorCode , String errorMsg ) { Log . e ( TAG , \"get token failed \" + errorCode + \", \" + errorMsg ); } });","title":"\u7f51\u5173\u6fc0\u6d3b"},{"location":"gateway/#dp-\u70b9\u4e0a\u62a5","text":"","title":"DP \u70b9\u4e0a\u62a5"},{"location":"gateway/#\u5f02\u6b65\u4e0a\u62a5","text":"\u63a5\u53e3\u8bf4\u660e \u540c\u6b65\u4e0a\u4f20\u900f\u4f20\u578b DP \u70b9\u6570\u636e\u3002 public int tuyaIotReportDataPointJsonAsync ( String devId , DataPoint [] dataPoint ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e devId \u5982\u679c\u662f\u4e3b\u8bbe\u5907\uff0cdevId \u662f\u81ea\u8bbe\u5907 id\uff1b\u5982\u679c\u662f\u7f51\u5173 /soc/mcu\uff0c\u5219 devId \u4e3a null dataPoint dp \u70b9\u4fe1\u606f\uff0c\u53c2\u8003 TuyaGatewaySdk.DataPoint TuyaGatewaySdk.DataPoint \u6210\u5458 \u8bf4\u660e mId \u5728\u6d82\u9e26 IoT \u5e73\u53f0\u4e0a\u5b9a\u4e49\u7684\u529f\u80fd\u70b9\u7f16\u53f7 mType \u529f\u80fd\u70b9\u7684\u6570\u636e\u7c7b\u578b\uff0c\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u8bf7\u53c2\u89c1\u6d82\u9e26\u6587\u6863\u4e2d\u5fc3\u7684\u529f\u80fd\u70b9\u5b9a\u4e49\uff0c\u53c2\u8003 \u81ea\u5b9a\u4e49\u529f\u80fd : TYPE_BOOL\uff1a\u5e03\u5c14\u578b TYPE_VALUE\uff1a\u6570\u503c\u578b TYPE_STRING\uff1a\u5b57\u7b26\u4e32\u578b TYPE_ENUM\uff1a\u679a\u4e3e\u578b TYPE_BITMAP\uff1a\u6545\u969c\u578b mData \u529f\u80fd\u70b9\u7684\u503c\uff0c\u6570\u636e\u7c7b\u578b\u7531 mType \u6307\u5b9a\u3002 mTimeStamp \u65f6\u95f4\u6233\uff0c\u503c\u4e3a 0 \u65f6\u91c7\u7528\u5f53\u524d\u7684\u65f6\u95f4\u3002","title":"\u5f02\u6b65\u4e0a\u62a5"},{"location":"gateway/#\u540c\u6b65\u4e0a\u62a5","text":"\u63a5\u53e3\u8bf4\u660e public int tuyaIotReportDataPointRawSync ( String devId , int dataPointId , byte [] data , int timeout ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 devId \u5982\u679c\u662f\u4e3b\u8bbe\u5907\uff0cdevId \u662f\u81ea\u8bbe\u5907 id\uff1b\u5982\u679c\u662f\u7f51\u5173 /soc/mcu\uff0c\u5219 devId \u4e3a null dataPointId \u5728\u6d82\u9e26 IoT \u5e73\u53f0\u4e0a\u5b9a\u4e49\u7684\u529f\u80fd\u70b9\u7f16\u53f7 data \u900f\u4f20\u578b dp \u70b9\u6570\u636e timeout \u51fd\u6570\u963b\u585e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d","title":"\u540c\u6b65\u4e0a\u62a5"},{"location":"gateway/#atop\u900f\u4f20\u63a5\u53e3","text":"\u63a5\u53e3\u8bf4\u660e ATopResponse tuyaIotAtopPost ( String api , String version , String postData ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e api \u63a5\u53e3\u540d version \u63a5\u53e3\u7248\u672c postData \u4e0a\u62a5\u4e91\u7aef\u7684\u6570\u636ejson\u5b57\u7b26\u4e32 \u8fd4\u56de\u503c \u542b\u4e49 ATopResponse \u5305\u542berrCode\uff08\u9519\u8bef\u7801\uff09\u548cresult\uff08\u8bf7\u6c42\u7ed3\u679c\uff09\u4e24\u4e2a\u5b57\u6bb5\u3002\u8bf7\u6c42\u6b63\u5e38\u8fd4\u56de\u65f6errCode\u4e3a0 \u793a\u4f8b\u4ee3\u7801 Java ATopResponse response = mGateway . tuyaIotAtopPost ( \"tuya.xx.xx\" , \"1.0\" , \"\" ); if ( response . errCode == 0 ) { Log . d ( TAG , \"result: \" + response . result ); }","title":"ATOP\u900f\u4f20\u63a5\u53e3"},{"location":"gateway/#\u83b7\u53d6\u865a\u62df-id","text":"\u7f51\u5173\u8bbe\u5907\u6fc0\u6d3b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u65b9\u6cd5\u83b7\u53d6\u8bbe\u5907\u7684\u865a\u62df ID \u3002 \u63a5\u53e3\u8bf4\u660e String getId () \uff1b","title":"\u83b7\u53d6\u865a\u62df ID"},{"location":"gateway/#\u83b7\u53d6-sdk-\u7248\u672c\u4fe1\u606f","text":"\u63a5\u53e3\u8bf4\u660e String getVersion ();","title":"\u83b7\u53d6 SDK \u7248\u672c\u4fe1\u606f"},{"location":"gateway/#\u7f51\u5173\u91cd\u7f6e","text":"\u7f51\u5173\u672c\u5730\u6062\u590d\u51fa\u5382\u8bbe\u7f6e\uff0c\u7f51\u5173\u4f1a\u4ece\u4e91\u7aef\u89e3\u7ed1\uff0c\u5e76\u5c06\u5b50\u8bbe\u5907\u7b49\u6570\u636e\u4fe1\u606f\u5168\u90e8\u5220\u9664\u3002 \u63a5\u53e3\u8bf4\u660e public int gatewayReset (); \u7f51\u5173\u91cd\u7f6e\u540e\u4f1a\u89e6\u53d1 \u7f51\u5173\u91cd\u7f6e\u56de\u8c03","title":"\u7f51\u5173\u91cd\u7f6e"},{"location":"gateway/#\u9500\u6bc1\u7f51\u5173-sdk-\u5b9e\u4f8b","text":"\u63a5\u53e3\u8bf4\u660e void tuyaGatewayRelease ();","title":"\u9500\u6bc1\u7f51\u5173 SDK \u5b9e\u4f8b"},{"location":"gateway/#\u56de\u8c03\u51fd\u6570","text":"\u5728\u8c03\u7528 gatewayStart \u4e4b\u524d\u5e94\u8be5\u6ce8\u518c GatewayCallbacks \u56de\u8c03\u51fd\u6570\uff0c\u4ee5\u63a5\u6536\u5904\u7406\u7ed3\u679c\u3002","title":"\u56de\u8c03\u51fd\u6570"},{"location":"gateway/#\u7f51\u5173\u72b6\u6001\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u7f51\u5173\u72b6\u6001\u66f4\u65b0\u65f6\u56de\u8c03\u3002 void onStatusChanged ( int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 status \u72b6\u6001\u66f4\u6539\u901a\u77e5\u56de\u8c03\u51fd\u6570\uff1a STATUS_RESET\uff1a\u7f51\u5173\u88ab\u91cd\u7f6e STATUS_ACTIVATED\uff1a\u7f51\u5173\u88ab\u6fc0\u6d3b STATUS_FIRST_START\uff1a\u7f51\u5173\u7b2c\u4e00\u6b21\u542f\u52a8 STATUS_NORMAL\uff1a\u7f51\u5173\u6fc0\u6d3b\u800c\u4e14\u5df2\u7ecf\u542f\u52a8","title":"\u7f51\u5173\u72b6\u6001\u56de\u8c03"},{"location":"gateway/#\u7f51\u5173\u91cd\u7f6e\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u7f51\u5173\u88ab\u91cd\u7f6e\u540e\u56de\u8c03\uff0capp \u9700\u8981\u6839\u636e type \u7684\u503c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 void onReset ( int type ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u91cd\u7f6e\u7c7b\u578b\uff1a RESET_TYPE_LOCAL_RESET_FACTORY\uff1a\u672c\u5730\u6062\u590d\u5de5\u5382\u8bbe\u7f6e RESET_TYPE_REMOTE_UNACTIVE\uff1a\u8fdc\u7aef\u7f51\u5173\u91cd\u7f6e\uff0c\u5373\u4e3a\u901a\u8fc7 APP \u53d6\u6d88\u4e0e\u8d26\u53f7\u7ed1\u5b9a RESET_TYPE_LOCAL_UNACTIVE\uff1a\u672c\u5730\u7f51\u5173\u91cd\u7f6e\uff0c\u53d6\u6d88\u4e0e\u8d26\u53f7\u7ed1\u5b9a RESET_TYPE_REMOTE_RESET_FACTORY\uff1a\u8fdc\u7aef\u6062\u590d\u5de5\u5382\u8bbe\u7f6e RESET_TYPE_RESET_DATA_FACTORY\uff1a\u6062\u590d\u6570\u636e\u5de5\u5382\u8bbe\u7f6e","title":"\u7f51\u5173\u91cd\u7f6e\u56de\u8c03"},{"location":"gateway/#\u91cd\u542f\u8bf7\u6c42\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u7f51\u5173\u8bf7\u6c42\u91cd\u542f\u8bbe\u5907\u3002 void onReboot ();","title":"\u91cd\u542f\u8bf7\u6c42\u56de\u8c03"},{"location":"gateway/#\u7f51\u5173\u7f51\u7edc\u72b6\u6001\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u7f51\u5173\u5df2\u7ecf\u88ab\u91cd\u7f6e\uff0capp \u9700\u8981\u6839\u636e type \u7684\u503c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 void onNetworkStatus ( int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u7f51\u7edc\u72b6\u6001\uff1a CLOUD_UNCONNECTED\uff1a\u8054\u7f51\u5931\u8d25 CLOUD_CONNECTED\uff1a\u4e91\u7aef\u8fde\u63a5\u6210\u529f\uff0c\u8bbe\u5907\u5df2\u7ecf\u6fc0\u6d3b","title":"\u7f51\u5173\u7f51\u7edc\u72b6\u6001\u56de\u8c03"},{"location":"gateway/#\u7f51\u5173-dp-\u70b9\u4e0b\u53d1\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e DP \u70b9\u4e0b\u53d1\u3002 void onDataPointCommand ( @DataPointCommandType int type , @DataPointTransportType int dttType , String cid , String groupid , DataPoint [] dataPoint ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u6307\u4ee4\u7c7b\u578b\uff1a DATAPOINT_CMD_LAN\uff1aLAN \u89e6\u53d1 DATAPOINT_CMD_MQ\uff1aMQTT \u89e6\u53d1 DATAPOINT_CMD_TIMER\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_CMD_SCENE_LINKAGE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 DATAPOINT_CMD_RELIABLE_TRANSFER\uff1a\u91cd\u53d1 dttType \u4f20\u8f93\u65b9\u5f0f\uff1a DATAPOINT_DTT_SCT_UNC\uff1aLAN \u89e6\u53d1 DATAPOINT_DTT_SCT_BNC\uff1aMQTT \u89e6\u53d1 DATAPOINT_DTT_SCT_MNC\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_DTT_SCT_SCENE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID groupid \u7fa4\u7ec4 ID\uff0c\u53ea\u6709\u5f53 dtt_tp = 2 \u65f6\uff0c\u8be5\u5b57\u6bb5\u624d\u6709\u6548\u3002 dataPoint dp\u70b9\u6570\u636e\uff0cDataPoint\u7c7b\u578b\u53c2\u8003 DP\u70b9\u5f02\u6b65\u4e0a\u62a5 \u4e2d\u7684\u8bf4\u660e\u3002","title":"\u7f51\u5173 DP \u70b9\u4e0b\u53d1\u56de\u8c03"},{"location":"gateway/#\u7f51\u5173-dp-\u70b9\u900f\u4f20\u6570\u636e\u4e0b\u53d1\u56de\u8c03","text":"\u7528\u4e8e\u900f\u4f20\u7528\u6237\u81ea\u5b9a\u4e49\u7684 DP \u70b9\u6570\u636e \u63a5\u53e3\u8bf4\u660e void onRawDataPointCommand ( @DataPointCommandType int type , @DataPointTransportType int dttType , String cid , int dpid , String groupid , byte [] data ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u6307\u4ee4\u7c7b\u578b\uff1a DATAPOINT_CMD_LAN\uff1aLAN \u89e6\u53d1 DATAPOINT_CMD_MQ\uff1aMQTT \u89e6\u53d1 DATAPOINT_CMD_TIMER\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_CMD_SCENE_LINKAGE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 DATAPOINT_CMD_RELIABLE_TRANSFER\uff1a\u91cd\u53d1 dttType \u4f20\u8f93\u65b9\u5f0f\uff1a DATAPOINT_DTT_SCT_UNC\uff1aLAN \u89e6\u53d1 DATAPOINT_DTT_SCT_BNC\uff1aMQTT \u89e6\u53d1 DATAPOINT_DTT_SCT_MNC\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_DTT_SCT_SCENE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID dpid DP \u70b9\u7684 ID groupid \u7fa4\u7ec4 ID\uff0c\u53ea\u6709\u5f53 dtt_tp = 2 \u65f6\uff0c\u8be5\u5b57\u6bb5\u624d\u6709\u6548\u3002 data DP \u70b9\u6570\u636e","title":"\u7f51\u5173 DP \u70b9\u900f\u4f20\u6570\u636e\u4e0b\u53d1\u56de\u8c03"},{"location":"gateway/#\u7f51\u5173-dp-\u70b9\u6570\u636e\u67e5\u8be2\u56de\u8c03","text":"\u7528\u4e8e\u8bbe\u5907\u7279\u5b9a\u6570\u636e\u67e5\u8be2 \u63a5\u53e3\u8bf4\u660e void onDataPointQuery ( String cid , int [] dpArray ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684\u7f51\u5173\u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID dpArray \u7528\u6237\u5b9a\u4e49\u529f\u80fd\u70b9\u5e8f\u53f7\u96c6","title":"\u7f51\u5173 DP \u70b9\u6570\u636e\u67e5\u8be2\u56de\u8c03"},{"location":"gateway/#\u83b7\u53d6-ip-\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u83b7\u53d6\u8bbe\u5907IP\uff0c\u5df2\u5e9f\u5f03\u3002 String onGetIP ();","title":"\u83b7\u53d6 IP \u56de\u8c03"},{"location":"gateway/#\u83b7\u53d6-mac-\u5730\u5740\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u83b7\u53d6\u8bbe\u5907 MAC \u5730\u5740\uff0c\u5df2\u5e9f\u5f03\u3002 String onGetMacAddress ();","title":"\u83b7\u53d6 MAC \u5730\u5740\u56de\u8c03"},{"location":"gateway/#\u7f51\u5173\u542f\u52a8\u7ed3\u679c\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e tuyaIotStart \u6210\u529f\u65f6\u8c03\u7528 onStartSuccess \u56de\u8c03\u3002 void onStartSuccess (); \u63a5\u53e3\u8bf4\u660e tuyaIotStart \u5931\u8d25\u65f6\u8c03\u7528 onStartFailure \u56de\u8c03\u3002 java void onStartFailure(int err); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u9519\u8bef\u7801\uff0c\u4e3a GatewayError \u4e2d\u5b9a\u4e49\u7684\u503c\u4e4b\u4e00\uff0c\u5e38\u89c1\u9519\u8bef\uff1a ERROR_COM_ERROR\uff1a\u7f51\u7edc\u8fde\u63a5\u9519\u8bef ERROR_INVALID_PARM\uff1a\u53c2\u6570\u9519\u8bef ERROR_INVALID_STATUS\uff1a\u72b6\u6001\u9519\u8bef","title":"\u7f51\u5173\u542f\u52a8\u7ed3\u679c\u56de\u8c03"},{"location":"gateway/#\u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e String onGetLogFile (); \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 String \u9700\u8981\u4fdd\u5b58\u7684\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84","title":"\u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6\u56de\u8c03"},{"location":"glossary/","text":"\u6d82\u9e26 AI+IoT \u5e73\u53f0\u65f6\u5e38\u89c1\u7684\u672f\u8bed\u540d\u8bcd\u53ef\u4ee5\u5728\u5f00\u53d1\u8005\u5e73\u53f0\u4e0a\u8fdb\u884c\u8be6\u7ec6\u7684\u4e86\u89e3\uff1a \u540d\u8bcd\u89e3\u91ca","title":"\u540d\u8bcd\u89e3\u91ca"},{"location":"integration/","text":"SDK \u96c6\u6210 Warning \u5728\u96c6\u6210 Android \u8bbe\u5907 SDK \u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u7ecf\u5b8c\u6210\u4e86 Tuya Home SDK \u7684\u96c6\u6210 \u4ee5\u53ca\u57fa\u7840\u529f\u80fd\u7684\u5f00\u53d1 \u5982\uff1a\u626b\u7801\u767b\u5f55\u3001\u5bb6\u5ead\u7ba1\u7406\u7b49\u57fa\u7840\u90e8\u5206 \u914d\u7f6e build.gradle \u6587\u4ef6 \u5728\u5b89\u5353\u9879\u76ee\u7684 build.gradle \u6587\u4ef6\u91cc\uff0c\u6dfb\u52a0\u96c6\u6210\u51c6\u5907\u4e2d\u4e0b\u8f7d\u7684 dependencies \u4f9d\u8d56\u5e93\u3002 dependencies { //SDK \u6700\u65b0\u7a33\u7248\u672c\uff1a implementation 'com.tuya.smart:tuyasmart-lego_sdk:0.0.8-central-rc.7' //\u4f7f\u7528\u5230\u7684\u4e09\u65b9\u4f9d\u8d56 implementation 'org.apache.commons:commons-io:1.3.2' implementation 'org.jetbrains.kotlin:kotlin-android-extensions-runtime:1.3.61' implementation 'com.google.code.gson:gson:2.8.5' implementation 'com.alibaba:fastjson:1.1.67.android' implementation 'io.reactivex.rxjava2:rxjava:2.2.8' implementation 'com.squareup.okhttp3:okhttp:3.9.0' implementation 'pub.devrel:easypermissions:2.0.1' } \u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6587\u4ef6\uff0c\u4e2d\u589e\u52a0\u6d82\u9e26 IoT Maven \u4ed3\u5e93\u5730\u5740\uff0c\u8fdb\u884c\u4ed3\u5e93\u914d\u7f6e\u3002 repositories { jcenter () google () // \u6d82\u9e26 IoT \u4ed3\u5e93\u5730\u5740 maven { url \"https://maven-other.tuya.com/repository/maven-releases/\" } } \u6743\u9650\u8981\u6c42 \u5728 app \u7684\u5e94\u7528\u6e05\u5355\u6587\u4ef6 AndroidManifest.xml \u4e2d\u6dfb\u52a0\u5982\u4e0b\u7684\u6743\u9650 <uses-permission android:name= \"android.permission.WRITE_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"android.permission.READ_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"android.permission.READ_PHONE_STATE\" android:required= \"false\" /> <!-- \u7f51\u7edc --> <uses-permission android:name= \"android.permission.INTERNET\" /> <uses-permission android:name= \"android.permission.CHANGE_NETWORK_STATE\" /> <uses-permission android:name= \"android.permission.CHANGE_WIFI_STATE\" /> <uses-permission android:name= \"android.permission.ACCESS_NETWORK_STATE\" /> <uses-permission android:name= \"android.permission.ACCESS_WIFI_STATE\" /> <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" />","title":"\u96c6\u6210SDK"},{"location":"integration/#sdk-\u96c6\u6210","text":"Warning \u5728\u96c6\u6210 Android \u8bbe\u5907 SDK \u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u7ecf\u5b8c\u6210\u4e86 Tuya Home SDK \u7684\u96c6\u6210 \u4ee5\u53ca\u57fa\u7840\u529f\u80fd\u7684\u5f00\u53d1 \u5982\uff1a\u626b\u7801\u767b\u5f55\u3001\u5bb6\u5ead\u7ba1\u7406\u7b49\u57fa\u7840\u90e8\u5206","title":"SDK \u96c6\u6210"},{"location":"integration/#\u914d\u7f6e-buildgradle-\u6587\u4ef6","text":"\u5728\u5b89\u5353\u9879\u76ee\u7684 build.gradle \u6587\u4ef6\u91cc\uff0c\u6dfb\u52a0\u96c6\u6210\u51c6\u5907\u4e2d\u4e0b\u8f7d\u7684 dependencies \u4f9d\u8d56\u5e93\u3002 dependencies { //SDK \u6700\u65b0\u7a33\u7248\u672c\uff1a implementation 'com.tuya.smart:tuyasmart-lego_sdk:0.0.8-central-rc.7' //\u4f7f\u7528\u5230\u7684\u4e09\u65b9\u4f9d\u8d56 implementation 'org.apache.commons:commons-io:1.3.2' implementation 'org.jetbrains.kotlin:kotlin-android-extensions-runtime:1.3.61' implementation 'com.google.code.gson:gson:2.8.5' implementation 'com.alibaba:fastjson:1.1.67.android' implementation 'io.reactivex.rxjava2:rxjava:2.2.8' implementation 'com.squareup.okhttp3:okhttp:3.9.0' implementation 'pub.devrel:easypermissions:2.0.1' } \u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6587\u4ef6\uff0c\u4e2d\u589e\u52a0\u6d82\u9e26 IoT Maven \u4ed3\u5e93\u5730\u5740\uff0c\u8fdb\u884c\u4ed3\u5e93\u914d\u7f6e\u3002 repositories { jcenter () google () // \u6d82\u9e26 IoT \u4ed3\u5e93\u5730\u5740 maven { url \"https://maven-other.tuya.com/repository/maven-releases/\" } }","title":"\u914d\u7f6e build.gradle \u6587\u4ef6"},{"location":"integration/#\u6743\u9650\u8981\u6c42","text":"\u5728 app \u7684\u5e94\u7528\u6e05\u5355\u6587\u4ef6 AndroidManifest.xml \u4e2d\u6dfb\u52a0\u5982\u4e0b\u7684\u6743\u9650 <uses-permission android:name= \"android.permission.WRITE_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"android.permission.READ_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"android.permission.READ_PHONE_STATE\" android:required= \"false\" /> <!-- \u7f51\u7edc --> <uses-permission android:name= \"android.permission.INTERNET\" /> <uses-permission android:name= \"android.permission.CHANGE_NETWORK_STATE\" /> <uses-permission android:name= \"android.permission.CHANGE_WIFI_STATE\" /> <uses-permission android:name= \"android.permission.ACCESS_NETWORK_STATE\" /> <uses-permission android:name= \"android.permission.ACCESS_WIFI_STATE\" /> <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" />","title":"\u6743\u9650\u8981\u6c42"},{"location":"iot/","text":"IoT \u63a7\u5236 IoT \u63a7\u5236\u5b9e\u73b0\u4e86\u8bbe\u5907\u7684\u542f\u52a8\u3001\u5165\u7f51\u3002 IoT \u542f\u52a8 \u83b7\u53d6IoT SDK \u5b9e\u4f8b \u793a\u4f8b\u4ee3\u7801 Java private TuyaIotSdk mIot = TuyaIotSdk . getInstance (); Kotlin var mIot = TuyaIotSdk . getInstance () \u6ce8\u518c\u56de\u8c03\u51fd\u6570 \u521b\u5efa IotCallbacks \u5bf9\u8c61\uff0c \u8c03\u7528 TuyaIotSdk \u7684 setIotCallbacks \u51fd\u6570\u6ce8\u518c\u3002\u56de\u8c03\u51fd\u6570\u7684\u5b9e\u73b0\u53c2\u8003 \u56de\u8c03\u51fd\u6570 \u4e2d\u8bf4\u660e\u3002 \u793a\u4f8b\u4ee3\u7801 Java mIot . setIotCallbacks ( new IotCallbacks () { @Override public String onGetIP () { return null ; } @Override public String onGetMacAddress () { return null ; } @Override public void onStatusChanged ( int status ) { } @Override public void onReset ( int type ) { } @Override public void onReboot () { } @Override public void onDataPointCommand ( int type , int dttType , String cid , String groupid , DataPoint [] dataPoint ) { } @Override public void onRawDataPointCommand ( int type , int dttType , String cid , int dpid , String groupid , byte [] data ) { } @Override public void onDataPointQuery ( String cid , int [] dpArray ) { } @Override public void onNetworkStatus ( int status ) { } @Override public void onStartSuccess () { } @Override public void onStartFailure ( int err ) { } @Override public String onGetLogFile () { return null ; } }); Kotlin mIot . setIotCallbacks ( object : IotCallbacks { override fun onStatusChanged ( status : Int ) { TODO ( \"Not yet implemented\" ) } override fun onReset ( type : Int ) { TODO ( \"Not yet implemented\" ) } override fun onReboot () { TODO ( \"Not yet implemented\" ) } override fun onDataPointCommand ( type : Int , dttType : Int , cid : String? , groupid : String? , dataPoint : Array < out DataPoint >? ) { TODO ( \"Not yet implemented\" ) } override fun onRawDataPointCommand ( type : Int , dttType : Int , cid : String? , dpid : Int , groupid : String? , data : ByteArray?) { TODO ( \"Not yet implemented\" ) } override fun onDataPointQuery ( cid : String? , dpArray : IntArray?) { TODO ( \"Not yet implemented\" ) } override fun onNetworkStatus ( status : Int ) { TODO ( \"Not yet implemented\" ) } override fun onStartSuccess () { TODO ( \"Not yet implemented\" ) } override fun onStartFailure ( err : Int ) { TODO ( \"Not yet implemented\" ) } override fun onGetLogFile (): String { TODO ( \"Not yet implemented\" ) } override fun onGetIP (): String { TODO ( \"Not yet implemented\" ) } override fun onGetMacAddress (): String { TODO ( \"Not yet implemented\" ) } }) \u542f\u52a8IoT \u63a5\u53e3\u8bf4\u660e void tuyaIotStart ( Context context , IotConfig config ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e Context \u4e0a\u4e0b\u6587 IotConfig IoT \u914d\u7f6e IotConfig \u6210\u5458 \u8bf4\u660e mPath \u5b58\u50a8\u8def\u5f84\uff08\u8981\u6c42\u53ef\u8bfb\u5199\u5206\u533a\uff09\uff0c\u8be5\u76ee\u5f55\u8981\u5728app\u4e2d\u521b\u5efa mFirmwareKey \u56fa\u4ef6key\u6216\u8005pid\uff0c\u5411\u6d82\u9e26\u7533\u8bf7\uff0c\u4ea7\u54c1\u552f\u4e00\u3002 \u548cmIsOEM\u914d\u5408\u4f7f\u7528: mIsOEM\u4e3atrue\u65f6\uff0cmFirmwareKey\u4e3a\u56fa\u4ef6key mIsOEM\u4e3afalse\u65f6\uff0cmFirmwareKey\u4e3apid mUUID \u6d82\u9e26IOT\u5e73\u53f0\u83b7\u53d6\u5230\u7684UUID\uff08\u6388\u6743\u4fe1\u606f\uff09\uff0c\u548cmAuthKey\u6210\u5bf9\u4f7f\u7528 mAuthKey \u6d82\u9e26IOT\u5e73\u53f0\u83b7\u53d6\u5230\u7684Authkey\uff08\u6388\u6743\u4fe1\u606f\uff09\uff0c\u548cmUUID\u6210\u5bf9\u4f7f\u7528 mIsOEM \u662f\u5426\u662foem\u4ea7\u54c1\uff0c\u548cmFirmwareKey\u914d\u5408\u4f7f\u7528\u3002 mPackageName App\u7684\u5305\u540d\uff0c\u7528\u4e8eApp/\u56fa\u4ef6\u7684OTA\u5347\u7ea7\u3002 mVersion App/\u8bbe\u5907\u56fa\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u7531\u7528\u6237\u8bbe\u7f6e\uff0c\u683c\u5f0f\u4e3a \u201cxx.xx.xx\u201d\u3002 \u7528\u4e8e\u56fa\u4ef6\u5347\u7ea7\uff0c\u8bbe\u5907\u6fc0\u6d3b\u540e\uff0c\u7248\u672c\u53f7\u4f1a\u5728\u624b\u673aAPP\u4e0a\u8bbe\u5907\u8be6\u60c5\u4e2d\u8fdb\u884c\u5c55\u793a\u3002 mNetworkInterface \u8bbe\u5907\u7684\u7f51\u5361\u540d\u79f0\uff0c\u6bd4\u5982: wlan0, eth0\u3002\u4e3anull\u65f6SDK\u4f1a\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f51\u5361\u3002 mLogLevel SDK\u8f93\u51falog\u4fe1\u606f\u7684\u7ea7\u522b \u8fd4\u56de\u503c\u8bf4\u660e tuyaIotStart \u662f\u5f02\u6b65\u8c03\u7528\uff0c\u5176\u7ed3\u679c\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u8fd4\u56de\uff0c\u542f\u52a8\u6210\u529f\u56de\u8c03\u51fd\u6570 onStartSuccess\uff0c\u5931\u8d25\u8c03\u7528\u56de\u8c03\u51fd\u6570onStartFailure\uff0c\u53c2\u8003 \u542f\u52a8\u7ed3\u679c\u56de\u8c03 \u4e2d\u7684\u8bf4\u660e\u3002 \u793a\u4f8b\u4ee3\u7801 Java File filedirs = getFilesDir (); String storageDir = filedirs + File . separator + \"storage\" + File . separator ; File file = new File ( storageDir ); if ( ! file . exists ()) { file . mkdir (); } IotConfig config = new IotConfig (); config . mFirmwareKey = \"xxxxxxxxxx\" ; config . mUUID = \"xxxxxxxxxx\" ; config . mAuthKey = \"xxxxxxxxxxxxxxx\" ; config . mIsOEM = true ; config . mVersion = \"1.0.0\" ; config . mPackageName = getPackageName (); config . mPath = storageDir ; config . mLogLevel = TY_LOG_LEVEL_DEBUG ; mIot . tuyaIotStart ( context , config ); Kotlin ```kotlin val filedirs: File = getFilesDir() val storageDir = filedirs.toString() + File.separator + \"storage\" + File.separator val file = File(storageDir) if (!file.exists()) { file.mkdir() } val config = IotConfig() config.mFirmwareKey = \"xxxxxxxxxx\" config.mUUID = \"xxxxxxxxxx\" config.mAuthKey = \"xxxxxxxxxxxxxxx\" config.mIsOEM = true config.mVersion = \"1.0.0\" config.mPackageName = getPackageName() config.mPath = storageDir config.mLogLevel = LogLevel.TY_LOG_LEVEL_DEBUG mIot.tuyaIotStart(context, config) ``` | IoT \u8bbe\u5907\u6fc0\u6d3b \u542f\u52a8\u8bbe\u5907\u6210\u529f\u4e4b\u540e\uff0c\u624d\u53ef\u4ee5\u5165\u7f51\u3002 \u63a5\u53e3\u8bf4\u660e public int tuyaIotBindToken ( String token ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e token \u5165\u7f51 token \uff0c \u9700\u8981\u767b\u5f55\u6d82\u9e26\u8d26\u53f7\u4e4b\u540e\u8c03\u7528 Tuya Smart Android Home SDK \u4e2d\u7684\u63a5\u53e3\u83b7\u53d6\u3002 \u8be6\u60c5\u8bf7\u53c2\u8003 Tuya Smart Android Home SDK - \u8bbe\u5907\u914d\u7f51 - \u83b7\u53d6\u914d\u7f51 token \u7684\u63a5\u53e3\u8bf4\u660e\u3002 \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u8bf4\u660e 0 \u8c03\u7528\u6210\u529f\uff0c\u8bf7\u6ce8\u610f\uff0c\u8c03\u7528\u6210\u529f\u4e0d\u4ee3\u8868\u5df2\u7ecf\u5165\u7f51\u6210\u529f\uff0c\u5165\u7f51\u7ed3\u679c\u901a\u8fc7 onNetworkStatus \u901a\u77e5\u3002 \u975e 0 \u503c \u8c03\u7528\u5931\u8d25\uff0c\u6ca1\u6709\u5165\u7f51\u3002 \u793a\u4f8b\u4ee3\u7801 Java TuyaHomeSdk . getActivatorInstance (). getActivatorToken ( homeId , new ITuyaActivatorGetToken () { @Override public void onSuccess ( final String token ) { threadPoolExecutor . execute ( new Runnable () { @Override public void run () { Log . e ( TAG , \"get token suc , iot bind token\" ); TuyaIotSdk . getInstance (). tuyaIotBindToken ( token ); } }); } @Override public void onFailure ( String errorCode , String errorMsg ) { Log . e ( TAG , \"get token failed \" + errorCode + \", \" + errorMsg ); } }); DP \u70b9\u4e0a\u62a5 \u5f02\u6b65\u4e0a\u62a5 \u63a5\u53e3\u8bf4\u660e \u540c\u6b65\u4e0a\u4f20\u900f\u4f20\u578b DP \u70b9\u6570\u636e\u3002 public int tuyaIotReportDataPointJsonAsync ( String devId , DataPoint [] dataPoint ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e devId \u5982\u679c\u662f\u4e3b\u8bbe\u5907\uff0cdevId \u662f\u81ea\u8bbe\u5907 id\uff1b\u5982\u679c\u662fIoT /soc/mcu\uff0c\u5219 devId \u4e3a null dataPoint dp \u70b9\u4fe1\u606f\uff0c\u53c2\u8003 TuyaIotSdk.DataPoint TuyaIotSdk.DataPoint \u6210\u5458 \u8bf4\u660e mId \u5728\u6d82\u9e26 IoT \u5e73\u53f0\u4e0a\u5b9a\u4e49\u7684\u529f\u80fd\u70b9\u7f16\u53f7 mType \u529f\u80fd\u70b9\u7684\u6570\u636e\u7c7b\u578b\uff0c\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u8bf7\u53c2\u89c1\u6d82\u9e26\u6587\u6863\u4e2d\u5fc3\u7684\u529f\u80fd\u70b9\u5b9a\u4e49\uff0c\u53c2\u8003 \u81ea\u5b9a\u4e49\u529f\u80fd : TYPE_BOOL\uff1a\u5e03\u5c14\u578b TYPE_VALUE\uff1a\u6570\u503c\u578b TYPE_STRING\uff1a\u5b57\u7b26\u4e32\u578b TYPE_ENUM\uff1a\u679a\u4e3e\u578b TYPE_BITMAP\uff1a\u6545\u969c\u578b mData \u529f\u80fd\u70b9\u7684\u503c\uff0c\u6570\u636e\u7c7b\u578b\u7531 mType \u6307\u5b9a\u3002 mTimeStamp \u65f6\u95f4\u6233\uff0c\u503c\u4e3a 0 \u65f6\u91c7\u7528\u5f53\u524d\u7684\u65f6\u95f4\u3002 \u540c\u6b65\u4e0a\u62a5 \u63a5\u53e3\u8bf4\u660e public int tuyaIotReportDataPointRawSync ( String devId , int dataPointId , byte [] data , int timeout ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 devId \u5982\u679c\u662f\u4e3b\u8bbe\u5907\uff0cdevId \u662f\u81ea\u8bbe\u5907 id\uff1b\u5982\u679c\u662fIoT /soc/mcu\uff0c\u5219 devId \u4e3a null dataPointId \u5728\u6d82\u9e26 IoT \u5e73\u53f0\u4e0a\u5b9a\u4e49\u7684\u529f\u80fd\u70b9\u7f16\u53f7 data \u900f\u4f20\u578b dp \u70b9\u6570\u636e timeout \u51fd\u6570\u963b\u585e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d ATOP\u900f\u4f20\u63a5\u53e3 \u63a5\u53e3\u8bf4\u660e ATopResponse tuyaIotAtopPost ( String api , String version , String postData ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e api \u63a5\u53e3\u540d version \u63a5\u53e3\u7248\u672c postData \u4e0a\u62a5\u4e91\u7aef\u7684\u6570\u636ejson\u5b57\u7b26\u4e32 \u8fd4\u56de\u503c \u542b\u4e49 ATopResponse \u5305\u542berrCode\uff08\u9519\u8bef\u7801\uff09\u548cresult\uff08\u8bf7\u6c42\u7ed3\u679c\uff09\u4e24\u4e2a\u5b57\u6bb5\u3002\u8bf7\u6c42\u6b63\u5e38\u8fd4\u56de\u65f6errCode\u4e3a0 \u793a\u4f8b\u4ee3\u7801 Java ATopResponse response = mIot . tuyaIotAtopPost ( \"tuya.xx.xx\" , \"1.0\" , \"\" ); if ( response . errCode == 0 ) { Log . d ( TAG , \"result: \" + response . result ); } \u83b7\u53d6\u865a\u62df ID IoT \u8bbe\u5907\u6fc0\u6d3b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u65b9\u6cd5\u83b7\u53d6\u8bbe\u5907\u7684\u865a\u62df ID \u3002 \u63a5\u53e3\u8bf4\u660e String getId () \uff1b \u83b7\u53d6 SDK \u7248\u672c\u4fe1\u606f \u63a5\u53e3\u8bf4\u660e String getVersion (); IoT \u8bbe\u5907\u91cd\u7f6e IoT \u8bbe\u5907\u672c\u5730\u6062\u590d\u51fa\u5382\u8bbe\u7f6e\uff0cIoT \u8bbe\u5907\u4f1a\u4ece\u4e91\u7aef\u89e3\u7ed1\uff0c\u5e76\u5c06\u5b50\u8bbe\u5907\u7b49\u6570\u636e\u4fe1\u606f\u5168\u90e8\u5220\u9664\u3002 \u63a5\u53e3\u8bf4\u660e public int tuyaIotReset (); IoT \u91cd\u7f6e\u540e\u4f1a\u89e6\u53d1 IoT \u91cd\u7f6e\u56de\u8c03 \u9500\u6bc1IoT SDK \u5b9e\u4f8b \u63a5\u53e3\u8bf4\u660e void tuyaIotRelease (); \u56de\u8c03\u51fd\u6570 \u5728\u8c03\u7528 IotStart \u4e4b\u524d\u5e94\u8be5\u6ce8\u518c IotCallbacks \u56de\u8c03\u51fd\u6570\uff0c\u4ee5\u63a5\u6536\u5904\u7406\u7ed3\u679c\u3002 IoT \u72b6\u6001\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e IoT \u72b6\u6001\u66f4\u65b0\u65f6\u56de\u8c03\u3002 void onStatusChanged ( int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 status \u72b6\u6001\u66f4\u6539\u901a\u77e5\u56de\u8c03\u51fd\u6570\uff1a STATUS_RESET\uff1aIoT \u88ab\u91cd\u7f6e STATUS_ACTIVATED\uff1aIoT \u88ab\u6fc0\u6d3b STATUS_FIRST_START\uff1aIoT \u7b2c\u4e00\u6b21\u542f\u52a8 STATUS_NORMAL\uff1aIoT \u6fc0\u6d3b\u800c\u4e14\u5df2\u7ecf\u542f\u52a8 IoT \u91cd\u7f6e\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e IoT \u88ab\u91cd\u7f6e\u540e\u56de\u8c03\uff0capp \u9700\u8981\u6839\u636e type \u7684\u503c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 void onReset ( int type ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u91cd\u7f6e\u7c7b\u578b\uff1a RESET_TYPE_LOCAL_RESET_FACTORY\uff1a\u672c\u5730\u6062\u590d\u5de5\u5382\u8bbe\u7f6e RESET_TYPE_REMOTE_UNACTIVE\uff1a\u8fdc\u7aefIoT \u91cd\u7f6e\uff0c\u5373\u4e3a\u901a\u8fc7 APP \u53d6\u6d88\u4e0e\u8d26\u53f7\u7ed1\u5b9a RESET_TYPE_LOCAL_UNACTIVE\uff1a\u672c\u5730IoT \u91cd\u7f6e\uff0c\u53d6\u6d88\u4e0e\u8d26\u53f7\u7ed1\u5b9a RESET_TYPE_REMOTE_RESET_FACTORY\uff1a\u8fdc\u7aef\u6062\u590d\u5de5\u5382\u8bbe\u7f6e RESET_TYPE_RESET_DATA_FACTORY\uff1a\u6062\u590d\u6570\u636e\u5de5\u5382\u8bbe\u7f6e \u91cd\u542f\u8bf7\u6c42\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e IoT \u8bf7\u6c42\u91cd\u542f\u8bbe\u5907\u3002 void onReboot (); IoT \u8bbe\u5907\u7f51\u7edc\u72b6\u6001\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e IoT \u5df2\u7ecf\u88ab\u91cd\u7f6e\uff0capp \u9700\u8981\u6839\u636e type \u7684\u503c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 void onNetworkStatus ( int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u7f51\u7edc\u72b6\u6001\uff1a CLOUD_UNCONNECTED\uff1a\u8054\u7f51\u5931\u8d25 CLOUD_CONNECTED\uff1a\u4e91\u7aef\u8fde\u63a5\u6210\u529f\uff0c\u8bbe\u5907\u5df2\u7ecf\u6fc0\u6d3b IoT DP \u70b9\u4e0b\u53d1\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e DP \u70b9\u4e0b\u53d1\u3002 void onDataPointCommand ( @DataPointCommandType int type , @DataPointTransportType int dttType , String cid , String groupid , DataPoint [] dataPoint ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u6307\u4ee4\u7c7b\u578b\uff1a DATAPOINT_CMD_LAN\uff1aLAN \u89e6\u53d1 DATAPOINT_CMD_MQ\uff1aMQTT \u89e6\u53d1 DATAPOINT_CMD_TIMER\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_CMD_SCENE_LINKAGE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 DATAPOINT_CMD_RELIABLE_TRANSFER\uff1a\u91cd\u53d1 dttType \u4f20\u8f93\u65b9\u5f0f\uff1a DATAPOINT_DTT_SCT_UNC\uff1aLAN \u89e6\u53d1 DATAPOINT_DTT_SCT_BNC\uff1aMQTT \u89e6\u53d1 DATAPOINT_DTT_SCT_MNC\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_DTT_SCT_SCENE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684IoT \u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684IoT \u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID groupid \u7fa4\u7ec4 ID\uff0c\u53ea\u6709\u5f53 dtt_tp = 2 \u65f6\uff0c\u8be5\u5b57\u6bb5\u624d\u6709\u6548\u3002 dataPoint dp\u70b9\u6570\u636e\uff0cDataPoint\u7c7b\u578b\u53c2\u8003 DP\u70b9\u5f02\u6b65\u4e0a\u62a5 \u4e2d\u7684\u8bf4\u660e\u3002 IoT DP \u70b9\u900f\u4f20\u6570\u636e\u4e0b\u53d1\u56de\u8c03 \u7528\u4e8e\u900f\u4f20\u7528\u6237\u81ea\u5b9a\u4e49\u7684 DP \u70b9\u6570\u636e \u63a5\u53e3\u8bf4\u660e void onRawDataPointCommand ( @DataPointCommandType int type , @DataPointTransportType int dttType , String cid , int dpid , String groupid , byte [] data ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u6307\u4ee4\u7c7b\u578b\uff1a DATAPOINT_CMD_LAN\uff1aLAN \u89e6\u53d1 DATAPOINT_CMD_MQ\uff1aMQTT \u89e6\u53d1 DATAPOINT_CMD_TIMER\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_CMD_SCENE_LINKAGE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 DATAPOINT_CMD_RELIABLE_TRANSFER\uff1a\u91cd\u53d1 dttType \u4f20\u8f93\u65b9\u5f0f\uff1a DATAPOINT_DTT_SCT_UNC\uff1aLAN \u89e6\u53d1 DATAPOINT_DTT_SCT_BNC\uff1aMQTT \u89e6\u53d1 DATAPOINT_DTT_SCT_MNC\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_DTT_SCT_SCENE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684IoT \u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684IoT \u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID dpid DP \u70b9\u7684 ID groupid \u7fa4\u7ec4 ID\uff0c\u53ea\u6709\u5f53 dtt_tp = 2 \u65f6\uff0c\u8be5\u5b57\u6bb5\u624d\u6709\u6548\u3002 data DP \u70b9\u6570\u636e IoT DP \u70b9\u6570\u636e\u67e5\u8be2\u56de\u8c03 \u7528\u4e8e\u8bbe\u5907\u7279\u5b9a\u6570\u636e\u67e5\u8be2 \u63a5\u53e3\u8bf4\u660e void onDataPointQuery ( String cid , int [] dpArray ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684IoT \u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684IoT \u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID dpArray \u7528\u6237\u5b9a\u4e49\u529f\u80fd\u70b9\u5e8f\u53f7\u96c6 \u83b7\u53d6 IP \u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u83b7\u53d6\u8bbe\u5907IP\uff0c\u5df2\u5e9f\u5f03\u3002 String onGetIP (); \u83b7\u53d6 MAC \u5730\u5740\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u83b7\u53d6\u8bbe\u5907 MAC \u5730\u5740\uff0c\u5df2\u5e9f\u5f03\u3002 String onGetMacAddress (); \u542f\u52a8\u7ed3\u679c\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e tuyaIotStart \u6210\u529f\u65f6\u8c03\u7528 onStartSuccess \u56de\u8c03\u3002 void onStartSuccess (); \u63a5\u53e3\u8bf4\u660e tuyaIotStart \u5931\u8d25\u65f6\u8c03\u7528 onStartFailure \u56de\u8c03\u3002 java void onStartFailure(int err); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u9519\u8bef\u7801\uff0c\u4e3a IotError \u4e2d\u5b9a\u4e49\u7684\u503c\u4e4b\u4e00\uff0c\u5e38\u89c1\u9519\u8bef\uff1a ERROR_COM_ERROR\uff1a\u7f51\u7edc\u8fde\u63a5\u9519\u8bef ERROR_INVALID_PARM\uff1a\u53c2\u6570\u9519\u8bef ERROR_INVALID_STATUS\uff1a\u72b6\u6001\u9519\u8bef \u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e String onGetLogFile (); \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 String \u9700\u8981\u4fdd\u5b58\u7684\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84","title":"IoT \u63a7\u5236"},{"location":"iot/#iot-\u63a7\u5236","text":"IoT \u63a7\u5236\u5b9e\u73b0\u4e86\u8bbe\u5907\u7684\u542f\u52a8\u3001\u5165\u7f51\u3002","title":"IoT \u63a7\u5236"},{"location":"iot/#iot-\u542f\u52a8","text":"","title":"IoT \u542f\u52a8"},{"location":"iot/#\u83b7\u53d6iot-sdk-\u5b9e\u4f8b","text":"\u793a\u4f8b\u4ee3\u7801 Java private TuyaIotSdk mIot = TuyaIotSdk . getInstance (); Kotlin var mIot = TuyaIotSdk . getInstance ()","title":"\u83b7\u53d6IoT SDK \u5b9e\u4f8b"},{"location":"iot/#\u6ce8\u518c\u56de\u8c03\u51fd\u6570","text":"\u521b\u5efa IotCallbacks \u5bf9\u8c61\uff0c \u8c03\u7528 TuyaIotSdk \u7684 setIotCallbacks \u51fd\u6570\u6ce8\u518c\u3002\u56de\u8c03\u51fd\u6570\u7684\u5b9e\u73b0\u53c2\u8003 \u56de\u8c03\u51fd\u6570 \u4e2d\u8bf4\u660e\u3002 \u793a\u4f8b\u4ee3\u7801 Java mIot . setIotCallbacks ( new IotCallbacks () { @Override public String onGetIP () { return null ; } @Override public String onGetMacAddress () { return null ; } @Override public void onStatusChanged ( int status ) { } @Override public void onReset ( int type ) { } @Override public void onReboot () { } @Override public void onDataPointCommand ( int type , int dttType , String cid , String groupid , DataPoint [] dataPoint ) { } @Override public void onRawDataPointCommand ( int type , int dttType , String cid , int dpid , String groupid , byte [] data ) { } @Override public void onDataPointQuery ( String cid , int [] dpArray ) { } @Override public void onNetworkStatus ( int status ) { } @Override public void onStartSuccess () { } @Override public void onStartFailure ( int err ) { } @Override public String onGetLogFile () { return null ; } }); Kotlin mIot . setIotCallbacks ( object : IotCallbacks { override fun onStatusChanged ( status : Int ) { TODO ( \"Not yet implemented\" ) } override fun onReset ( type : Int ) { TODO ( \"Not yet implemented\" ) } override fun onReboot () { TODO ( \"Not yet implemented\" ) } override fun onDataPointCommand ( type : Int , dttType : Int , cid : String? , groupid : String? , dataPoint : Array < out DataPoint >? ) { TODO ( \"Not yet implemented\" ) } override fun onRawDataPointCommand ( type : Int , dttType : Int , cid : String? , dpid : Int , groupid : String? , data : ByteArray?) { TODO ( \"Not yet implemented\" ) } override fun onDataPointQuery ( cid : String? , dpArray : IntArray?) { TODO ( \"Not yet implemented\" ) } override fun onNetworkStatus ( status : Int ) { TODO ( \"Not yet implemented\" ) } override fun onStartSuccess () { TODO ( \"Not yet implemented\" ) } override fun onStartFailure ( err : Int ) { TODO ( \"Not yet implemented\" ) } override fun onGetLogFile (): String { TODO ( \"Not yet implemented\" ) } override fun onGetIP (): String { TODO ( \"Not yet implemented\" ) } override fun onGetMacAddress (): String { TODO ( \"Not yet implemented\" ) } })","title":"\u6ce8\u518c\u56de\u8c03\u51fd\u6570"},{"location":"iot/#\u542f\u52a8iot","text":"\u63a5\u53e3\u8bf4\u660e void tuyaIotStart ( Context context , IotConfig config ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e Context \u4e0a\u4e0b\u6587 IotConfig IoT \u914d\u7f6e IotConfig \u6210\u5458 \u8bf4\u660e mPath \u5b58\u50a8\u8def\u5f84\uff08\u8981\u6c42\u53ef\u8bfb\u5199\u5206\u533a\uff09\uff0c\u8be5\u76ee\u5f55\u8981\u5728app\u4e2d\u521b\u5efa mFirmwareKey \u56fa\u4ef6key\u6216\u8005pid\uff0c\u5411\u6d82\u9e26\u7533\u8bf7\uff0c\u4ea7\u54c1\u552f\u4e00\u3002 \u548cmIsOEM\u914d\u5408\u4f7f\u7528: mIsOEM\u4e3atrue\u65f6\uff0cmFirmwareKey\u4e3a\u56fa\u4ef6key mIsOEM\u4e3afalse\u65f6\uff0cmFirmwareKey\u4e3apid mUUID \u6d82\u9e26IOT\u5e73\u53f0\u83b7\u53d6\u5230\u7684UUID\uff08\u6388\u6743\u4fe1\u606f\uff09\uff0c\u548cmAuthKey\u6210\u5bf9\u4f7f\u7528 mAuthKey \u6d82\u9e26IOT\u5e73\u53f0\u83b7\u53d6\u5230\u7684Authkey\uff08\u6388\u6743\u4fe1\u606f\uff09\uff0c\u548cmUUID\u6210\u5bf9\u4f7f\u7528 mIsOEM \u662f\u5426\u662foem\u4ea7\u54c1\uff0c\u548cmFirmwareKey\u914d\u5408\u4f7f\u7528\u3002 mPackageName App\u7684\u5305\u540d\uff0c\u7528\u4e8eApp/\u56fa\u4ef6\u7684OTA\u5347\u7ea7\u3002 mVersion App/\u8bbe\u5907\u56fa\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u7531\u7528\u6237\u8bbe\u7f6e\uff0c\u683c\u5f0f\u4e3a \u201cxx.xx.xx\u201d\u3002 \u7528\u4e8e\u56fa\u4ef6\u5347\u7ea7\uff0c\u8bbe\u5907\u6fc0\u6d3b\u540e\uff0c\u7248\u672c\u53f7\u4f1a\u5728\u624b\u673aAPP\u4e0a\u8bbe\u5907\u8be6\u60c5\u4e2d\u8fdb\u884c\u5c55\u793a\u3002 mNetworkInterface \u8bbe\u5907\u7684\u7f51\u5361\u540d\u79f0\uff0c\u6bd4\u5982: wlan0, eth0\u3002\u4e3anull\u65f6SDK\u4f1a\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f51\u5361\u3002 mLogLevel SDK\u8f93\u51falog\u4fe1\u606f\u7684\u7ea7\u522b \u8fd4\u56de\u503c\u8bf4\u660e tuyaIotStart \u662f\u5f02\u6b65\u8c03\u7528\uff0c\u5176\u7ed3\u679c\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u8fd4\u56de\uff0c\u542f\u52a8\u6210\u529f\u56de\u8c03\u51fd\u6570 onStartSuccess\uff0c\u5931\u8d25\u8c03\u7528\u56de\u8c03\u51fd\u6570onStartFailure\uff0c\u53c2\u8003 \u542f\u52a8\u7ed3\u679c\u56de\u8c03 \u4e2d\u7684\u8bf4\u660e\u3002 \u793a\u4f8b\u4ee3\u7801 Java File filedirs = getFilesDir (); String storageDir = filedirs + File . separator + \"storage\" + File . separator ; File file = new File ( storageDir ); if ( ! file . exists ()) { file . mkdir (); } IotConfig config = new IotConfig (); config . mFirmwareKey = \"xxxxxxxxxx\" ; config . mUUID = \"xxxxxxxxxx\" ; config . mAuthKey = \"xxxxxxxxxxxxxxx\" ; config . mIsOEM = true ; config . mVersion = \"1.0.0\" ; config . mPackageName = getPackageName (); config . mPath = storageDir ; config . mLogLevel = TY_LOG_LEVEL_DEBUG ; mIot . tuyaIotStart ( context , config ); Kotlin ```kotlin val filedirs: File = getFilesDir() val storageDir = filedirs.toString() + File.separator + \"storage\" + File.separator val file = File(storageDir) if (!file.exists()) { file.mkdir() } val config = IotConfig() config.mFirmwareKey = \"xxxxxxxxxx\" config.mUUID = \"xxxxxxxxxx\" config.mAuthKey = \"xxxxxxxxxxxxxxx\" config.mIsOEM = true config.mVersion = \"1.0.0\" config.mPackageName = getPackageName() config.mPath = storageDir config.mLogLevel = LogLevel.TY_LOG_LEVEL_DEBUG mIot.tuyaIotStart(context, config) ``` |","title":"\u542f\u52a8IoT"},{"location":"iot/#iot-\u8bbe\u5907\u6fc0\u6d3b","text":"\u542f\u52a8\u8bbe\u5907\u6210\u529f\u4e4b\u540e\uff0c\u624d\u53ef\u4ee5\u5165\u7f51\u3002 \u63a5\u53e3\u8bf4\u660e public int tuyaIotBindToken ( String token ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e token \u5165\u7f51 token \uff0c \u9700\u8981\u767b\u5f55\u6d82\u9e26\u8d26\u53f7\u4e4b\u540e\u8c03\u7528 Tuya Smart Android Home SDK \u4e2d\u7684\u63a5\u53e3\u83b7\u53d6\u3002 \u8be6\u60c5\u8bf7\u53c2\u8003 Tuya Smart Android Home SDK - \u8bbe\u5907\u914d\u7f51 - \u83b7\u53d6\u914d\u7f51 token \u7684\u63a5\u53e3\u8bf4\u660e\u3002 \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u8bf4\u660e 0 \u8c03\u7528\u6210\u529f\uff0c\u8bf7\u6ce8\u610f\uff0c\u8c03\u7528\u6210\u529f\u4e0d\u4ee3\u8868\u5df2\u7ecf\u5165\u7f51\u6210\u529f\uff0c\u5165\u7f51\u7ed3\u679c\u901a\u8fc7 onNetworkStatus \u901a\u77e5\u3002 \u975e 0 \u503c \u8c03\u7528\u5931\u8d25\uff0c\u6ca1\u6709\u5165\u7f51\u3002 \u793a\u4f8b\u4ee3\u7801 Java TuyaHomeSdk . getActivatorInstance (). getActivatorToken ( homeId , new ITuyaActivatorGetToken () { @Override public void onSuccess ( final String token ) { threadPoolExecutor . execute ( new Runnable () { @Override public void run () { Log . e ( TAG , \"get token suc , iot bind token\" ); TuyaIotSdk . getInstance (). tuyaIotBindToken ( token ); } }); } @Override public void onFailure ( String errorCode , String errorMsg ) { Log . e ( TAG , \"get token failed \" + errorCode + \", \" + errorMsg ); } });","title":"IoT \u8bbe\u5907\u6fc0\u6d3b"},{"location":"iot/#dp-\u70b9\u4e0a\u62a5","text":"","title":"DP \u70b9\u4e0a\u62a5"},{"location":"iot/#\u5f02\u6b65\u4e0a\u62a5","text":"\u63a5\u53e3\u8bf4\u660e \u540c\u6b65\u4e0a\u4f20\u900f\u4f20\u578b DP \u70b9\u6570\u636e\u3002 public int tuyaIotReportDataPointJsonAsync ( String devId , DataPoint [] dataPoint ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e devId \u5982\u679c\u662f\u4e3b\u8bbe\u5907\uff0cdevId \u662f\u81ea\u8bbe\u5907 id\uff1b\u5982\u679c\u662fIoT /soc/mcu\uff0c\u5219 devId \u4e3a null dataPoint dp \u70b9\u4fe1\u606f\uff0c\u53c2\u8003 TuyaIotSdk.DataPoint TuyaIotSdk.DataPoint \u6210\u5458 \u8bf4\u660e mId \u5728\u6d82\u9e26 IoT \u5e73\u53f0\u4e0a\u5b9a\u4e49\u7684\u529f\u80fd\u70b9\u7f16\u53f7 mType \u529f\u80fd\u70b9\u7684\u6570\u636e\u7c7b\u578b\uff0c\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u8bf7\u53c2\u89c1\u6d82\u9e26\u6587\u6863\u4e2d\u5fc3\u7684\u529f\u80fd\u70b9\u5b9a\u4e49\uff0c\u53c2\u8003 \u81ea\u5b9a\u4e49\u529f\u80fd : TYPE_BOOL\uff1a\u5e03\u5c14\u578b TYPE_VALUE\uff1a\u6570\u503c\u578b TYPE_STRING\uff1a\u5b57\u7b26\u4e32\u578b TYPE_ENUM\uff1a\u679a\u4e3e\u578b TYPE_BITMAP\uff1a\u6545\u969c\u578b mData \u529f\u80fd\u70b9\u7684\u503c\uff0c\u6570\u636e\u7c7b\u578b\u7531 mType \u6307\u5b9a\u3002 mTimeStamp \u65f6\u95f4\u6233\uff0c\u503c\u4e3a 0 \u65f6\u91c7\u7528\u5f53\u524d\u7684\u65f6\u95f4\u3002","title":"\u5f02\u6b65\u4e0a\u62a5"},{"location":"iot/#\u540c\u6b65\u4e0a\u62a5","text":"\u63a5\u53e3\u8bf4\u660e public int tuyaIotReportDataPointRawSync ( String devId , int dataPointId , byte [] data , int timeout ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 devId \u5982\u679c\u662f\u4e3b\u8bbe\u5907\uff0cdevId \u662f\u81ea\u8bbe\u5907 id\uff1b\u5982\u679c\u662fIoT /soc/mcu\uff0c\u5219 devId \u4e3a null dataPointId \u5728\u6d82\u9e26 IoT \u5e73\u53f0\u4e0a\u5b9a\u4e49\u7684\u529f\u80fd\u70b9\u7f16\u53f7 data \u900f\u4f20\u578b dp \u70b9\u6570\u636e timeout \u51fd\u6570\u963b\u585e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d","title":"\u540c\u6b65\u4e0a\u62a5"},{"location":"iot/#atop\u900f\u4f20\u63a5\u53e3","text":"\u63a5\u53e3\u8bf4\u660e ATopResponse tuyaIotAtopPost ( String api , String version , String postData ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e api \u63a5\u53e3\u540d version \u63a5\u53e3\u7248\u672c postData \u4e0a\u62a5\u4e91\u7aef\u7684\u6570\u636ejson\u5b57\u7b26\u4e32 \u8fd4\u56de\u503c \u542b\u4e49 ATopResponse \u5305\u542berrCode\uff08\u9519\u8bef\u7801\uff09\u548cresult\uff08\u8bf7\u6c42\u7ed3\u679c\uff09\u4e24\u4e2a\u5b57\u6bb5\u3002\u8bf7\u6c42\u6b63\u5e38\u8fd4\u56de\u65f6errCode\u4e3a0 \u793a\u4f8b\u4ee3\u7801 Java ATopResponse response = mIot . tuyaIotAtopPost ( \"tuya.xx.xx\" , \"1.0\" , \"\" ); if ( response . errCode == 0 ) { Log . d ( TAG , \"result: \" + response . result ); }","title":"ATOP\u900f\u4f20\u63a5\u53e3"},{"location":"iot/#\u83b7\u53d6\u865a\u62df-id","text":"IoT \u8bbe\u5907\u6fc0\u6d3b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u65b9\u6cd5\u83b7\u53d6\u8bbe\u5907\u7684\u865a\u62df ID \u3002 \u63a5\u53e3\u8bf4\u660e String getId () \uff1b","title":"\u83b7\u53d6\u865a\u62df ID"},{"location":"iot/#\u83b7\u53d6-sdk-\u7248\u672c\u4fe1\u606f","text":"\u63a5\u53e3\u8bf4\u660e String getVersion ();","title":"\u83b7\u53d6 SDK \u7248\u672c\u4fe1\u606f"},{"location":"iot/#iot-\u8bbe\u5907\u91cd\u7f6e","text":"IoT \u8bbe\u5907\u672c\u5730\u6062\u590d\u51fa\u5382\u8bbe\u7f6e\uff0cIoT \u8bbe\u5907\u4f1a\u4ece\u4e91\u7aef\u89e3\u7ed1\uff0c\u5e76\u5c06\u5b50\u8bbe\u5907\u7b49\u6570\u636e\u4fe1\u606f\u5168\u90e8\u5220\u9664\u3002 \u63a5\u53e3\u8bf4\u660e public int tuyaIotReset (); IoT \u91cd\u7f6e\u540e\u4f1a\u89e6\u53d1 IoT \u91cd\u7f6e\u56de\u8c03","title":"IoT \u8bbe\u5907\u91cd\u7f6e"},{"location":"iot/#\u9500\u6bc1iot--sdk-\u5b9e\u4f8b","text":"\u63a5\u53e3\u8bf4\u660e void tuyaIotRelease ();","title":"\u9500\u6bc1IoT  SDK \u5b9e\u4f8b"},{"location":"iot/#\u56de\u8c03\u51fd\u6570","text":"\u5728\u8c03\u7528 IotStart \u4e4b\u524d\u5e94\u8be5\u6ce8\u518c IotCallbacks \u56de\u8c03\u51fd\u6570\uff0c\u4ee5\u63a5\u6536\u5904\u7406\u7ed3\u679c\u3002","title":"\u56de\u8c03\u51fd\u6570"},{"location":"iot/#iot-\u72b6\u6001\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e IoT \u72b6\u6001\u66f4\u65b0\u65f6\u56de\u8c03\u3002 void onStatusChanged ( int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 status \u72b6\u6001\u66f4\u6539\u901a\u77e5\u56de\u8c03\u51fd\u6570\uff1a STATUS_RESET\uff1aIoT \u88ab\u91cd\u7f6e STATUS_ACTIVATED\uff1aIoT \u88ab\u6fc0\u6d3b STATUS_FIRST_START\uff1aIoT \u7b2c\u4e00\u6b21\u542f\u52a8 STATUS_NORMAL\uff1aIoT \u6fc0\u6d3b\u800c\u4e14\u5df2\u7ecf\u542f\u52a8","title":"IoT \u72b6\u6001\u56de\u8c03"},{"location":"iot/#iot-\u91cd\u7f6e\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e IoT \u88ab\u91cd\u7f6e\u540e\u56de\u8c03\uff0capp \u9700\u8981\u6839\u636e type \u7684\u503c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 void onReset ( int type ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u91cd\u7f6e\u7c7b\u578b\uff1a RESET_TYPE_LOCAL_RESET_FACTORY\uff1a\u672c\u5730\u6062\u590d\u5de5\u5382\u8bbe\u7f6e RESET_TYPE_REMOTE_UNACTIVE\uff1a\u8fdc\u7aefIoT \u91cd\u7f6e\uff0c\u5373\u4e3a\u901a\u8fc7 APP \u53d6\u6d88\u4e0e\u8d26\u53f7\u7ed1\u5b9a RESET_TYPE_LOCAL_UNACTIVE\uff1a\u672c\u5730IoT \u91cd\u7f6e\uff0c\u53d6\u6d88\u4e0e\u8d26\u53f7\u7ed1\u5b9a RESET_TYPE_REMOTE_RESET_FACTORY\uff1a\u8fdc\u7aef\u6062\u590d\u5de5\u5382\u8bbe\u7f6e RESET_TYPE_RESET_DATA_FACTORY\uff1a\u6062\u590d\u6570\u636e\u5de5\u5382\u8bbe\u7f6e","title":"IoT \u91cd\u7f6e\u56de\u8c03"},{"location":"iot/#\u91cd\u542f\u8bf7\u6c42\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e IoT \u8bf7\u6c42\u91cd\u542f\u8bbe\u5907\u3002 void onReboot ();","title":"\u91cd\u542f\u8bf7\u6c42\u56de\u8c03"},{"location":"iot/#iot-\u8bbe\u5907\u7f51\u7edc\u72b6\u6001\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e IoT \u5df2\u7ecf\u88ab\u91cd\u7f6e\uff0capp \u9700\u8981\u6839\u636e type \u7684\u503c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 void onNetworkStatus ( int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u7f51\u7edc\u72b6\u6001\uff1a CLOUD_UNCONNECTED\uff1a\u8054\u7f51\u5931\u8d25 CLOUD_CONNECTED\uff1a\u4e91\u7aef\u8fde\u63a5\u6210\u529f\uff0c\u8bbe\u5907\u5df2\u7ecf\u6fc0\u6d3b","title":"IoT \u8bbe\u5907\u7f51\u7edc\u72b6\u6001\u56de\u8c03"},{"location":"iot/#iot-dp-\u70b9\u4e0b\u53d1\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e DP \u70b9\u4e0b\u53d1\u3002 void onDataPointCommand ( @DataPointCommandType int type , @DataPointTransportType int dttType , String cid , String groupid , DataPoint [] dataPoint ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u6307\u4ee4\u7c7b\u578b\uff1a DATAPOINT_CMD_LAN\uff1aLAN \u89e6\u53d1 DATAPOINT_CMD_MQ\uff1aMQTT \u89e6\u53d1 DATAPOINT_CMD_TIMER\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_CMD_SCENE_LINKAGE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 DATAPOINT_CMD_RELIABLE_TRANSFER\uff1a\u91cd\u53d1 dttType \u4f20\u8f93\u65b9\u5f0f\uff1a DATAPOINT_DTT_SCT_UNC\uff1aLAN \u89e6\u53d1 DATAPOINT_DTT_SCT_BNC\uff1aMQTT \u89e6\u53d1 DATAPOINT_DTT_SCT_MNC\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_DTT_SCT_SCENE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684IoT \u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684IoT \u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID groupid \u7fa4\u7ec4 ID\uff0c\u53ea\u6709\u5f53 dtt_tp = 2 \u65f6\uff0c\u8be5\u5b57\u6bb5\u624d\u6709\u6548\u3002 dataPoint dp\u70b9\u6570\u636e\uff0cDataPoint\u7c7b\u578b\u53c2\u8003 DP\u70b9\u5f02\u6b65\u4e0a\u62a5 \u4e2d\u7684\u8bf4\u660e\u3002","title":"IoT DP \u70b9\u4e0b\u53d1\u56de\u8c03"},{"location":"iot/#iot-dp-\u70b9\u900f\u4f20\u6570\u636e\u4e0b\u53d1\u56de\u8c03","text":"\u7528\u4e8e\u900f\u4f20\u7528\u6237\u81ea\u5b9a\u4e49\u7684 DP \u70b9\u6570\u636e \u63a5\u53e3\u8bf4\u660e void onRawDataPointCommand ( @DataPointCommandType int type , @DataPointTransportType int dttType , String cid , int dpid , String groupid , byte [] data ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u6307\u4ee4\u7c7b\u578b\uff1a DATAPOINT_CMD_LAN\uff1aLAN \u89e6\u53d1 DATAPOINT_CMD_MQ\uff1aMQTT \u89e6\u53d1 DATAPOINT_CMD_TIMER\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_CMD_SCENE_LINKAGE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 DATAPOINT_CMD_RELIABLE_TRANSFER\uff1a\u91cd\u53d1 dttType \u4f20\u8f93\u65b9\u5f0f\uff1a DATAPOINT_DTT_SCT_UNC\uff1aLAN \u89e6\u53d1 DATAPOINT_DTT_SCT_BNC\uff1aMQTT \u89e6\u53d1 DATAPOINT_DTT_SCT_MNC\uff1a\u672c\u5730\u5b9a\u65f6\u89e6\u53d1 DATAPOINT_DTT_SCT_SCENE\uff1a\u573a\u666f\u8054\u52a8\u89e6\u53d1 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684IoT \u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684IoT \u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID dpid DP \u70b9\u7684 ID groupid \u7fa4\u7ec4 ID\uff0c\u53ea\u6709\u5f53 dtt_tp = 2 \u65f6\uff0c\u8be5\u5b57\u6bb5\u624d\u6709\u6548\u3002 data DP \u70b9\u6570\u636e","title":"IoT DP \u70b9\u900f\u4f20\u6570\u636e\u4e0b\u53d1\u56de\u8c03"},{"location":"iot/#iot-dp-\u70b9\u6570\u636e\u67e5\u8be2\u56de\u8c03","text":"\u7528\u4e8e\u8bbe\u5907\u7279\u5b9a\u6570\u636e\u67e5\u8be2 \u63a5\u53e3\u8bf4\u660e void onDataPointQuery ( String cid , int [] dpArray ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 cid cid == NULL \u8868\u793a\u63a7\u5236\u7684IoT \u7684\u529f\u80fd\u70b9\uff1bcid != NULL \u8868\u793a\u63a7\u5236\u7684IoT \u5b50\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5176\u4e2d cid \u662f\u5b50\u8bbe\u5907\u7684\u552f\u4e00 ID dpArray \u7528\u6237\u5b9a\u4e49\u529f\u80fd\u70b9\u5e8f\u53f7\u96c6","title":"IoT DP \u70b9\u6570\u636e\u67e5\u8be2\u56de\u8c03"},{"location":"iot/#\u83b7\u53d6-ip-\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u83b7\u53d6\u8bbe\u5907IP\uff0c\u5df2\u5e9f\u5f03\u3002 String onGetIP ();","title":"\u83b7\u53d6 IP \u56de\u8c03"},{"location":"iot/#\u83b7\u53d6-mac-\u5730\u5740\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u83b7\u53d6\u8bbe\u5907 MAC \u5730\u5740\uff0c\u5df2\u5e9f\u5f03\u3002 String onGetMacAddress ();","title":"\u83b7\u53d6 MAC \u5730\u5740\u56de\u8c03"},{"location":"iot/#\u542f\u52a8\u7ed3\u679c\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e tuyaIotStart \u6210\u529f\u65f6\u8c03\u7528 onStartSuccess \u56de\u8c03\u3002 void onStartSuccess (); \u63a5\u53e3\u8bf4\u660e tuyaIotStart \u5931\u8d25\u65f6\u8c03\u7528 onStartFailure \u56de\u8c03\u3002 java void onStartFailure(int err); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u9519\u8bef\u7801\uff0c\u4e3a IotError \u4e2d\u5b9a\u4e49\u7684\u503c\u4e4b\u4e00\uff0c\u5e38\u89c1\u9519\u8bef\uff1a ERROR_COM_ERROR\uff1a\u7f51\u7edc\u8fde\u63a5\u9519\u8bef ERROR_INVALID_PARM\uff1a\u53c2\u6570\u9519\u8bef ERROR_INVALID_STATUS\uff1a\u72b6\u6001\u9519\u8bef","title":"\u542f\u52a8\u7ed3\u679c\u56de\u8c03"},{"location":"iot/#\u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e String onGetLogFile (); \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 String \u9700\u8981\u4fdd\u5b58\u7684\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84","title":"\u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6\u56de\u8c03"},{"location":"logutils/","text":"\u65e5\u5fd7\u7cfb\u7edf \u521b\u5efa LogDeamon \u5bf9\u8c61 \u63a5\u53e3\u8bf4\u660e public LogDaemon ( String logDir , int maxfileCount , int fileSizeKB , String prefixName ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e logDir \u65e5\u5fd7\u8def\u5f84\uff0c\u5982\u679c\u8def\u5f84\u6ca1\u6709\u521b\u5efa\uff0c\u65e5\u5fd7\u7cfb\u7edf\u4f1a\u521b\u5efa\u8be5\u76ee\u5f55\u3002 maxfileCount \u5907\u4efd\u7684\u65e5\u5fd7\u6587\u4ef6\u4e2a\u6570\uff0c\u4e0d\u5305\u62ec\u5f53\u524d\u5199\u7684\u6587\u4ef6\u3002 fileSizeKB \u6587\u4ef6\u5927\u5c0f\uff0c\u5f53\u65e5\u5fd7\u6587\u4ef6\u8fbe\u5230 fileSizeKB \u6307\u5b9a\u5927\u5c0f\u65f6\uff0c\u4f1a\u5907\u4efd\u5f53\u524d\u6587\u4ef6\uff0c\u5982\u679c\u5907\u4efd\u7684\u6587\u4ef6\u4e2a\u6570\u8fbe\u5230 maxfileCount \u6307\u5b9a\u7684\u503c\uff0c\u5219\u5220\u9664\u6700\u8001\u7684\u4e00\u4e2a\u6587\u4ef6\u3002 prefixName \u65e5\u5fd7\u6587\u4ef6\u540d\uff0c\u6700\u7ec8\u751f\u6210\u65e5\u5fd7\u6587\u4ef6 logDir/prefixName.log\uff0c\u5907\u4efd\u6587\u4ef6\u4e3alogDir/prefixName.log.1, logDir/prefixName.log.2\u2026 \u793a\u4f8b\u4ee3\u7801 String filePath = getFilesDir (). getAbsolutePath (); String logPath = filePath + File . separator + \"log\" ; //logPath/gateawy.log mLogDaemon = new LogDaemon ( logPath , 10 , 3 * 1024 , \"gateway\" ); \u8bbe\u7f6e\u65e5\u5fd7\u4fdd\u5b58\u65b9\u5f0f \u63a5\u53e3\u8bf4\u660e public void setExpectation ( int pid , String tags , boolean seperate ) \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e pid -1\uff1a\u4e0d\u6309\u7167\u8fdb\u7a0b\u6293\u53d6\u65e5\u5fd7\uff1b\u6b63\u503c\uff1a\u8981\u6293\u53d6\u7684\u8fdb\u7a0bid\u3002 tags \u8bbe\u7f6e\u8981\u6293\u53d6\u7684 tag\uff0c\u591a\u4e2a tag \u7528\u82f1\u6587\u9017\u53f7\u5206\u5f00\uff0c\u4f8b\u5982 \u201cTuyaGatewaySdk,LogDaemon\u201d\uff0c\u6293\u53d6Android LOG TAG \u4e3a TuyaGatewaySdk \u548c LogDaemon \u7684\u65e5\u5fd7\u3002 seperate \u5982\u679c\u8981\u901a\u8fc7 pid \u548c tag \u6293\u53d6\u65e5\u5fd7\uff0cseperate \u6307\u5b9a\u662f\u5426\u5206\u5f00\u6293\u53d6\uff0c\u5982\u679c\u5206\u5f00\u6293\u53d6\uff0cpid \u4e00\u4efd log\uff0ctag \u4e00\u4efd log\uff1b\u5426\u5219\u6293\u53d6 pid \u4e2d\u6307\u5b9a\u7684 tag \u65e5\u5fd7\u3002\u53ea\u6709 pid \u548c tag \u540c\u65f6\u6709\u6548\u65f6\uff0c\u8be5\u53c2\u6570\u624d\u6709\u610f\u4e49\u3002 \u793a\u4f8b\u4ee3\u7801 \u6536\u96c6\u6307\u5b9a\u8fdb\u7a0b\u7684\u5168\u90e8\u65e5\u5fd7 \u6293\u53d6\u672c\u8fdb\u7a0b\u7684\u6240\u6709\u65e5\u5fd7\uff1a mLogDaemon . setExpectation ( android . os . Process . myPid (), null , false ); mLogDaemon . start (); \u6536\u96c6\u6307\u5b9a\u8fdb\u7a0b\u4e2d\u7b26\u5408 tag \u7684\u65e5\u5fd7 \u6293\u53d6\u672c\u8fdb\u7a0b\u4e2d tag \u4e3a TuyaGatewaySdk \u548c LogDaemon \u7684\u65e5\u5fd7\uff1a mLogDaemon . setExpectation ( android . os . Process . myPid (), \"TuyaGatewaySdk,LogDaemon\" , false ); mLogDaemon . start (); \u6536\u96c6\u6307\u5b9a tag \u7684\u65e5\u5fd7 \u6293\u53d6 tag \u4e3a TuyaGatewaySdk\u548c LogDaemon \u7684\u65e5\u5fd7\uff1a mLogDaemon . setExpectation ( - 1 , \"TuyaGatewaySdk,LogDaemon\" , false ); mLogDaemon . start (); \u6536\u96c6\u6307\u5b9a pid \u7684\u65e5\u5fd7\u548c\u6307\u5b9a tag \u7684\u65e5\u5fd7\uff0c\u8f93\u51fa\u4e24\u4efd\u65e5\u5fd7 \u5206\u522b\u6293\u53d6\u672c\u8fdb\u7a0b\u6240\u6709\u65e5\u5fd7\u4ee5\u53ca tag \u4e3a TuyaGatewaySdk \u548c LogDaemon \u7684\u65e5\u5fd7\u7684\u65e5\u5fd7\u3002 mLogDaemon . setExpectation ( android . os . Process . myPid (), \"TuyaGatewaySdk,LogDaemon\" , true ); mLogDaemon . start (); \u5f00\u59cb\u65e5\u5fd7\u4fdd\u5b58 \u63a5\u53e3\u8bf4\u660e public boolean start (); \u505c\u6b62\u65e5\u5fd7\u4fdd\u5b58 \u63a5\u53e3\u8bf4\u660e \u8bbe\u5907\u9000\u51fa\u6216\u8005\u91cd\u542f app \u8fdb\u7a0b\u65f6\uff0c\u8bf7\u52a1\u5fc5\u4e5f\u9000\u51fa\u65e5\u5fd7\u7cfb\u7edf\uff0c\u56e0\u4e3a\u65e5\u5fd7\u7cfb\u7edf\u5185\u90e8\u8d77\u4e86 logcat \u8fdb\u7a0b\u3002 public void stop (); \u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6 \u63a5\u53e3\u8bf4\u660e \u8be5\u63a5\u53e3\u4f1a\u5c06\u65e5\u5fd7\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u65e5\u5fd7\u6587\u4ef6\u6253\u5305\u4e3a\u4e00\u4e2a zip \u6587\u4ef6\u3002 public String getZippedLogFile () \uff1b","title":"\u65e5\u5fd7\u7cfb\u7edf"},{"location":"logutils/#\u65e5\u5fd7\u7cfb\u7edf","text":"","title":"\u65e5\u5fd7\u7cfb\u7edf"},{"location":"logutils/#\u521b\u5efa-logdeamon-\u5bf9\u8c61","text":"\u63a5\u53e3\u8bf4\u660e public LogDaemon ( String logDir , int maxfileCount , int fileSizeKB , String prefixName ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e logDir \u65e5\u5fd7\u8def\u5f84\uff0c\u5982\u679c\u8def\u5f84\u6ca1\u6709\u521b\u5efa\uff0c\u65e5\u5fd7\u7cfb\u7edf\u4f1a\u521b\u5efa\u8be5\u76ee\u5f55\u3002 maxfileCount \u5907\u4efd\u7684\u65e5\u5fd7\u6587\u4ef6\u4e2a\u6570\uff0c\u4e0d\u5305\u62ec\u5f53\u524d\u5199\u7684\u6587\u4ef6\u3002 fileSizeKB \u6587\u4ef6\u5927\u5c0f\uff0c\u5f53\u65e5\u5fd7\u6587\u4ef6\u8fbe\u5230 fileSizeKB \u6307\u5b9a\u5927\u5c0f\u65f6\uff0c\u4f1a\u5907\u4efd\u5f53\u524d\u6587\u4ef6\uff0c\u5982\u679c\u5907\u4efd\u7684\u6587\u4ef6\u4e2a\u6570\u8fbe\u5230 maxfileCount \u6307\u5b9a\u7684\u503c\uff0c\u5219\u5220\u9664\u6700\u8001\u7684\u4e00\u4e2a\u6587\u4ef6\u3002 prefixName \u65e5\u5fd7\u6587\u4ef6\u540d\uff0c\u6700\u7ec8\u751f\u6210\u65e5\u5fd7\u6587\u4ef6 logDir/prefixName.log\uff0c\u5907\u4efd\u6587\u4ef6\u4e3alogDir/prefixName.log.1, logDir/prefixName.log.2\u2026 \u793a\u4f8b\u4ee3\u7801 String filePath = getFilesDir (). getAbsolutePath (); String logPath = filePath + File . separator + \"log\" ; //logPath/gateawy.log mLogDaemon = new LogDaemon ( logPath , 10 , 3 * 1024 , \"gateway\" );","title":"\u521b\u5efa LogDeamon \u5bf9\u8c61"},{"location":"logutils/#\u8bbe\u7f6e\u65e5\u5fd7\u4fdd\u5b58\u65b9\u5f0f","text":"\u63a5\u53e3\u8bf4\u660e public void setExpectation ( int pid , String tags , boolean seperate ) \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e pid -1\uff1a\u4e0d\u6309\u7167\u8fdb\u7a0b\u6293\u53d6\u65e5\u5fd7\uff1b\u6b63\u503c\uff1a\u8981\u6293\u53d6\u7684\u8fdb\u7a0bid\u3002 tags \u8bbe\u7f6e\u8981\u6293\u53d6\u7684 tag\uff0c\u591a\u4e2a tag \u7528\u82f1\u6587\u9017\u53f7\u5206\u5f00\uff0c\u4f8b\u5982 \u201cTuyaGatewaySdk,LogDaemon\u201d\uff0c\u6293\u53d6Android LOG TAG \u4e3a TuyaGatewaySdk \u548c LogDaemon \u7684\u65e5\u5fd7\u3002 seperate \u5982\u679c\u8981\u901a\u8fc7 pid \u548c tag \u6293\u53d6\u65e5\u5fd7\uff0cseperate \u6307\u5b9a\u662f\u5426\u5206\u5f00\u6293\u53d6\uff0c\u5982\u679c\u5206\u5f00\u6293\u53d6\uff0cpid \u4e00\u4efd log\uff0ctag \u4e00\u4efd log\uff1b\u5426\u5219\u6293\u53d6 pid \u4e2d\u6307\u5b9a\u7684 tag \u65e5\u5fd7\u3002\u53ea\u6709 pid \u548c tag \u540c\u65f6\u6709\u6548\u65f6\uff0c\u8be5\u53c2\u6570\u624d\u6709\u610f\u4e49\u3002 \u793a\u4f8b\u4ee3\u7801 \u6536\u96c6\u6307\u5b9a\u8fdb\u7a0b\u7684\u5168\u90e8\u65e5\u5fd7 \u6293\u53d6\u672c\u8fdb\u7a0b\u7684\u6240\u6709\u65e5\u5fd7\uff1a mLogDaemon . setExpectation ( android . os . Process . myPid (), null , false ); mLogDaemon . start (); \u6536\u96c6\u6307\u5b9a\u8fdb\u7a0b\u4e2d\u7b26\u5408 tag \u7684\u65e5\u5fd7 \u6293\u53d6\u672c\u8fdb\u7a0b\u4e2d tag \u4e3a TuyaGatewaySdk \u548c LogDaemon \u7684\u65e5\u5fd7\uff1a mLogDaemon . setExpectation ( android . os . Process . myPid (), \"TuyaGatewaySdk,LogDaemon\" , false ); mLogDaemon . start (); \u6536\u96c6\u6307\u5b9a tag \u7684\u65e5\u5fd7 \u6293\u53d6 tag \u4e3a TuyaGatewaySdk\u548c LogDaemon \u7684\u65e5\u5fd7\uff1a mLogDaemon . setExpectation ( - 1 , \"TuyaGatewaySdk,LogDaemon\" , false ); mLogDaemon . start (); \u6536\u96c6\u6307\u5b9a pid \u7684\u65e5\u5fd7\u548c\u6307\u5b9a tag \u7684\u65e5\u5fd7\uff0c\u8f93\u51fa\u4e24\u4efd\u65e5\u5fd7 \u5206\u522b\u6293\u53d6\u672c\u8fdb\u7a0b\u6240\u6709\u65e5\u5fd7\u4ee5\u53ca tag \u4e3a TuyaGatewaySdk \u548c LogDaemon \u7684\u65e5\u5fd7\u7684\u65e5\u5fd7\u3002 mLogDaemon . setExpectation ( android . os . Process . myPid (), \"TuyaGatewaySdk,LogDaemon\" , true ); mLogDaemon . start ();","title":"\u8bbe\u7f6e\u65e5\u5fd7\u4fdd\u5b58\u65b9\u5f0f"},{"location":"logutils/#\u5f00\u59cb\u65e5\u5fd7\u4fdd\u5b58","text":"\u63a5\u53e3\u8bf4\u660e public boolean start ();","title":"\u5f00\u59cb\u65e5\u5fd7\u4fdd\u5b58"},{"location":"logutils/#\u505c\u6b62\u65e5\u5fd7\u4fdd\u5b58","text":"\u63a5\u53e3\u8bf4\u660e \u8bbe\u5907\u9000\u51fa\u6216\u8005\u91cd\u542f app \u8fdb\u7a0b\u65f6\uff0c\u8bf7\u52a1\u5fc5\u4e5f\u9000\u51fa\u65e5\u5fd7\u7cfb\u7edf\uff0c\u56e0\u4e3a\u65e5\u5fd7\u7cfb\u7edf\u5185\u90e8\u8d77\u4e86 logcat \u8fdb\u7a0b\u3002 public void stop ();","title":"\u505c\u6b62\u65e5\u5fd7\u4fdd\u5b58"},{"location":"logutils/#\u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6","text":"\u63a5\u53e3\u8bf4\u660e \u8be5\u63a5\u53e3\u4f1a\u5c06\u65e5\u5fd7\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u65e5\u5fd7\u6587\u4ef6\u6253\u5305\u4e3a\u4e00\u4e2a zip \u6587\u4ef6\u3002 public String getZippedLogFile () \uff1b","title":"\u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6"},{"location":"prepare/","text":"\u51c6\u5907\u5de5\u4f5c \u6ce8\u518c\u5f00\u53d1\u8005\u8d26\u53f7 \u524d\u5f80 \u6d82\u9e26\u667a\u80fd\u5f00\u53d1\u5e73\u53f0 \u6ce8\u518c\u5f00\u53d1\u8005\u8d26\u53f7\u3001\u521b\u5efa\u4ea7\u54c1\u3001\u521b\u5efa\u529f\u80fd\u70b9\u7b49\uff0c\u5177\u4f53\u6d41\u7a0b\u8bf7\u53c2\u8003 \u63a5\u5165\u6d41\u7a0b \u9009\u62e9\u6240\u9700\u7684 SDK \u5728\u60a8\u786e\u5b9a\u4ea7\u54c1\u7684\u7c7b\u578b\u548c\u529f\u80fd\u540e\uff0c\u6309\u9700\u9009\u62e9 SDK \u65b9\u6848\u3002 \u65b9\u6848\u4ecb\u7ecd \u8bbe\u5907\u65e0\u7f51\u5173\u80fd\u529b \u5bf9\u4e8e\u65e0\u7f51\u5173\u80fd\u529b\u7684\u4ea7\u54c1\uff0c\u8bf7\u4f7f\u7528 IoT SDK \u3002 \u8bbe\u5907\u5e26\u7f51\u5173\u80fd\u529b \u5982\u679c\u8bbe\u5907\u9700\u8981\u7f51\u5173\u80fd\u529b\uff0c\u8bf7\u4f7f\u7528 \u7f51\u5173 SDK \u3002 \u501f\u52a9\u7f51\u5173\u8bbe\u5907\u7684\u8054\u7f51\u80fd\u529b\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u4e0e\u6d82\u9e26 IoT \u5e73\u53f0\u3001\u6d82\u9e26 App \u5efa\u7acb\u901a\u4fe1\u94fe\u8def\u5e76\u8fdb\u884c\u6d82\u9e26\u6807\u51c6\u6570\u636e\u4ea4\u4e92\u3002 \u7f51\u5173\u7c7b\u4ea7\u54c1 \u5229\u7528 \u7f51\u5173 SDK \u4ee5\u53ca\u4e0d\u540c\u7684\u534f\u8bae\u63a7\u5236\u5668\u5c06\u4ea7\u54c1\u505a\u6210\u5b9e\u4f53\u7f51\u5173\u4ea7\u54c1\uff0c\u7f51\u5173\u5411\u4e0b\u63a5\u5165\u5404\u7c7b\u4e0d\u540c\u901a\u4fe1\u534f\u8bae\u7684\u4ea7\u54c1\uff0c\u4f8b\u5982 Zigbee\u3001BLE/Mesh\u3001ZWAVE \u7b49\u3002\u4f8b\u5982\u667a\u80fd\u5bb6\u5c45\u4e2d\u5e38\u89c1\u7684\u63a7\u5236\u4e2d\u5fc3\u3001\u667a\u6167\u4e3b\u673a\u7b49\u3002\u7f51\u5173\u63d0\u4f9b\u7f51\u5173\u56fa\u4ef6\u3001\u7f51\u5173\u63a7\u5236\u5668\u3001\u5b50\u7ec8\u7aef\u8bbe\u5907\u7684\u56fa\u4ef6\u5347\u7ea7\u80fd\u529b\u3002 \u7f51\u5173\u914d\u5907\u5b50\u8bbe\u5907\u7c7b\u4ea7\u54c1 \u5177\u5907\u7f51\u5173\u7c7b\u4ea7\u54c1\u5bf9\u5b50\u8bbe\u5907\u7684\u63a7\u5236\u5916\uff0c\u540c\u65f6\u672c\u8eab\u4e5f\u4f5c\u4e3a\u8bbe\u5907\u4ea7\u54c1\uff0c\u5b9a\u4e49\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5b9e\u73b0\u5bf9\u7f51\u5173\u8bbe\u5907\u7684\u63a7\u5236\u3002 \u8bbe\u5907\u5e26\u8bed\u97f3\u80fd\u529b \u60a8\u53ef\u4ee5\u901a\u8fc7 \u8bed\u97f3 SDK \u5b9e\u73b0tts\u64ad\u62a5\u3001ASR\u6587\u672c\u3001IOT\u6280\u80fd\uff08\u8bbe\u5907\u63a7\u5236\u3001\u8bbe\u5907\u63a5\u5165\uff09\u3001\u97f3\u4e50\uff08\u97f3\u4e50\u3001\u5929\u6c14\u3001\u76f8\u58f0\u3001\u7535\u53f0\u7b49\uff09\u3001\u63d0\u9192\u3001\u5a92\u4f53\u63a7\u5236\u7b49\u529f\u80fd\u3002 \u8bed\u97f3 SDK \u65e0\u6cd5\u5355\u72ec\u4f7f\u7528\uff0c\u9700\u8981\u548c IoT \u6216 \u7f51\u5173 SDK \u7ec4\u5408\u4f7f\u7528\u3002","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"prepare/#\u51c6\u5907\u5de5\u4f5c","text":"","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"prepare/#\u6ce8\u518c\u5f00\u53d1\u8005\u8d26\u53f7","text":"\u524d\u5f80 \u6d82\u9e26\u667a\u80fd\u5f00\u53d1\u5e73\u53f0 \u6ce8\u518c\u5f00\u53d1\u8005\u8d26\u53f7\u3001\u521b\u5efa\u4ea7\u54c1\u3001\u521b\u5efa\u529f\u80fd\u70b9\u7b49\uff0c\u5177\u4f53\u6d41\u7a0b\u8bf7\u53c2\u8003 \u63a5\u5165\u6d41\u7a0b","title":"\u6ce8\u518c\u5f00\u53d1\u8005\u8d26\u53f7"},{"location":"prepare/#\u9009\u62e9\u6240\u9700\u7684-sdk","text":"\u5728\u60a8\u786e\u5b9a\u4ea7\u54c1\u7684\u7c7b\u578b\u548c\u529f\u80fd\u540e\uff0c\u6309\u9700\u9009\u62e9 SDK \u65b9\u6848\u3002","title":"\u9009\u62e9\u6240\u9700\u7684 SDK"},{"location":"prepare/#\u65b9\u6848\u4ecb\u7ecd","text":"\u8bbe\u5907\u65e0\u7f51\u5173\u80fd\u529b \u5bf9\u4e8e\u65e0\u7f51\u5173\u80fd\u529b\u7684\u4ea7\u54c1\uff0c\u8bf7\u4f7f\u7528 IoT SDK \u3002 \u8bbe\u5907\u5e26\u7f51\u5173\u80fd\u529b \u5982\u679c\u8bbe\u5907\u9700\u8981\u7f51\u5173\u80fd\u529b\uff0c\u8bf7\u4f7f\u7528 \u7f51\u5173 SDK \u3002 \u501f\u52a9\u7f51\u5173\u8bbe\u5907\u7684\u8054\u7f51\u80fd\u529b\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u4e0e\u6d82\u9e26 IoT \u5e73\u53f0\u3001\u6d82\u9e26 App \u5efa\u7acb\u901a\u4fe1\u94fe\u8def\u5e76\u8fdb\u884c\u6d82\u9e26\u6807\u51c6\u6570\u636e\u4ea4\u4e92\u3002 \u7f51\u5173\u7c7b\u4ea7\u54c1 \u5229\u7528 \u7f51\u5173 SDK \u4ee5\u53ca\u4e0d\u540c\u7684\u534f\u8bae\u63a7\u5236\u5668\u5c06\u4ea7\u54c1\u505a\u6210\u5b9e\u4f53\u7f51\u5173\u4ea7\u54c1\uff0c\u7f51\u5173\u5411\u4e0b\u63a5\u5165\u5404\u7c7b\u4e0d\u540c\u901a\u4fe1\u534f\u8bae\u7684\u4ea7\u54c1\uff0c\u4f8b\u5982 Zigbee\u3001BLE/Mesh\u3001ZWAVE \u7b49\u3002\u4f8b\u5982\u667a\u80fd\u5bb6\u5c45\u4e2d\u5e38\u89c1\u7684\u63a7\u5236\u4e2d\u5fc3\u3001\u667a\u6167\u4e3b\u673a\u7b49\u3002\u7f51\u5173\u63d0\u4f9b\u7f51\u5173\u56fa\u4ef6\u3001\u7f51\u5173\u63a7\u5236\u5668\u3001\u5b50\u7ec8\u7aef\u8bbe\u5907\u7684\u56fa\u4ef6\u5347\u7ea7\u80fd\u529b\u3002 \u7f51\u5173\u914d\u5907\u5b50\u8bbe\u5907\u7c7b\u4ea7\u54c1 \u5177\u5907\u7f51\u5173\u7c7b\u4ea7\u54c1\u5bf9\u5b50\u8bbe\u5907\u7684\u63a7\u5236\u5916\uff0c\u540c\u65f6\u672c\u8eab\u4e5f\u4f5c\u4e3a\u8bbe\u5907\u4ea7\u54c1\uff0c\u5b9a\u4e49\u8bbe\u5907\u7684\u529f\u80fd\u70b9\uff0c\u5b9e\u73b0\u5bf9\u7f51\u5173\u8bbe\u5907\u7684\u63a7\u5236\u3002 \u8bbe\u5907\u5e26\u8bed\u97f3\u80fd\u529b \u60a8\u53ef\u4ee5\u901a\u8fc7 \u8bed\u97f3 SDK \u5b9e\u73b0tts\u64ad\u62a5\u3001ASR\u6587\u672c\u3001IOT\u6280\u80fd\uff08\u8bbe\u5907\u63a7\u5236\u3001\u8bbe\u5907\u63a5\u5165\uff09\u3001\u97f3\u4e50\uff08\u97f3\u4e50\u3001\u5929\u6c14\u3001\u76f8\u58f0\u3001\u7535\u53f0\u7b49\uff09\u3001\u63d0\u9192\u3001\u5a92\u4f53\u63a7\u5236\u7b49\u529f\u80fd\u3002 \u8bed\u97f3 SDK \u65e0\u6cd5\u5355\u72ec\u4f7f\u7528\uff0c\u9700\u8981\u548c IoT \u6216 \u7f51\u5173 SDK \u7ec4\u5408\u4f7f\u7528\u3002","title":"\u65b9\u6848\u4ecb\u7ecd"},{"location":"upgrade/","text":"OTA \u5347\u7ea7 \u8bbe\u7f6e\u5347\u7ea7\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u901a\u8fc7 TuyaGatewaySdk \u5355\u4f8b\u8bbe\u7f6e\u56de\u8c03\u5b9e\u73b0 void setUpgradeCallback ( UpgradeEventCallback upgradeCallback ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e upgradeCallback OTA \u4e8b\u4ef6\u56de\u8c03 \u56de\u8c03\u8bf4\u660e public interface UpgradeEventCallback { /** * sdk \u63a5\u6536\u5230\u540e\u7aef\u7684\u5347\u7ea7\u63a8\u9001\u7684\u65f6\u5019\uff0c\u4f1a\u89e6\u53d1\u6b64\u63a5\u53e3 \u9644\u5e26\u5347\u7ea7\u4fe1\u606f * @param version */ void onUpgradeInfo ( String version ); /** * \u5347\u7ea7\u6587\u4ef6\u5f00\u59cb\u4e0b\u8f7d */ void onUpgradeDownloadStart (); /** * \u5347\u7ea7\u6587\u4ef6\u4e0b\u8f7d\u8fdb\u5ea6 */ void onUpgradeDownloadUpdate ( int progress ); /** * sdk \u4e0b\u8f7d\u5347\u7ea7\u6587\u4ef6\u4e0b\u8f7d\u5b8c\u6210\u89e6\u53d1\u6b64\u63a5\u53e3 */ void upgradeFileDownloadFinished ( boolean success ); /** * \u5347\u7ea7\u5931\u8d25 * @param msg \u9519\u8bef\u4fe1\u606f */ void onUpgradeFail ( String msg ); } \u4e0a\u4f20\u5347\u7ea7\u56fa\u4ef6 \u51c6\u5907 ROM \u5347\u7ea7\u6587\u4ef6 update.zip\uff08\u975e\u5fc5\u987b\uff09 \u6253\u5347\u7ea7\u5305 app.apk\uff08\u5fc5\u987b\uff09 \u51c6\u5907\u7248\u672c\u6587\u4ef6 version.json\uff0c\u5185\u5bb9\u4e3a\uff1a { \"apkVersion\": \"1.2.0\", // apk\u7248\u672c\u53f7 \"romVersion\": \"1565694425\", // \u7cfb\u7edf\u5347\u7ea7\u6587\u4ef6\u7248\u672c\uff0c\u5347\u7ea7\u538b\u7f29\u5305\u7684/META-INF/com/android/metadata `post-timestamp` } \u5c06\u4e0a\u9762\u4e09\u4e2a(\u6216\u4e24\u4e2a)\u6587\u4ef6\u538b\u7f29\u4e3a \u6807\u8bc6\u540d_OTA_\u7248\u672c\u53f7.bin \uff0c\u4f8b\uff1a test_acs_rk3399-all_OTA_1.0.2.bin \u5728\u56fa\u4ef6\u53ca\u7248\u672c\u7ba1\u7406\u540e\u53f0\u4e0a\u4f20 \u5728\u56fa\u4ef6\u5347\u7ea7\u7ba1\u7406\u540e\u53f0\u6dfb\u52a0\u5347\u7ea7","title":"OTA \u5347\u7ea7"},{"location":"upgrade/#ota-\u5347\u7ea7","text":"","title":"OTA \u5347\u7ea7"},{"location":"upgrade/#\u8bbe\u7f6e\u5347\u7ea7\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u901a\u8fc7 TuyaGatewaySdk \u5355\u4f8b\u8bbe\u7f6e\u56de\u8c03\u5b9e\u73b0 void setUpgradeCallback ( UpgradeEventCallback upgradeCallback ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e upgradeCallback OTA \u4e8b\u4ef6\u56de\u8c03 \u56de\u8c03\u8bf4\u660e public interface UpgradeEventCallback { /** * sdk \u63a5\u6536\u5230\u540e\u7aef\u7684\u5347\u7ea7\u63a8\u9001\u7684\u65f6\u5019\uff0c\u4f1a\u89e6\u53d1\u6b64\u63a5\u53e3 \u9644\u5e26\u5347\u7ea7\u4fe1\u606f * @param version */ void onUpgradeInfo ( String version ); /** * \u5347\u7ea7\u6587\u4ef6\u5f00\u59cb\u4e0b\u8f7d */ void onUpgradeDownloadStart (); /** * \u5347\u7ea7\u6587\u4ef6\u4e0b\u8f7d\u8fdb\u5ea6 */ void onUpgradeDownloadUpdate ( int progress ); /** * sdk \u4e0b\u8f7d\u5347\u7ea7\u6587\u4ef6\u4e0b\u8f7d\u5b8c\u6210\u89e6\u53d1\u6b64\u63a5\u53e3 */ void upgradeFileDownloadFinished ( boolean success ); /** * \u5347\u7ea7\u5931\u8d25 * @param msg \u9519\u8bef\u4fe1\u606f */ void onUpgradeFail ( String msg ); }","title":"\u8bbe\u7f6e\u5347\u7ea7\u56de\u8c03"},{"location":"upgrade/#\u4e0a\u4f20\u5347\u7ea7\u56fa\u4ef6","text":"\u51c6\u5907 ROM \u5347\u7ea7\u6587\u4ef6 update.zip\uff08\u975e\u5fc5\u987b\uff09 \u6253\u5347\u7ea7\u5305 app.apk\uff08\u5fc5\u987b\uff09 \u51c6\u5907\u7248\u672c\u6587\u4ef6 version.json\uff0c\u5185\u5bb9\u4e3a\uff1a { \"apkVersion\": \"1.2.0\", // apk\u7248\u672c\u53f7 \"romVersion\": \"1565694425\", // \u7cfb\u7edf\u5347\u7ea7\u6587\u4ef6\u7248\u672c\uff0c\u5347\u7ea7\u538b\u7f29\u5305\u7684/META-INF/com/android/metadata `post-timestamp` } \u5c06\u4e0a\u9762\u4e09\u4e2a(\u6216\u4e24\u4e2a)\u6587\u4ef6\u538b\u7f29\u4e3a \u6807\u8bc6\u540d_OTA_\u7248\u672c\u53f7.bin \uff0c\u4f8b\uff1a test_acs_rk3399-all_OTA_1.0.2.bin \u5728\u56fa\u4ef6\u53ca\u7248\u672c\u7ba1\u7406\u540e\u53f0\u4e0a\u4f20 \u5728\u56fa\u4ef6\u5347\u7ea7\u7ba1\u7406\u540e\u53f0\u6dfb\u52a0\u5347\u7ea7","title":"\u4e0a\u4f20\u5347\u7ea7\u56fa\u4ef6"},{"location":"voice_assistant/","text":"\u8bed\u97f3\u52a9\u624b \u8be5\u529f\u80fd\u9700\u8981\u662f\u6ca1\u6709\u8bed\u97f3\u524d\u7aef\u5904\u7406\u80fd\u529b\u7684\u60c5\u51b5\u4e0b\u63a5\u5165\u7684\u529f\u80fd\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u8bed\u97f3\u524d\u7aef\u5904\u7406\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u8df3\u8fc7\u8be5\u7ae0\u8282\u76f4\u63a5\u67e5\u770b \u8bed\u97f3SDK \u3002\u5982\u679c\u9700\u8981\u5bf9\u63a5\u8be5\u80fd\u529b\uff0c\u9700\u8981\u534f\u8c03\u6d82\u9e26\u9879\u76ee\u7ecf\u7406\u7533\u8bf7\u914d\u7f6e\u3002 \u4ea7\u54c1\u914d\u7f6e \u5c06\u6d82\u9e26\u63d0\u4f9b\u7684\u8d44\u6e90\u6587\u4ef6\u548c\u914d\u7f6e\u6587\u4ef6\u653e\u7f6e\u5230\u8bbe\u5907\u5b58\u50a8\u7684\u540c\u4e00\u76ee\u5f55\u4e0b\u3002 \u914d\u7f6e\u793a\u4f8b config.json \u5f00\u542f \u901a\u8fc7 TuyaGatewaySdk \u5355\u4f8b\u5f00\u542f\u8bed\u97f3\u670d\u52a1, \u5f00\u542f\u6210\u529f\u540e\u53ef\u901a\u8fc7\u5173\u952e\u8bcd\u5524\u9192\uff0c\u5524\u9192\u540e\u53ef\u63a5\u6536\u8bed\u97f3\u547d\u4ee4\u3002 { \"PRODUCT_ID\" : \"\u4ea7\u54c1ID\" , \"USER_ID\" : \"\u7528\u6237ID\" , \"PRODUCT_KEY\" : \"Product Key\" , \"PRODUCT_SECRET\" : \"Product Secret\" , \"API_KEY\" : \"\u4ea7\u54c1\u6388\u6743\u79d8\u94a5\uff0c\u670d\u52a1\u7aef\u751f\u6210\" } \u521d\u59cb\u5316 \u521b\u5efaSpeechHelper\u5bf9\u8c61 \u63a5\u53e3\u8bf4\u660e SpeechHelper ( Context context , String configPath , String audioPath , final SpeechCallback callback , int commandTimeout , String deviceId ) \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e context \u4e0a\u4e0b\u6587 configPath \u8d44\u6e90\u53ca\u914d\u7f6e\u5b58\u653e\u8def\u5f84 audioPath \u97f3\u9891\u6587\u4ef6\u5b58\u653e\u8def\u5f84 callback \u8bed\u97f3\u52a9\u624b\u4e8b\u4ef6\u56de\u8c03 commandTimeout \u8bed\u97f3\u547d\u4ee4\u8d85\u65f6\u65f6\u95f4 deviceId \u8bbe\u5907id \u793a\u4f8b\u4ee3\u7801 helper = SpeechHelper ( this , \"/sdcard/tuya_speech_config/\" , \"/sdcard/tuya_speech_audio/\" , object : SpeechCallback { /** * \u542f\u52a8\u5b8c\u6210 */ fun onInitComplete () /** * \u53cd\u521d\u59cb\u5316\u5b8c\u6210 */ fun onDeInitComplete () /** * \u8bed\u97f3\u76d1\u542c\u4e2d */ fun onStartListening () /** * \u662f\u5426\u5f00\u542f\u5524\u9192\u540e\u76d1\u542c */ fun onWakeup (): Boolean /** * \u68c0\u6d4b\u5230\u7528\u6237\u5f00\u59cb\u8bf4\u8bdd */ fun onSpeechBeginning ( errCode : Int ) /** * \u68c0\u6d4b\u5230\u7528\u6237\u7ed3\u675f\u8bf4\u8bdd */ fun onSpeechEnd ( errCode : Int ) /** * \u83b7\u53d6\u6743\u9650\u5931\u8d25 */ fun onPermissionDenied () /** * \u8bed\u97f3\u6307\u4ee4\u56de\u590d\u7ed3\u679c (success: \u662f\u5426\u6210\u529f, isDialog: \u662f\u5426\u4e3a\u5bf9\u8bdd, audioPath: \u97f3\u9891\u6587\u4ef6\u5b58\u653e\u8def\u5f84) */ fun onResponse ( success : Boolean , isDialog : Boolean , audioPath : ArrayList < String >? ) /** * asr\u8bc6\u522b\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef */ fun onASRError ( errMsg : String ) /** * \u521d\u59cb\u5316\u9519\u8bef */ fun onInitError ( errMsg : String ) /** * \u53cd\u521d\u59cb\u5316\u9519\u8bef */ fun onDeInitError ( errMsg : String ) /** * \u63a5\u6536command */ fun onCommand ( command : String , data : String ) /** * \u9700\u8981\u6ce8\u518c\u547d\u4ee4\u65f6\uff0c\u8fd4\u56de\u547d\u4ee4\u5b57\u7b26\u4e32\u6570\u7ec4 */ fun getCommands (): Array < String > }, 8000 ) \u7ed1\u5b9a SpeechHelper \u4e0e\u8bed\u97f3\u901a\u9053SDK \u901a\u8fc7\u63a5\u53e3\u7ed1\u5b9a\uff0c\u6253\u901a\u8bed\u97f3\u4e0a\u4f20\u4e91\u7aef\u903b\u8f91\u3002 \u63a5\u53e3\u8bf4\u660e TuyaVoiceSdk . getInstance (). init ( SpeechHelper helper ) \u5f00\u542f \u5f00\u542f\u8bed\u97f3\u670d\u52a1, \u5f00\u542f\u6210\u529f\u540e\u53ef\u901a\u8fc7\u5173\u952e\u8bcd\u5524\u9192\uff0c\u5524\u9192\u540e\u53ef\u63a5\u6536\u8bed\u97f3\u547d\u4ee4\u3002 void start () \u5173\u95ed \u5173\u95ed\u8bed\u97f3\u670d\u52a1\uff0c \u8fdb\u5165\u4e0d\u53ef\u5524\u9192\u72b6\u6001\u3002 void stop ()","title":"\u8bed\u97f3\u52a9\u624b"},{"location":"voice_assistant/#\u8bed\u97f3\u52a9\u624b","text":"\u8be5\u529f\u80fd\u9700\u8981\u662f\u6ca1\u6709\u8bed\u97f3\u524d\u7aef\u5904\u7406\u80fd\u529b\u7684\u60c5\u51b5\u4e0b\u63a5\u5165\u7684\u529f\u80fd\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u8bed\u97f3\u524d\u7aef\u5904\u7406\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u8df3\u8fc7\u8be5\u7ae0\u8282\u76f4\u63a5\u67e5\u770b \u8bed\u97f3SDK \u3002\u5982\u679c\u9700\u8981\u5bf9\u63a5\u8be5\u80fd\u529b\uff0c\u9700\u8981\u534f\u8c03\u6d82\u9e26\u9879\u76ee\u7ecf\u7406\u7533\u8bf7\u914d\u7f6e\u3002","title":"\u8bed\u97f3\u52a9\u624b"},{"location":"voice_assistant/#\u4ea7\u54c1\u914d\u7f6e","text":"\u5c06\u6d82\u9e26\u63d0\u4f9b\u7684\u8d44\u6e90\u6587\u4ef6\u548c\u914d\u7f6e\u6587\u4ef6\u653e\u7f6e\u5230\u8bbe\u5907\u5b58\u50a8\u7684\u540c\u4e00\u76ee\u5f55\u4e0b\u3002 \u914d\u7f6e\u793a\u4f8b config.json","title":"\u4ea7\u54c1\u914d\u7f6e"},{"location":"voice_assistant/#\u5f00\u542f","text":"\u901a\u8fc7 TuyaGatewaySdk \u5355\u4f8b\u5f00\u542f\u8bed\u97f3\u670d\u52a1, \u5f00\u542f\u6210\u529f\u540e\u53ef\u901a\u8fc7\u5173\u952e\u8bcd\u5524\u9192\uff0c\u5524\u9192\u540e\u53ef\u63a5\u6536\u8bed\u97f3\u547d\u4ee4\u3002 { \"PRODUCT_ID\" : \"\u4ea7\u54c1ID\" , \"USER_ID\" : \"\u7528\u6237ID\" , \"PRODUCT_KEY\" : \"Product Key\" , \"PRODUCT_SECRET\" : \"Product Secret\" , \"API_KEY\" : \"\u4ea7\u54c1\u6388\u6743\u79d8\u94a5\uff0c\u670d\u52a1\u7aef\u751f\u6210\" }","title":"\u5f00\u542f"},{"location":"voice_assistant/#\u521d\u59cb\u5316","text":"\u521b\u5efaSpeechHelper\u5bf9\u8c61 \u63a5\u53e3\u8bf4\u660e SpeechHelper ( Context context , String configPath , String audioPath , final SpeechCallback callback , int commandTimeout , String deviceId ) \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e context \u4e0a\u4e0b\u6587 configPath \u8d44\u6e90\u53ca\u914d\u7f6e\u5b58\u653e\u8def\u5f84 audioPath \u97f3\u9891\u6587\u4ef6\u5b58\u653e\u8def\u5f84 callback \u8bed\u97f3\u52a9\u624b\u4e8b\u4ef6\u56de\u8c03 commandTimeout \u8bed\u97f3\u547d\u4ee4\u8d85\u65f6\u65f6\u95f4 deviceId \u8bbe\u5907id \u793a\u4f8b\u4ee3\u7801 helper = SpeechHelper ( this , \"/sdcard/tuya_speech_config/\" , \"/sdcard/tuya_speech_audio/\" , object : SpeechCallback { /** * \u542f\u52a8\u5b8c\u6210 */ fun onInitComplete () /** * \u53cd\u521d\u59cb\u5316\u5b8c\u6210 */ fun onDeInitComplete () /** * \u8bed\u97f3\u76d1\u542c\u4e2d */ fun onStartListening () /** * \u662f\u5426\u5f00\u542f\u5524\u9192\u540e\u76d1\u542c */ fun onWakeup (): Boolean /** * \u68c0\u6d4b\u5230\u7528\u6237\u5f00\u59cb\u8bf4\u8bdd */ fun onSpeechBeginning ( errCode : Int ) /** * \u68c0\u6d4b\u5230\u7528\u6237\u7ed3\u675f\u8bf4\u8bdd */ fun onSpeechEnd ( errCode : Int ) /** * \u83b7\u53d6\u6743\u9650\u5931\u8d25 */ fun onPermissionDenied () /** * \u8bed\u97f3\u6307\u4ee4\u56de\u590d\u7ed3\u679c (success: \u662f\u5426\u6210\u529f, isDialog: \u662f\u5426\u4e3a\u5bf9\u8bdd, audioPath: \u97f3\u9891\u6587\u4ef6\u5b58\u653e\u8def\u5f84) */ fun onResponse ( success : Boolean , isDialog : Boolean , audioPath : ArrayList < String >? ) /** * asr\u8bc6\u522b\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef */ fun onASRError ( errMsg : String ) /** * \u521d\u59cb\u5316\u9519\u8bef */ fun onInitError ( errMsg : String ) /** * \u53cd\u521d\u59cb\u5316\u9519\u8bef */ fun onDeInitError ( errMsg : String ) /** * \u63a5\u6536command */ fun onCommand ( command : String , data : String ) /** * \u9700\u8981\u6ce8\u518c\u547d\u4ee4\u65f6\uff0c\u8fd4\u56de\u547d\u4ee4\u5b57\u7b26\u4e32\u6570\u7ec4 */ fun getCommands (): Array < String > }, 8000 )","title":"\u521d\u59cb\u5316"},{"location":"voice_assistant/#\u7ed1\u5b9a","text":"SpeechHelper \u4e0e\u8bed\u97f3\u901a\u9053SDK \u901a\u8fc7\u63a5\u53e3\u7ed1\u5b9a\uff0c\u6253\u901a\u8bed\u97f3\u4e0a\u4f20\u4e91\u7aef\u903b\u8f91\u3002 \u63a5\u53e3\u8bf4\u660e TuyaVoiceSdk . getInstance (). init ( SpeechHelper helper )","title":"\u7ed1\u5b9a"},{"location":"voice_assistant/#\u5f00\u542f_1","text":"\u5f00\u542f\u8bed\u97f3\u670d\u52a1, \u5f00\u542f\u6210\u529f\u540e\u53ef\u901a\u8fc7\u5173\u952e\u8bcd\u5524\u9192\uff0c\u5524\u9192\u540e\u53ef\u63a5\u6536\u8bed\u97f3\u547d\u4ee4\u3002 void start ()","title":"\u5f00\u542f"},{"location":"voice_assistant/#\u5173\u95ed","text":"\u5173\u95ed\u8bed\u97f3\u670d\u52a1\uff0c \u8fdb\u5165\u4e0d\u53ef\u5524\u9192\u72b6\u6001\u3002 void stop ()","title":"\u5173\u95ed"},{"location":"voice_sdk/","text":"\u8bed\u97f3\u63a7\u5236 \u6d82\u9e26\u8bed\u97f3 SDK \u63d0\u4f9b\u4e86 TTS \u64ad\u62a5\u3001ASR \u6587\u672c\u3001IOT \u6280\u80fd\uff08\u8bbe\u5907\u63a7\u5236\u3001\u8bbe\u5907\u63a5\u5165\uff09\u3001\u97f3\u4e50\uff08\u97f3\u4e50\u3001\u5929\u6c14\u3001\u76f8\u58f0\u3001\u7535\u53f0\u7b49\uff09\u3001\u63d0\u9192\u3001\u8bed\u97f3\u5a92\u4f53\u63a7\u5236\uff08\u9ea6\u514b\u98ce\u5f00\u542f/\u5173\u95ed\u3001\u64ad\u653e/\u6682\u505c/\u4e0a\u4e00\u9996/\u4e0b\u4e00\u9996\u3001\u84dd\u7259\u5f00\u542f/\u5173\u95ed\u3001\u95f9\u949f\u3001\u97f3\u91cf\u8bbe\u7f6e\uff09\u3001\u6269\u5c55 ATOP \u63a5\u53e3\uff08\u81ea\u5b9a\u4e49\u4e91\u7aef\u4ea4\u4e92\u4e1a\u52a1\uff09\u7b49\u80fd\u529b\u3002 \u8be5 SDK \u9002\u5408\u5df2\u7ecf\u5177\u5907\u8bed\u97f3\u524d\u7aef\u5904\u7406\u80fd\u529b\u7684\u4f7f\u7528\u8005\u3002 \u83b7\u53d6\u8bed\u97f3 SDK \u5b9e\u4f8b \u793a\u4f8b\u4ee3\u7801 Java TuyaVoiceSdk mVoice = TuyaVoiceSdk . getInstance (); Kotlin var mVoice = TuyaVoiceSdk . getInstance () \u8bed\u97f3 SDK \u521d\u59cb\u5316 \u63a5\u53e3\u8bf4\u660e init ( ISpeechHelper callback ) \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e ISpeechHelper \u8bed\u97f3\u6570\u636e\u5904\u7406\u534f\u8bae \u793a\u4f8b\u4ee3\u7801 Java mVoice . init ( new ISpeechHelper () { @Override public boolean onSetVolume ( int vol ) { return false ; } @Override public boolean onControlCommand ( int ctl ) { return false ; } @Override public void onSyncAudio () { } @Override public void onSyncDialogText ( String speaker , int id , String text ) { } @Override public void onAlarmClock ( String alarm ) { } @Override public void onTaskAlert ( int type , String msg ) { } @Override public boolean onSetNickName ( int mode , String nickname , String pinyin ) { return false ; } @Override public void onThingConfig ( int mode , String token , int timeout ) { } @Override public void onUploadMediaStatus ( int status ) { } @Override public void onCloudMedia ( MediaAttribute [] mediaAttributes ) { } @Override public void onCloudCustom ( String type , String msg ) { } }); Kotlin mVoice . init ( object : ISpeechHelper { override fun onSetVolume ( vol : Int ): Boolean { return false } override fun onControlCommand ( ctl : Int ): Boolean { return false } override fun onSyncAudio () {} override fun onSyncDialogText ( speaker : String , id : Int , text : String ) {} override fun onAlarmClock ( alarm : String ) {} override fun onTaskAlert ( type : Int , msg : String ) {} override fun onSetNickName ( mode : Int , nickname : String , pinyin : String ): Boolean { return false } override fun onThingConfig ( mode : Int , token : String , timeout : Int ) {} override fun onUploadMediaStatus ( status : Int ) {} override fun onCloudMedia ( mediaAttributes : Array < MediaAttribute > ) {} override fun onCloudCustom ( type : String , msg : String ) {} }) \u8bed\u97f3\u6570\u636e\u4e0a\u62a5 \u63a5\u53e3\u8bf4\u660e \u8bbe\u5907\u7aef\u4e0a\u62a5\u91c7\u96c6\u5230\u7684\u8bed\u97f3\u6570\u636e\uff0c\u4f9d\u6b21\u8c03\u7528\u5f00\u542f\u3001\u4e0a\u4f20\u3001\u7ed3\u675f\u63a5\u53e3\u3002 \u4e91\u7aef\u5728\u8bc6\u522b\u5230\u610f\u56fe\u540e\uff0c\u4f1a\u89e6\u53d1 \u8bed\u97f3\u6570\u636e\u5904\u7406\u534f\u8bae \u56de\u8c03\u6267\u884c\u5bf9\u5e94\u7684\u52a8\u4f5c\u3002 \u652f\u6301\u7684\u8bed\u97f3 PCM \u6570\u636e\u683c\u5f0f\uff1a \u53c2\u6570 \u503c \u901a\u9053\u6570 \u5355\u901a\u9053 \u91c7\u6837\u7387 16000 \u91c7\u6837\u7cbe\u5ea6 16bit \u793a\u4f8b\u4ee3\u7801 Java private static final int SAMPLING_RATE_IN_HZ = 16000 ; private static final int CHANNEL_CONFIG = AudioFormat . CHANNEL_IN_MONO ; private static final int AUDIO_FORMAT = AudioFormat . ENCODING_PCM_16BIT ; private static final int BUFFER_SIZE_FACTOR = 4 ; private static final int BUFFER_SIZE = AudioRecord . getMinBufferSize ( SAMPLING_RATE_IN_HZ , CHANNEL_CONFIG , AUDIO_FORMAT ) * BUFFER_SIZE_FACTOR ; private final AtomicBoolean recordingInProgress = new AtomicBoolean ( false ); private AudioRecord recorder = null ; private Thread recordingThread = null ; private class RecordingRunnable implements Runnable { @Override public void run () { final byte [] buffer = new byte [ BUFFER_SIZE ] ; while ( recordingInProgress . get ()) { int result = recorder . read ( buffer , 0 , BUFFER_SIZE ); if ( result < 0 ) { throw new RuntimeException ( \"Reading of audio buffer failed: \" + getBufferReadFailureReason ( result )); } mVoice . voiceUploadMediaUpload ( buffer ); } mVoice . voiceUploadMediaStop (); } private String getBufferReadFailureReason ( int errorCode ) { switch ( errorCode ) { case AudioRecord . ERROR_INVALID_OPERATION : return \"ERROR_INVALID_OPERATION\" ; case AudioRecord . ERROR_BAD_VALUE : return \"ERROR_BAD_VALUE\" ; case AudioRecord . ERROR_DEAD_OBJECT : return \"ERROR_DEAD_OBJECT\" ; case AudioRecord . ERROR : return \"ERROR\" ; default : return \"Unknown (\" + errorCode + \")\" ; } } } private void startRecording () { recorder = new AudioRecord ( MediaRecorder . AudioSource . VOICE_RECOGNITION , SAMPLING_RATE_IN_HZ , CHANNEL_CONFIG , AUDIO_FORMAT , BUFFER_SIZE ); mVoice . voiceUploadMediaStart (); recorder . startRecording (); recordingInProgress . set ( true ); recordingThread = new Thread ( new RecordingRunnable (), \"Recording Thread\" ); recordingThread . start (); } private void stopRecording () { if ( null == recorder ) { return ; } recordingInProgress . set ( false ); recorder . stop (); recorder . release (); recorder = null ; recordingThread = null ; } Kotlin private val SAMPLING_RATE_IN_HZ = 16000 private val CHANNEL_CONFIG = AudioFormat . CHANNEL_IN_MONO private val AUDIO_FORMAT = AudioFormat . ENCODING_PCM_16BIT private val BUFFER_SIZE_FACTOR = 4 private val BUFFER_SIZE = AudioRecord . getMinBufferSize ( SAMPLING_RATE_IN_HZ , CHANNEL_CONFIG , AUDIO_FORMAT ) * BUFFER_SIZE_FACTOR private val recordingInProgress = AtomicBoolean ( false ) private var recorder : AudioRecord? = null private var recordingThread : Thread? = null private class RecordingRunnable : Runnable { override fun run () { val buffer = ByteArray ( BUFFER_SIZE ) while ( recordingInProgress . get ()) { val result : Int = recorder . read ( buffer , 0 , BUFFER_SIZE ) if ( result < 0 ) { throw RuntimeException ( \"Reading of audio buffer failed: \" + getBufferReadFailureReason ( result )) } mVoice . voiceUploadMediaUpload ( buffer ) } mVoice . voiceUploadMediaStop () } private fun getBufferReadFailureReason ( errorCode : Int ): String { return when ( errorCode ) { AudioRecord . ERROR_INVALID_OPERATION -> \"ERROR_INVALID_OPERATION\" AudioRecord . ERROR_BAD_VALUE -> \"ERROR_BAD_VALUE\" AudioRecord . ERROR_DEAD_OBJECT -> \"ERROR_DEAD_OBJECT\" AudioRecord . ERROR -> \"ERROR\" else -> \"Unknown ( $ errorCode )\" } } } private fun startRecording () { recorder = AudioRecord ( MediaRecorder . AudioSource . VOICE_RECOGNITION , SAMPLING_RATE_IN_HZ , CHANNEL_CONFIG , AUDIO_FORMAT , BUFFER_SIZE ) mVoice . voiceUploadMediaStart () recorder !! . startRecording () recordingInProgress . set ( true ) recordingThread = Thread ( RecordingRunnable (), \"Recording Thread\" ) recordingThread !! . start () } private fun stopRecording () { if ( null == recorder ) { return } recordingInProgress . set ( false ) recorder !! . stop () recorder !! . release () recorder = null recordingThread = null } \u8bed\u97f3\u6570\u636e\u5904\u7406\u534f\u8bae \u97f3\u91cf\u8bbe\u7f6e App \u9700\u8981\u6839\u636e\u4e0b\u53d1\u7684\u503c\u53bb\u8bbe\u7f6e\u7cfb\u7edf\u7684\u97f3\u91cf\u3002 \u63a5\u53e3\u8bf4\u660e boolean onSetVolume ( int vol ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 vol \u97f3\u91cf\u503c\uff0c\u53d6\u503c 0 ~ 100 \u8fd4\u56de\u503c \u5c06\u8bbe\u7f6e\u7684\u7ed3\u679c\u8fd4\u56de\u3002 \u793a\u4f8b\u4ee3\u7801 Java @Override public boolean onSetVolume ( int vol ) { Log . d ( TAG , \"onSetVolume:\" + vol ); int max = mAudioManager . getStreamMaxVolume ( AudioManager . STREAM_MUSIC ); try { mAudioManager . setStreamVolume ( AudioManager . STREAM_MUSIC , ( vol * max ) / 100 , AudioManager . FLAG_SHOW_UI ); } catch ( SecurityException e ) { e . printStackTrace (); } return true ; } Kotlin override fun onSetVolume ( vol : Int ): Boolean { Log . i ( TAG , \"onSetVolume: $ vol \" ) val max = mAudioManager !! . getStreamMaxVolume ( AudioManager . STREAM_MUSIC ) try { mAudioManager !! . setStreamVolume ( AudioManager . STREAM_MUSIC , vol * max / 100 , AudioManager . FLAG_SHOW_UI ) } catch ( e : SecurityException ) { e . printStackTrace () } return true } \u5a92\u4f53\u63a7\u5236 \u7f51\u5173\u4e0b\u53d1\u7684\u5a92\u4f53\u63a7\u5236\u6307\u4ee4\uff0cApp \u9700\u8981\u6839\u636e\u4e0b\u53d1\u7684\u6307\u4ee4\u6267\u884c\u5bf9\u4e8e\u7684\u64cd\u4f5c\u3002 \u63a5\u53e3\u8bf4\u660e boolean onControlCommand ( @ControlCommandType int ctl ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 ctl \u5a92\u4f53\u63a7\u5236\u6307\u4ee4\uff0c\u503c\u4e3a CTRL_CMD_XXX \u4e4b\u4e00\uff1a CTRL_CMD_MIC_OPEN CTRL_CMD_MIC_CLOSE CTRL_CMD_PLAY CTRL_CMD_PAUSE CTRL_CMD_BT_PLAY_OPEN CTRL_CMD_BT_PLAY_CLOSE CTRL_CMD_PLAY_NEXT CTRL_CMD_PLAY_PREV \u8fd4\u56de\u503c \u5c06\u8bbe\u7f6e\u7684\u7ed3\u679c\u8fd4\u56de\u3002 \u97f3\u9891\u64ad\u653e\u8fdb\u5ea6\u540c\u6b65 \u4e91\u7aef\u4e0b\u53d1\u540c\u6b65\u97f3\u9891\u64ad\u653e\u8fdb\u5ea6\u7684\u901a\u77e5\u3002 \u63a5\u53e3\u8bf4\u660e void onSyncAudio (); TTS \u6587\u672c\u540c\u6b65 \u8bed\u97f3\u5bf9\u8bdd\u7684\u6587\u672c\u540c\u6b65\u56de\u8c03\uff0cAPP \u6216\u8bbe\u5907\u7aef\u63a5\u6536\u8be5\u6d88\u606f\u540e\u53ef\u4ee5\u5b9e\u65f6\u5728\u754c\u9762\u4e0a\u5c55\u793a\u3002 \u63a5\u53e3\u8bf4\u660e void onSyncDialogText ( String speaker , int id , String text ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 speaker \u8bf4\u8bdd\u5bf9\u8c61\uff0c \u503c\u4e3a \"human\" \u6216 \"robot\" id \u8be5\u8bb0\u5f55\u7684id\u53f7 text \u8bed\u97f3\u5bf9\u5e94\u7684\u6587\u672c \u672c\u5730\u95f9\u949f \u672c\u5730\u95f9\u949f\u89e6\u53d1\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e void onAlarmClock ( String alarm ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 alarm \u672c\u5730\u95f9\u949f\u89e6\u53d1\u7684\u4e8b\u4ef6\uff0cJSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 \u4efb\u52a1\u63d0\u9192 \u4e91\u7aef\u4e0b\u53d1\u7684\u4efb\u52a1\u63d0\u9192\u901a\u77e5\u3002 \u63a5\u53e3\u8bf4\u660e void onTaskAlert ( @TaskAlertType int type , String msg ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u4efb\u52a1\u7c7b\u578b\uff0c\u503c\u4e3a TASK_TYPE_XXX \u4e4b\u4e00\uff1a TASK_TYPE_NORMAL TASK_TYPE_CLOCK TASK_TYPE_ALERT TASK_TYPE_RING_TONE TASK_TYPE_CALL TASK_TYPE_CALL_TTS TASK_TYPE_INVALD msg \u4e0b\u53d1\u7684\u63d0\u9192\u4e8b\u4ef6\uff0cJSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 \u6635\u79f0\u8bbe\u7f6e App \u9700\u6839\u636e\u72b6\u6001\u8c03\u7528\u524d\u7aef\u8bed\u97f3\u63a5\u53e3\u8bbe\u7f6e\u6216\u5220\u9664\u6635\u79f0\u3002 \u63a5\u53e3\u8bf4\u660e boolean onSetNickName ( @SetNickNameType int mode , String nickname , String pinyin ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 mode \u6635\u79f0\u8bbe\u72b6\u6001\uff0c\u503c\u4e3a NICKNAME_XXX \u4e4b\u4e00\uff1a NICKNAME_SET NICNAME_DEL NICKNAME_INVALD nickname \u6635\u79f0\u4e2d\u6587\u540d pinyin \u6635\u79f0\u62fc\u97f3 \u8fd4\u56de\u503c \u5c06\u8bbe\u7f6e\u7684\u7ed3\u679c\u8fd4\u56de\u3002 \u5b50\u8bbe\u5907\u8bed\u97f3\u914d\u7f51 \u4e91\u7aef\u8bc6\u522b\u5230\u914d\u7f51\u610f\u56fe\u540e\uff0c\u89e6\u53d1\u5f00\u542f/\u5173\u95ed\u5b50\u8bbe\u5907\u914d\u7f51\u8bf7\u6c42\u56de\u8c03\u3002 \u63a5\u53e3\u8bf4\u660e void onThingConfig ( @ThingConfigType int mode , String token , int timeout ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 mode \u914d\u7f51\u72b6\u6001\uff0c\u503c\u4e3a THING_CONFIG_XXX \u4e4b\u4e00\uff1a THING_CONFIG_START THING_CONFIG_STOP THING_CONFIG_INVALD token \u7ed9wifi\u8bbe\u5907\u914d\u7f51\u65f6\u9700\u8981token timeout \u914d\u7f51\u8d85\u65f6\u65f6\u95f4 \u8bed\u97f3\u4e0a\u4f20\u72b6\u6001 \u8bed\u97f3\u4e0a\u4f20\u4e91\u7aef\uff0c\u51fa\u73b0\u5f02\u5e38\u5c06\u89e6\u53d1\u8be5\u56de\u8c03\u3002 \u63a5\u53e3\u8bf4\u660e void onUploadMediaStatus ( @UploadMediaStatusType int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 status \u8bed\u97f3\u4e0a\u4f20\u72b6\u6001\uff0c \u503c\u4e3a UPLOAD_XXX \u4e4b\u4e00: UPLOAD_NONE UPLOAD_NETWORK_ERR \u4e91\u7aef\u5a92\u4f53\u6570\u636e\u4e0b\u53d1 \u6536\u5230\u4e91\u7aef\u5a92\u4f53\u6570\u636e\u65f6\u89e6\u53d1\u8be5\u56de\u8c03\u3002 \u63a5\u53e3\u8bf4\u660e void onCloudMedia ( MediaAttribute [] mediaAttributes ); MediaAttribute \u6210\u5458 \u8bf4\u660e mDecodeType \u97f3\u9891\u7f16\u7801\u7c7b\u578b\uff0c\u503c\u4e3a DECODER_TYPE_XXX \u4e4b\u4e00: DECODER_TYPE_WAV DECODER_TYPE_MP3 DECODER_TYPE_SPEEX DECODER_TYPE_AAC DECODER_TYPE_AMR DECODER_TYPE_M4A DECODER_TYPE_PCM DECODER_TYPE_INVALD mLength \u6570\u636e\u5927\u5c0f\u957f\u5ea6 mDuration \u97f3\u9891\u7684\u65f6\u957f mMediaType \u5a92\u4f53\u7c7b\u578b\uff0c\u503c\u4e3a MEDIA_TYPE_XXX \u4e4b\u4e00: MEDIA_TYPE_MEDIA MEDIA_TYPE_TTS MEDIA_TYPE_INVALD mUrl \u97f3\u9891\u6587\u4ef6\u7684 URL mFollowAction \u662f\u5426\u7ee7\u7eed\u5bf9\u8bdd\uff0c\u503c\u4e3aFOLLOW_ACTION_KEEP_SESSION\u6216FOLLOW_ACTION_NO_KEEP_SESSION mSessionId \u5bf9\u8bdd\u7684 ID \u793a\u4f8b\u4ee3\u7801 Java @Override public void onCloudMedia ( MediaAttribute [] mediaAttributes ) { requestSpeakerMedia ( mediaAttributes ); } private void requestSpeakerMedia ( final MediaAttribute [] mediaAttributes ) { CountDownLatch latch = new CountDownLatch ( mediaAttributes . length ); ArrayList < String > list = new ArrayList <> (); boolean isDialog = false ; for ( MediaAttribute mediaAttribute : mediaAttributes ) { if ( ! TextUtils . isEmpty ( mediaAttribute . mUrl )) { String name = String . format ( Locale . getDefault (), \"/sdcard/tuya_speech_files/%s_%d_speaker_tmp.mp3\" , mediaAttribute . mMediaType == MediaAttribute . MEDIA_TYPE_TTS ? \"tts\" : \"audio\" , System . currentTimeMillis ()); if ( mediaAttribute . mMediaType == MediaAttribute . MEDIA_TYPE_TTS ) { list . add ( 0 , name ); if ( mediaAttribute . mFollowAction == 1 ) { isDialog = true ; } } else { list . add ( name ); } requestSpeakerMedia ( mediaAttribute . mUrl , mediaAttribute . mRequestBody , name , latch ); } } try { latch . await (); } catch ( InterruptedException e ) { e . printStackTrace (); } if ( mSpeechHandler != null ) { mSpeechHandler . removeMessages ( SpeechCallback . TIMEOUT_MSG_WHAT ); //\u8fc7\u6ee4\u7a7a\u6587\u4ef6 if ( list . size () > 0 ) { for ( int i = list . size () - 1 ; i >= 0 ; i -- ) { File file = new File ( list . get ( i )); if ( ! file . exists ()) { list . remove ( i ); } } } if ( list . size () > 0 ) { Message msg = Message . obtain (); msg . obj = list ; if ( isDialog ) { msg . what = SpeechCallback . DIALOG_MSG_WHAT ; } else { msg . what = SpeechCallback . SUCCESS_MSG_WHAT ; } mSpeechHandler . sendMessage ( msg ); } } } private void requestSpeakerMedia ( final String url , String requestStr , final String name , final CountDownLatch latch ) { Request request ; if ( TextUtils . isEmpty ( requestStr )) { request = new Request . Builder () . url ( url ) . get () . build (); } else { MediaType JSON = MediaType . parse ( \"application/json; charset=utf-8\" ); RequestBody requestBody = RequestBody . create ( JSON , requestStr ); request = new Request . Builder () . url ( url ) . post ( requestBody ) . build (); } mHttpClient . newCall ( request ). enqueue ( new Callback () { @Override public void onFailure ( Call call , IOException e ) { latch . countDown (); Log . w ( TAG , \"requestSpeakerMedia onFailure\" ); } @Override public void onResponse ( Call call , Response response ) { Log . w ( TAG , \"requestSpeakerMedia onResponse\" ); if ( response . body () == null ) { latch . countDown (); return ; } InputStream inputStream = response . body (). byteStream (); FileOutputStream fileOutputStream ; try { File file = new File ( name ); if ( file . exists ()) { file . delete (); } fileOutputStream = new FileOutputStream ( file ); byte [] buffer = new byte [ 1024 ] ; int length = 0 ; while (( length = inputStream . read ( buffer )) != - 1 ) { fileOutputStream . write ( buffer , 0 , length ); } fileOutputStream . flush (); if ( file . length () <= 0 ) { file . delete (); Log . w ( TAG , name + \" empty\" ); } else { Log . w ( TAG , name + \" saved\" ); } } catch ( Exception e ) { Log . e ( TAG , \"\" + e . getMessage ()); e . printStackTrace (); } finally { latch . countDown (); } } }); } Kotlin OEM \u5b9a\u5236\u6570\u636e\u900f\u4f20 \u900f\u4f20OEM\u5b9a\u5236\u7684 MQTT 501 \u63a5\u53e3\uff0c\u5177\u4f53\u534f\u8bae\u5185\u5bb9\u7531\u4e91\u7aef\u4e0eOEM\u5ba2\u6237\u5236\u5b9a\uff0c\u5e76\u63d0\u4f9b\u8bf4\u660e\u3002 \u63a5\u53e3\u8bf4\u660e void onCloudCustom ( String type , String msg ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u63a5\u53e3\u7c7b\u578b msg Json\u683c\u5f0f\u6d88\u606f \u97f3\u4e50/\u97f3\u9891\u63a7\u5236 \u97f3\u9891\u5207\u6362 \u64ad\u653e\u4e0a\u4e00\u9996 \u63a5\u53e3\u8bf4\u660e int playPrev (); \u64ad\u653e\u4e0b\u4e00\u9996 \u63a5\u53e3\u8bf4\u660e int playNext (); \u83b7\u53d6\u64ad\u653e\u6a21\u5f0f \u63a5\u53e3\u8bf4\u660e int getPlayerMode (); \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 int(PlayerMode) \u4e91\u7aef\u64ad\u653e\u5668\u64ad\u653e\u6a21\u5f0f\uff0c\u503c\u4e3aMODE_XXX\u4e4b\u4e00\uff1a MODE_NORMAL:\u987a\u5e8f\u64ad\u653e MODE_SHUFFLE:\u968f\u673a\u64ad\u653e MODE_REPEAT_ONE:\u5355\u66f2\u5faa\u73af\u64ad\u653e MODE_REPEAT_ALL:\u5217\u8868\u5faa\u73af\u64ad\u653e \u8bbe\u7f6e\u64ad\u653e\u6a21\u5f0f \u63a5\u53e3\u8bf4\u660e boolean setPlayerMode ( @PlayerMode int mode ); \u83b7\u53d6\u5f53\u524d\u64ad\u653e\u7684\u6b4c\u66f2\u4fe1\u606f \u63a5\u53e3\u8bf4\u660e AudioBean getCurrentAudio () \uff1b \u83b7\u53d6\u5f53\u524d\u7684\u64ad\u653e\u5217\u8868 \u63a5\u53e3\u8bf4\u660e List < AudioBean > getPlayList ( int start , int end ) \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de AudioBean \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u542b\u4e49 start \u5217\u8868\u8d77\u59cb\u4e0b\u6807 end \u5217\u8868\u7ed3\u675f\u4e0b\u6807 \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de AudioBean \u7684\u5217\u8868 AudioBean \u6210\u5458 \u8bf4\u660e indexId \u5728\u64ad\u653e\u5217\u8868\u4e2d\u7684\u4e0b\u6807 audioId \u97f3\u9891 ID albumId \u4e13\u8f91 ID albumName \u4e13\u8f91\u540d\u5b57 audioName \u97f3\u9891\u540d\u5b57 artist \u827a\u672f\u5bb6 imgUrl \u5c01\u9762\u56fe\u7247\u7684 URL source \u97f3\u9891\u63d0\u4f9b\u5546 ID audioUrl \u97f3\u9891\u6587\u4ef6\u7684 URL duration \u97f3\u9891\u7684\u65f6\u957f","title":"\u8bed\u97f3\u63a7\u5236"},{"location":"voice_sdk/#\u8bed\u97f3\u63a7\u5236","text":"\u6d82\u9e26\u8bed\u97f3 SDK \u63d0\u4f9b\u4e86 TTS \u64ad\u62a5\u3001ASR \u6587\u672c\u3001IOT \u6280\u80fd\uff08\u8bbe\u5907\u63a7\u5236\u3001\u8bbe\u5907\u63a5\u5165\uff09\u3001\u97f3\u4e50\uff08\u97f3\u4e50\u3001\u5929\u6c14\u3001\u76f8\u58f0\u3001\u7535\u53f0\u7b49\uff09\u3001\u63d0\u9192\u3001\u8bed\u97f3\u5a92\u4f53\u63a7\u5236\uff08\u9ea6\u514b\u98ce\u5f00\u542f/\u5173\u95ed\u3001\u64ad\u653e/\u6682\u505c/\u4e0a\u4e00\u9996/\u4e0b\u4e00\u9996\u3001\u84dd\u7259\u5f00\u542f/\u5173\u95ed\u3001\u95f9\u949f\u3001\u97f3\u91cf\u8bbe\u7f6e\uff09\u3001\u6269\u5c55 ATOP \u63a5\u53e3\uff08\u81ea\u5b9a\u4e49\u4e91\u7aef\u4ea4\u4e92\u4e1a\u52a1\uff09\u7b49\u80fd\u529b\u3002 \u8be5 SDK \u9002\u5408\u5df2\u7ecf\u5177\u5907\u8bed\u97f3\u524d\u7aef\u5904\u7406\u80fd\u529b\u7684\u4f7f\u7528\u8005\u3002","title":"\u8bed\u97f3\u63a7\u5236"},{"location":"voice_sdk/#\u83b7\u53d6\u8bed\u97f3-sdk-\u5b9e\u4f8b","text":"\u793a\u4f8b\u4ee3\u7801 Java TuyaVoiceSdk mVoice = TuyaVoiceSdk . getInstance (); Kotlin var mVoice = TuyaVoiceSdk . getInstance ()","title":"\u83b7\u53d6\u8bed\u97f3 SDK \u5b9e\u4f8b"},{"location":"voice_sdk/#\u8bed\u97f3-sdk-\u521d\u59cb\u5316","text":"\u63a5\u53e3\u8bf4\u660e init ( ISpeechHelper callback ) \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e ISpeechHelper \u8bed\u97f3\u6570\u636e\u5904\u7406\u534f\u8bae \u793a\u4f8b\u4ee3\u7801 Java mVoice . init ( new ISpeechHelper () { @Override public boolean onSetVolume ( int vol ) { return false ; } @Override public boolean onControlCommand ( int ctl ) { return false ; } @Override public void onSyncAudio () { } @Override public void onSyncDialogText ( String speaker , int id , String text ) { } @Override public void onAlarmClock ( String alarm ) { } @Override public void onTaskAlert ( int type , String msg ) { } @Override public boolean onSetNickName ( int mode , String nickname , String pinyin ) { return false ; } @Override public void onThingConfig ( int mode , String token , int timeout ) { } @Override public void onUploadMediaStatus ( int status ) { } @Override public void onCloudMedia ( MediaAttribute [] mediaAttributes ) { } @Override public void onCloudCustom ( String type , String msg ) { } }); Kotlin mVoice . init ( object : ISpeechHelper { override fun onSetVolume ( vol : Int ): Boolean { return false } override fun onControlCommand ( ctl : Int ): Boolean { return false } override fun onSyncAudio () {} override fun onSyncDialogText ( speaker : String , id : Int , text : String ) {} override fun onAlarmClock ( alarm : String ) {} override fun onTaskAlert ( type : Int , msg : String ) {} override fun onSetNickName ( mode : Int , nickname : String , pinyin : String ): Boolean { return false } override fun onThingConfig ( mode : Int , token : String , timeout : Int ) {} override fun onUploadMediaStatus ( status : Int ) {} override fun onCloudMedia ( mediaAttributes : Array < MediaAttribute > ) {} override fun onCloudCustom ( type : String , msg : String ) {} })","title":"\u8bed\u97f3 SDK \u521d\u59cb\u5316"},{"location":"voice_sdk/#\u8bed\u97f3\u6570\u636e\u4e0a\u62a5","text":"\u63a5\u53e3\u8bf4\u660e \u8bbe\u5907\u7aef\u4e0a\u62a5\u91c7\u96c6\u5230\u7684\u8bed\u97f3\u6570\u636e\uff0c\u4f9d\u6b21\u8c03\u7528\u5f00\u542f\u3001\u4e0a\u4f20\u3001\u7ed3\u675f\u63a5\u53e3\u3002 \u4e91\u7aef\u5728\u8bc6\u522b\u5230\u610f\u56fe\u540e\uff0c\u4f1a\u89e6\u53d1 \u8bed\u97f3\u6570\u636e\u5904\u7406\u534f\u8bae \u56de\u8c03\u6267\u884c\u5bf9\u5e94\u7684\u52a8\u4f5c\u3002 \u652f\u6301\u7684\u8bed\u97f3 PCM \u6570\u636e\u683c\u5f0f\uff1a \u53c2\u6570 \u503c \u901a\u9053\u6570 \u5355\u901a\u9053 \u91c7\u6837\u7387 16000 \u91c7\u6837\u7cbe\u5ea6 16bit \u793a\u4f8b\u4ee3\u7801 Java private static final int SAMPLING_RATE_IN_HZ = 16000 ; private static final int CHANNEL_CONFIG = AudioFormat . CHANNEL_IN_MONO ; private static final int AUDIO_FORMAT = AudioFormat . ENCODING_PCM_16BIT ; private static final int BUFFER_SIZE_FACTOR = 4 ; private static final int BUFFER_SIZE = AudioRecord . getMinBufferSize ( SAMPLING_RATE_IN_HZ , CHANNEL_CONFIG , AUDIO_FORMAT ) * BUFFER_SIZE_FACTOR ; private final AtomicBoolean recordingInProgress = new AtomicBoolean ( false ); private AudioRecord recorder = null ; private Thread recordingThread = null ; private class RecordingRunnable implements Runnable { @Override public void run () { final byte [] buffer = new byte [ BUFFER_SIZE ] ; while ( recordingInProgress . get ()) { int result = recorder . read ( buffer , 0 , BUFFER_SIZE ); if ( result < 0 ) { throw new RuntimeException ( \"Reading of audio buffer failed: \" + getBufferReadFailureReason ( result )); } mVoice . voiceUploadMediaUpload ( buffer ); } mVoice . voiceUploadMediaStop (); } private String getBufferReadFailureReason ( int errorCode ) { switch ( errorCode ) { case AudioRecord . ERROR_INVALID_OPERATION : return \"ERROR_INVALID_OPERATION\" ; case AudioRecord . ERROR_BAD_VALUE : return \"ERROR_BAD_VALUE\" ; case AudioRecord . ERROR_DEAD_OBJECT : return \"ERROR_DEAD_OBJECT\" ; case AudioRecord . ERROR : return \"ERROR\" ; default : return \"Unknown (\" + errorCode + \")\" ; } } } private void startRecording () { recorder = new AudioRecord ( MediaRecorder . AudioSource . VOICE_RECOGNITION , SAMPLING_RATE_IN_HZ , CHANNEL_CONFIG , AUDIO_FORMAT , BUFFER_SIZE ); mVoice . voiceUploadMediaStart (); recorder . startRecording (); recordingInProgress . set ( true ); recordingThread = new Thread ( new RecordingRunnable (), \"Recording Thread\" ); recordingThread . start (); } private void stopRecording () { if ( null == recorder ) { return ; } recordingInProgress . set ( false ); recorder . stop (); recorder . release (); recorder = null ; recordingThread = null ; } Kotlin private val SAMPLING_RATE_IN_HZ = 16000 private val CHANNEL_CONFIG = AudioFormat . CHANNEL_IN_MONO private val AUDIO_FORMAT = AudioFormat . ENCODING_PCM_16BIT private val BUFFER_SIZE_FACTOR = 4 private val BUFFER_SIZE = AudioRecord . getMinBufferSize ( SAMPLING_RATE_IN_HZ , CHANNEL_CONFIG , AUDIO_FORMAT ) * BUFFER_SIZE_FACTOR private val recordingInProgress = AtomicBoolean ( false ) private var recorder : AudioRecord? = null private var recordingThread : Thread? = null private class RecordingRunnable : Runnable { override fun run () { val buffer = ByteArray ( BUFFER_SIZE ) while ( recordingInProgress . get ()) { val result : Int = recorder . read ( buffer , 0 , BUFFER_SIZE ) if ( result < 0 ) { throw RuntimeException ( \"Reading of audio buffer failed: \" + getBufferReadFailureReason ( result )) } mVoice . voiceUploadMediaUpload ( buffer ) } mVoice . voiceUploadMediaStop () } private fun getBufferReadFailureReason ( errorCode : Int ): String { return when ( errorCode ) { AudioRecord . ERROR_INVALID_OPERATION -> \"ERROR_INVALID_OPERATION\" AudioRecord . ERROR_BAD_VALUE -> \"ERROR_BAD_VALUE\" AudioRecord . ERROR_DEAD_OBJECT -> \"ERROR_DEAD_OBJECT\" AudioRecord . ERROR -> \"ERROR\" else -> \"Unknown ( $ errorCode )\" } } } private fun startRecording () { recorder = AudioRecord ( MediaRecorder . AudioSource . VOICE_RECOGNITION , SAMPLING_RATE_IN_HZ , CHANNEL_CONFIG , AUDIO_FORMAT , BUFFER_SIZE ) mVoice . voiceUploadMediaStart () recorder !! . startRecording () recordingInProgress . set ( true ) recordingThread = Thread ( RecordingRunnable (), \"Recording Thread\" ) recordingThread !! . start () } private fun stopRecording () { if ( null == recorder ) { return } recordingInProgress . set ( false ) recorder !! . stop () recorder !! . release () recorder = null recordingThread = null }","title":"\u8bed\u97f3\u6570\u636e\u4e0a\u62a5"},{"location":"voice_sdk/#\u8bed\u97f3\u6570\u636e\u5904\u7406\u534f\u8bae","text":"","title":"\u8bed\u97f3\u6570\u636e\u5904\u7406\u534f\u8bae"},{"location":"voice_sdk/#\u97f3\u91cf\u8bbe\u7f6e","text":"App \u9700\u8981\u6839\u636e\u4e0b\u53d1\u7684\u503c\u53bb\u8bbe\u7f6e\u7cfb\u7edf\u7684\u97f3\u91cf\u3002 \u63a5\u53e3\u8bf4\u660e boolean onSetVolume ( int vol ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 vol \u97f3\u91cf\u503c\uff0c\u53d6\u503c 0 ~ 100 \u8fd4\u56de\u503c \u5c06\u8bbe\u7f6e\u7684\u7ed3\u679c\u8fd4\u56de\u3002 \u793a\u4f8b\u4ee3\u7801 Java @Override public boolean onSetVolume ( int vol ) { Log . d ( TAG , \"onSetVolume:\" + vol ); int max = mAudioManager . getStreamMaxVolume ( AudioManager . STREAM_MUSIC ); try { mAudioManager . setStreamVolume ( AudioManager . STREAM_MUSIC , ( vol * max ) / 100 , AudioManager . FLAG_SHOW_UI ); } catch ( SecurityException e ) { e . printStackTrace (); } return true ; } Kotlin override fun onSetVolume ( vol : Int ): Boolean { Log . i ( TAG , \"onSetVolume: $ vol \" ) val max = mAudioManager !! . getStreamMaxVolume ( AudioManager . STREAM_MUSIC ) try { mAudioManager !! . setStreamVolume ( AudioManager . STREAM_MUSIC , vol * max / 100 , AudioManager . FLAG_SHOW_UI ) } catch ( e : SecurityException ) { e . printStackTrace () } return true }","title":"\u97f3\u91cf\u8bbe\u7f6e"},{"location":"voice_sdk/#\u5a92\u4f53\u63a7\u5236","text":"\u7f51\u5173\u4e0b\u53d1\u7684\u5a92\u4f53\u63a7\u5236\u6307\u4ee4\uff0cApp \u9700\u8981\u6839\u636e\u4e0b\u53d1\u7684\u6307\u4ee4\u6267\u884c\u5bf9\u4e8e\u7684\u64cd\u4f5c\u3002 \u63a5\u53e3\u8bf4\u660e boolean onControlCommand ( @ControlCommandType int ctl ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 ctl \u5a92\u4f53\u63a7\u5236\u6307\u4ee4\uff0c\u503c\u4e3a CTRL_CMD_XXX \u4e4b\u4e00\uff1a CTRL_CMD_MIC_OPEN CTRL_CMD_MIC_CLOSE CTRL_CMD_PLAY CTRL_CMD_PAUSE CTRL_CMD_BT_PLAY_OPEN CTRL_CMD_BT_PLAY_CLOSE CTRL_CMD_PLAY_NEXT CTRL_CMD_PLAY_PREV \u8fd4\u56de\u503c \u5c06\u8bbe\u7f6e\u7684\u7ed3\u679c\u8fd4\u56de\u3002","title":"\u5a92\u4f53\u63a7\u5236"},{"location":"voice_sdk/#\u97f3\u9891\u64ad\u653e\u8fdb\u5ea6\u540c\u6b65","text":"\u4e91\u7aef\u4e0b\u53d1\u540c\u6b65\u97f3\u9891\u64ad\u653e\u8fdb\u5ea6\u7684\u901a\u77e5\u3002 \u63a5\u53e3\u8bf4\u660e void onSyncAudio ();","title":"\u97f3\u9891\u64ad\u653e\u8fdb\u5ea6\u540c\u6b65"},{"location":"voice_sdk/#tts-\u6587\u672c\u540c\u6b65","text":"\u8bed\u97f3\u5bf9\u8bdd\u7684\u6587\u672c\u540c\u6b65\u56de\u8c03\uff0cAPP \u6216\u8bbe\u5907\u7aef\u63a5\u6536\u8be5\u6d88\u606f\u540e\u53ef\u4ee5\u5b9e\u65f6\u5728\u754c\u9762\u4e0a\u5c55\u793a\u3002 \u63a5\u53e3\u8bf4\u660e void onSyncDialogText ( String speaker , int id , String text ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 speaker \u8bf4\u8bdd\u5bf9\u8c61\uff0c \u503c\u4e3a \"human\" \u6216 \"robot\" id \u8be5\u8bb0\u5f55\u7684id\u53f7 text \u8bed\u97f3\u5bf9\u5e94\u7684\u6587\u672c","title":"TTS \u6587\u672c\u540c\u6b65"},{"location":"voice_sdk/#\u672c\u5730\u95f9\u949f","text":"\u672c\u5730\u95f9\u949f\u89e6\u53d1\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e void onAlarmClock ( String alarm ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 alarm \u672c\u5730\u95f9\u949f\u89e6\u53d1\u7684\u4e8b\u4ef6\uff0cJSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32","title":"\u672c\u5730\u95f9\u949f"},{"location":"voice_sdk/#\u4efb\u52a1\u63d0\u9192","text":"\u4e91\u7aef\u4e0b\u53d1\u7684\u4efb\u52a1\u63d0\u9192\u901a\u77e5\u3002 \u63a5\u53e3\u8bf4\u660e void onTaskAlert ( @TaskAlertType int type , String msg ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u4efb\u52a1\u7c7b\u578b\uff0c\u503c\u4e3a TASK_TYPE_XXX \u4e4b\u4e00\uff1a TASK_TYPE_NORMAL TASK_TYPE_CLOCK TASK_TYPE_ALERT TASK_TYPE_RING_TONE TASK_TYPE_CALL TASK_TYPE_CALL_TTS TASK_TYPE_INVALD msg \u4e0b\u53d1\u7684\u63d0\u9192\u4e8b\u4ef6\uff0cJSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32","title":"\u4efb\u52a1\u63d0\u9192"},{"location":"voice_sdk/#\u6635\u79f0\u8bbe\u7f6e","text":"App \u9700\u6839\u636e\u72b6\u6001\u8c03\u7528\u524d\u7aef\u8bed\u97f3\u63a5\u53e3\u8bbe\u7f6e\u6216\u5220\u9664\u6635\u79f0\u3002 \u63a5\u53e3\u8bf4\u660e boolean onSetNickName ( @SetNickNameType int mode , String nickname , String pinyin ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 mode \u6635\u79f0\u8bbe\u72b6\u6001\uff0c\u503c\u4e3a NICKNAME_XXX \u4e4b\u4e00\uff1a NICKNAME_SET NICNAME_DEL NICKNAME_INVALD nickname \u6635\u79f0\u4e2d\u6587\u540d pinyin \u6635\u79f0\u62fc\u97f3 \u8fd4\u56de\u503c \u5c06\u8bbe\u7f6e\u7684\u7ed3\u679c\u8fd4\u56de\u3002","title":"\u6635\u79f0\u8bbe\u7f6e"},{"location":"voice_sdk/#\u5b50\u8bbe\u5907\u8bed\u97f3\u914d\u7f51","text":"\u4e91\u7aef\u8bc6\u522b\u5230\u914d\u7f51\u610f\u56fe\u540e\uff0c\u89e6\u53d1\u5f00\u542f/\u5173\u95ed\u5b50\u8bbe\u5907\u914d\u7f51\u8bf7\u6c42\u56de\u8c03\u3002 \u63a5\u53e3\u8bf4\u660e void onThingConfig ( @ThingConfigType int mode , String token , int timeout ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 mode \u914d\u7f51\u72b6\u6001\uff0c\u503c\u4e3a THING_CONFIG_XXX \u4e4b\u4e00\uff1a THING_CONFIG_START THING_CONFIG_STOP THING_CONFIG_INVALD token \u7ed9wifi\u8bbe\u5907\u914d\u7f51\u65f6\u9700\u8981token timeout \u914d\u7f51\u8d85\u65f6\u65f6\u95f4","title":"\u5b50\u8bbe\u5907\u8bed\u97f3\u914d\u7f51"},{"location":"voice_sdk/#\u8bed\u97f3\u4e0a\u4f20\u72b6\u6001","text":"\u8bed\u97f3\u4e0a\u4f20\u4e91\u7aef\uff0c\u51fa\u73b0\u5f02\u5e38\u5c06\u89e6\u53d1\u8be5\u56de\u8c03\u3002 \u63a5\u53e3\u8bf4\u660e void onUploadMediaStatus ( @UploadMediaStatusType int status ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 status \u8bed\u97f3\u4e0a\u4f20\u72b6\u6001\uff0c \u503c\u4e3a UPLOAD_XXX \u4e4b\u4e00: UPLOAD_NONE UPLOAD_NETWORK_ERR","title":"\u8bed\u97f3\u4e0a\u4f20\u72b6\u6001"},{"location":"voice_sdk/#\u4e91\u7aef\u5a92\u4f53\u6570\u636e\u4e0b\u53d1","text":"\u6536\u5230\u4e91\u7aef\u5a92\u4f53\u6570\u636e\u65f6\u89e6\u53d1\u8be5\u56de\u8c03\u3002 \u63a5\u53e3\u8bf4\u660e void onCloudMedia ( MediaAttribute [] mediaAttributes ); MediaAttribute \u6210\u5458 \u8bf4\u660e mDecodeType \u97f3\u9891\u7f16\u7801\u7c7b\u578b\uff0c\u503c\u4e3a DECODER_TYPE_XXX \u4e4b\u4e00: DECODER_TYPE_WAV DECODER_TYPE_MP3 DECODER_TYPE_SPEEX DECODER_TYPE_AAC DECODER_TYPE_AMR DECODER_TYPE_M4A DECODER_TYPE_PCM DECODER_TYPE_INVALD mLength \u6570\u636e\u5927\u5c0f\u957f\u5ea6 mDuration \u97f3\u9891\u7684\u65f6\u957f mMediaType \u5a92\u4f53\u7c7b\u578b\uff0c\u503c\u4e3a MEDIA_TYPE_XXX \u4e4b\u4e00: MEDIA_TYPE_MEDIA MEDIA_TYPE_TTS MEDIA_TYPE_INVALD mUrl \u97f3\u9891\u6587\u4ef6\u7684 URL mFollowAction \u662f\u5426\u7ee7\u7eed\u5bf9\u8bdd\uff0c\u503c\u4e3aFOLLOW_ACTION_KEEP_SESSION\u6216FOLLOW_ACTION_NO_KEEP_SESSION mSessionId \u5bf9\u8bdd\u7684 ID \u793a\u4f8b\u4ee3\u7801 Java @Override public void onCloudMedia ( MediaAttribute [] mediaAttributes ) { requestSpeakerMedia ( mediaAttributes ); } private void requestSpeakerMedia ( final MediaAttribute [] mediaAttributes ) { CountDownLatch latch = new CountDownLatch ( mediaAttributes . length ); ArrayList < String > list = new ArrayList <> (); boolean isDialog = false ; for ( MediaAttribute mediaAttribute : mediaAttributes ) { if ( ! TextUtils . isEmpty ( mediaAttribute . mUrl )) { String name = String . format ( Locale . getDefault (), \"/sdcard/tuya_speech_files/%s_%d_speaker_tmp.mp3\" , mediaAttribute . mMediaType == MediaAttribute . MEDIA_TYPE_TTS ? \"tts\" : \"audio\" , System . currentTimeMillis ()); if ( mediaAttribute . mMediaType == MediaAttribute . MEDIA_TYPE_TTS ) { list . add ( 0 , name ); if ( mediaAttribute . mFollowAction == 1 ) { isDialog = true ; } } else { list . add ( name ); } requestSpeakerMedia ( mediaAttribute . mUrl , mediaAttribute . mRequestBody , name , latch ); } } try { latch . await (); } catch ( InterruptedException e ) { e . printStackTrace (); } if ( mSpeechHandler != null ) { mSpeechHandler . removeMessages ( SpeechCallback . TIMEOUT_MSG_WHAT ); //\u8fc7\u6ee4\u7a7a\u6587\u4ef6 if ( list . size () > 0 ) { for ( int i = list . size () - 1 ; i >= 0 ; i -- ) { File file = new File ( list . get ( i )); if ( ! file . exists ()) { list . remove ( i ); } } } if ( list . size () > 0 ) { Message msg = Message . obtain (); msg . obj = list ; if ( isDialog ) { msg . what = SpeechCallback . DIALOG_MSG_WHAT ; } else { msg . what = SpeechCallback . SUCCESS_MSG_WHAT ; } mSpeechHandler . sendMessage ( msg ); } } } private void requestSpeakerMedia ( final String url , String requestStr , final String name , final CountDownLatch latch ) { Request request ; if ( TextUtils . isEmpty ( requestStr )) { request = new Request . Builder () . url ( url ) . get () . build (); } else { MediaType JSON = MediaType . parse ( \"application/json; charset=utf-8\" ); RequestBody requestBody = RequestBody . create ( JSON , requestStr ); request = new Request . Builder () . url ( url ) . post ( requestBody ) . build (); } mHttpClient . newCall ( request ). enqueue ( new Callback () { @Override public void onFailure ( Call call , IOException e ) { latch . countDown (); Log . w ( TAG , \"requestSpeakerMedia onFailure\" ); } @Override public void onResponse ( Call call , Response response ) { Log . w ( TAG , \"requestSpeakerMedia onResponse\" ); if ( response . body () == null ) { latch . countDown (); return ; } InputStream inputStream = response . body (). byteStream (); FileOutputStream fileOutputStream ; try { File file = new File ( name ); if ( file . exists ()) { file . delete (); } fileOutputStream = new FileOutputStream ( file ); byte [] buffer = new byte [ 1024 ] ; int length = 0 ; while (( length = inputStream . read ( buffer )) != - 1 ) { fileOutputStream . write ( buffer , 0 , length ); } fileOutputStream . flush (); if ( file . length () <= 0 ) { file . delete (); Log . w ( TAG , name + \" empty\" ); } else { Log . w ( TAG , name + \" saved\" ); } } catch ( Exception e ) { Log . e ( TAG , \"\" + e . getMessage ()); e . printStackTrace (); } finally { latch . countDown (); } } }); } Kotlin","title":"\u4e91\u7aef\u5a92\u4f53\u6570\u636e\u4e0b\u53d1"},{"location":"voice_sdk/#oem-\u5b9a\u5236\u6570\u636e\u900f\u4f20","text":"\u900f\u4f20OEM\u5b9a\u5236\u7684 MQTT 501 \u63a5\u53e3\uff0c\u5177\u4f53\u534f\u8bae\u5185\u5bb9\u7531\u4e91\u7aef\u4e0eOEM\u5ba2\u6237\u5236\u5b9a\uff0c\u5e76\u63d0\u4f9b\u8bf4\u660e\u3002 \u63a5\u53e3\u8bf4\u660e void onCloudCustom ( String type , String msg ); \u53c2\u6570\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 type \u63a5\u53e3\u7c7b\u578b msg Json\u683c\u5f0f\u6d88\u606f","title":"OEM \u5b9a\u5236\u6570\u636e\u900f\u4f20"},{"location":"voice_sdk/#\u97f3\u4e50\u97f3\u9891\u63a7\u5236","text":"","title":"\u97f3\u4e50/\u97f3\u9891\u63a7\u5236"},{"location":"voice_sdk/#\u97f3\u9891\u5207\u6362","text":"","title":"\u97f3\u9891\u5207\u6362"},{"location":"voice_sdk/#\u64ad\u653e\u4e0a\u4e00\u9996","text":"\u63a5\u53e3\u8bf4\u660e int playPrev ();","title":"\u64ad\u653e\u4e0a\u4e00\u9996"},{"location":"voice_sdk/#\u64ad\u653e\u4e0b\u4e00\u9996","text":"\u63a5\u53e3\u8bf4\u660e int playNext ();","title":"\u64ad\u653e\u4e0b\u4e00\u9996"},{"location":"voice_sdk/#\u83b7\u53d6\u64ad\u653e\u6a21\u5f0f","text":"\u63a5\u53e3\u8bf4\u660e int getPlayerMode (); \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de\u503c \u542b\u4e49 int(PlayerMode) \u4e91\u7aef\u64ad\u653e\u5668\u64ad\u653e\u6a21\u5f0f\uff0c\u503c\u4e3aMODE_XXX\u4e4b\u4e00\uff1a MODE_NORMAL:\u987a\u5e8f\u64ad\u653e MODE_SHUFFLE:\u968f\u673a\u64ad\u653e MODE_REPEAT_ONE:\u5355\u66f2\u5faa\u73af\u64ad\u653e MODE_REPEAT_ALL:\u5217\u8868\u5faa\u73af\u64ad\u653e","title":"\u83b7\u53d6\u64ad\u653e\u6a21\u5f0f"},{"location":"voice_sdk/#\u8bbe\u7f6e\u64ad\u653e\u6a21\u5f0f","text":"\u63a5\u53e3\u8bf4\u660e boolean setPlayerMode ( @PlayerMode int mode );","title":"\u8bbe\u7f6e\u64ad\u653e\u6a21\u5f0f"},{"location":"voice_sdk/#\u83b7\u53d6\u5f53\u524d\u64ad\u653e\u7684\u6b4c\u66f2\u4fe1\u606f","text":"\u63a5\u53e3\u8bf4\u660e AudioBean getCurrentAudio () \uff1b","title":"\u83b7\u53d6\u5f53\u524d\u64ad\u653e\u7684\u6b4c\u66f2\u4fe1\u606f"},{"location":"voice_sdk/#\u83b7\u53d6\u5f53\u524d\u7684\u64ad\u653e\u5217\u8868","text":"\u63a5\u53e3\u8bf4\u660e List < AudioBean > getPlayList ( int start , int end ) \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de AudioBean \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u542b\u4e49 start \u5217\u8868\u8d77\u59cb\u4e0b\u6807 end \u5217\u8868\u7ed3\u675f\u4e0b\u6807 \u8fd4\u56de\u503c\u8bf4\u660e \u8fd4\u56de AudioBean \u7684\u5217\u8868","title":"\u83b7\u53d6\u5f53\u524d\u7684\u64ad\u653e\u5217\u8868"},{"location":"voice_sdk/#audiobean","text":"\u6210\u5458 \u8bf4\u660e indexId \u5728\u64ad\u653e\u5217\u8868\u4e2d\u7684\u4e0b\u6807 audioId \u97f3\u9891 ID albumId \u4e13\u8f91 ID albumName \u4e13\u8f91\u540d\u5b57 audioName \u97f3\u9891\u540d\u5b57 artist \u827a\u672f\u5bb6 imgUrl \u5c01\u9762\u56fe\u7247\u7684 URL source \u97f3\u9891\u63d0\u4f9b\u5546 ID audioUrl \u97f3\u9891\u6587\u4ef6\u7684 URL duration \u97f3\u9891\u7684\u65f6\u957f","title":"AudioBean"},{"location":"zigbee_test/","text":"Zigbee \u6a21\u5757\u4ea7\u6d4b \u8bbe\u7f6e\u4ea7\u6d4b\u56de\u8c03 \u63a5\u53e3\u8bf4\u660e \u901a\u8fc7 TuyaGatewaySdk \u5355\u4f8b\u8bbe\u7f6e\u56de\u8c03\u5b9e\u73b0 void setZigbeeTestCallbacks ( ZigbeeTestCallbacks callbacks ) \uff1b \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e ZigbeeTestCallbacks Zigbee \u4ea7\u6d4b\u56de\u8c03 \u56de\u8c03\u8bf4\u660e /** Zigbee \u6d4b\u8bd5\u7ed3\u679c * @param receiveCount \u63a5\u6536\u5230\u7684\u5305\u7684\u4e2a\u6570 */ void onZigbeeTestResult ( int receiveCount ) { } \u542f\u52a8\u4ea7\u6d4b \u63a5\u53e3\u8bf4\u660e Zigbee \u4ea7\u6d4b\u9700\u8981\u5728\u7f51\u5173\u521d\u59cb\u5316\u5b8c\u6210\u540e\u8fdb\u884c\u3002 int zigbeeTestStart ( final int channel , final int packageCount , final int timeout ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e channel zigbee dongle \u7684\u4fe1\u9053 packageCount \u6d4b\u8bd5\u603b\u5171\u53d1\u9001\u591a\u5c11\u4e2a\u5305 timeout \u6d4b\u8bd5\u65f6\u957f\uff0c\u5355\u4f4d\u4e3a\u79d2\uff0c\u5efa\u8bae10\u79d2\u4ee5\u4e0a \u793a\u4f8b\u4ee3\u7801 Java mGateway . setZigbeeTestCallbacks ( new ZigbeeTestCallbacks () { @Override public void onZigbeeTestResult ( int receiveCount ) { int result ; Log . d ( TAG , \"Received packages:\" + receiveCount ); //\u5224\u65ad\u89c4\u5b9a\u65f6\u95f4\u5185\u6536\u5230\u7684\u5305\u4e2a\u6570\u662f\u5426\u6ee1\u8db3\u6d4b\u8bd5\u8981\u6c42 if ( receiveCount < 12 ) { Log . i ( TAG , \"Zigbee RF Test Failed\" ); } else { Log . i ( TAG , \"Zigbee RF Test Pass\" ); } } }); mGateway . zigbeeTestStart ( 12 , 20 , 10 ); Kotlin mGateway . setZigbeeTestCallbacks ( object : ZigbeeTestCallbacks () { fun onZigbeeTestResult ( receiveCount : Int ) { var result : Int Log . d ( GatewayDemoActivity . TAG , \"Received packages: $ receiveCount \" ) //\u5224\u65ad\u89c4\u5b9a\u65f6\u95f4\u5185\u6536\u5230\u7684\u5305\u4e2a\u6570\u662f\u5426\u6ee1\u8db3\u6d4b\u8bd5\u8981\u6c42 if ( receiveCount < 12 ) { Log . i ( GatewayDemoActivity . TAG , \"Zigbee RF Test Failed\" ) } else { Log . i ( GatewayDemoActivity . TAG , \"Zigbee RF Test Pass\" ) } } }) mGateway . zigbeeTestStart ( 12 , 20 , 10 )","title":"\u6a21\u5757\u4ea7\u6d4b"},{"location":"zigbee_test/#zigbee-\u6a21\u5757\u4ea7\u6d4b","text":"","title":"Zigbee \u6a21\u5757\u4ea7\u6d4b"},{"location":"zigbee_test/#\u8bbe\u7f6e\u4ea7\u6d4b\u56de\u8c03","text":"\u63a5\u53e3\u8bf4\u660e \u901a\u8fc7 TuyaGatewaySdk \u5355\u4f8b\u8bbe\u7f6e\u56de\u8c03\u5b9e\u73b0 void setZigbeeTestCallbacks ( ZigbeeTestCallbacks callbacks ) \uff1b \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e ZigbeeTestCallbacks Zigbee \u4ea7\u6d4b\u56de\u8c03 \u56de\u8c03\u8bf4\u660e /** Zigbee \u6d4b\u8bd5\u7ed3\u679c * @param receiveCount \u63a5\u6536\u5230\u7684\u5305\u7684\u4e2a\u6570 */ void onZigbeeTestResult ( int receiveCount ) { }","title":"\u8bbe\u7f6e\u4ea7\u6d4b\u56de\u8c03"},{"location":"zigbee_test/#\u542f\u52a8\u4ea7\u6d4b","text":"\u63a5\u53e3\u8bf4\u660e Zigbee \u4ea7\u6d4b\u9700\u8981\u5728\u7f51\u5173\u521d\u59cb\u5316\u5b8c\u6210\u540e\u8fdb\u884c\u3002 int zigbeeTestStart ( final int channel , final int packageCount , final int timeout ); \u53c2\u6570\u8bf4\u660e \u53c2\u6570 \u8bf4\u660e channel zigbee dongle \u7684\u4fe1\u9053 packageCount \u6d4b\u8bd5\u603b\u5171\u53d1\u9001\u591a\u5c11\u4e2a\u5305 timeout \u6d4b\u8bd5\u65f6\u957f\uff0c\u5355\u4f4d\u4e3a\u79d2\uff0c\u5efa\u8bae10\u79d2\u4ee5\u4e0a \u793a\u4f8b\u4ee3\u7801 Java mGateway . setZigbeeTestCallbacks ( new ZigbeeTestCallbacks () { @Override public void onZigbeeTestResult ( int receiveCount ) { int result ; Log . d ( TAG , \"Received packages:\" + receiveCount ); //\u5224\u65ad\u89c4\u5b9a\u65f6\u95f4\u5185\u6536\u5230\u7684\u5305\u4e2a\u6570\u662f\u5426\u6ee1\u8db3\u6d4b\u8bd5\u8981\u6c42 if ( receiveCount < 12 ) { Log . i ( TAG , \"Zigbee RF Test Failed\" ); } else { Log . i ( TAG , \"Zigbee RF Test Pass\" ); } } }); mGateway . zigbeeTestStart ( 12 , 20 , 10 ); Kotlin mGateway . setZigbeeTestCallbacks ( object : ZigbeeTestCallbacks () { fun onZigbeeTestResult ( receiveCount : Int ) { var result : Int Log . d ( GatewayDemoActivity . TAG , \"Received packages: $ receiveCount \" ) //\u5224\u65ad\u89c4\u5b9a\u65f6\u95f4\u5185\u6536\u5230\u7684\u5305\u4e2a\u6570\u662f\u5426\u6ee1\u8db3\u6d4b\u8bd5\u8981\u6c42 if ( receiveCount < 12 ) { Log . i ( GatewayDemoActivity . TAG , \"Zigbee RF Test Failed\" ) } else { Log . i ( GatewayDemoActivity . TAG , \"Zigbee RF Test Pass\" ) } } }) mGateway . zigbeeTestStart ( 12 , 20 , 10 )","title":"\u542f\u52a8\u4ea7\u6d4b"}]}